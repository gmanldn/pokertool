{
  "metadata": {
    "version": "1.0.0",
    "created": "2025-10-18T11:04:58.182420",
    "last_updated": "2025-10-18T11:04:59.887015",
    "node_count": 1283,
    "edge_count": 1267,
    "analyzers_run": []
  },
  "nodes": [
    {
      "id": "src.pokertool.roi_tracking_system",
      "type": "module",
      "path": "src/pokertool/roi_tracking_system.py",
      "docstring": "SCRAPE-015: Region-of-Interest (ROI) Tracking System\n====================================================\n\nTrack which screen regions change between frames and only process those regions.\nExpected improvement: 3-4x faster when table is stable (most of the time).\n\nModule: pokertool.roi_tracking_system\nVersion: 1.0.0\nCreated: 2025-10-15\nAuthor: PokerTool Development Team\nLicense: MIT",
      "version": "'1.0.0'",
      "author": null,
      "complexity": 29,
      "loc": 396,
      "dependencies": [
        "logging",
        "hashlib",
        "typing",
        "dataclasses",
        "numpy"
      ]
    },
    {
      "id": "src.pokertool.roi_tracking_system.ROI",
      "type": "class",
      "name": "ROI",
      "module": "src.pokertool.roi_tracking_system",
      "docstring": "Region of Interest definition.",
      "bases": [],
      "methods": [
        "get_bounds",
        "area"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 31
    },
    {
      "id": "src.pokertool.roi_tracking_system.ROIState",
      "type": "class",
      "name": "ROIState",
      "module": "src.pokertool.roi_tracking_system",
      "docstring": "State tracking for a single ROI.",
      "bases": [],
      "methods": [
        "update_hash"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 49
    },
    {
      "id": "src.pokertool.roi_tracking_system.ROITrackingMetrics",
      "type": "class",
      "name": "ROITrackingMetrics",
      "module": "src.pokertool.roi_tracking_system",
      "docstring": "Metrics for ROI tracking system.",
      "bases": [],
      "methods": [
        "update"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 82
    },
    {
      "id": "src.pokertool.roi_tracking_system.ROITrackingSystem",
      "type": "class",
      "name": "ROITrackingSystem",
      "module": "src.pokertool.roi_tracking_system",
      "docstring": "Track which screen regions change between frames and only process those regions.\n\nUses perceptual hashing per ROI to detect changes with configurable sensitivity.",
      "bases": [],
      "methods": [
        "__init__",
        "_initialize_standard_rois",
        "scale_rois_to_resolution",
        "compute_region_hash",
        "detect_changed_regions",
        "should_process_region",
        "get_roi",
        "get_all_rois",
        "get_changed_rois",
        "reset",
        "get_metrics"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 19,
      "line_number": 107
    },
    {
      "id": "src.pokertool.roi_tracking_system.get_roi_tracker",
      "type": "function",
      "name": "get_roi_tracker",
      "module": "src.pokertool.roi_tracking_system",
      "signature": "def get_roi_tracker(sensitivity: float) -> ROITrackingSystem",
      "docstring": "Get global ROI tracking system instance.",
      "parameters": [
        {
          "name": "sensitivity",
          "annotation": "float",
          "default": "0.95",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "ROITrackingSystem",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "ROITrackingSystem"
      ],
      "raises": [],
      "line_number": 352
    },
    {
      "id": "src.pokertool.roi_tracking_system.reset_roi_tracker",
      "type": "function",
      "name": "reset_roi_tracker",
      "module": "src.pokertool.roi_tracking_system",
      "signature": "def reset_roi_tracker()",
      "docstring": "Reset global ROI tracker.",
      "parameters": [],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "_roi_tracker.reset"
      ],
      "raises": [],
      "line_number": 360
    },
    {
      "id": "src.pokertool.performance_telemetry",
      "type": "module",
      "path": "src/pokertool/performance_telemetry.py",
      "docstring": "Performance Telemetry System for PokerTool\n==========================================\n\nHigh-performance telemetry system for capturing detailed timing data\nwith minimal overhead. Designed to identify performance bottlenecks\nduring GUI startup and runtime operations.\n\nFeatures:\n- Thread-safe SQLite database with compression\n- Batch writes for minimal overhead (<10ms per operation)\n- Automatic cleanup to maintain <1GB database\n- Rich contextual data (CPU, memory, stack depth)\n- Easy-to-use decorators and context managers\n\nUsage:\n    from pokertool.performance_telemetry import timed, telemetry_section\n\n    @timed(category='module_init', operation='gto_solver')\n    def init_solver(self):\n        # Function is automatically timed\n        pass\n\n    with telemetry_section('ui_build', 'autopilot_tab'):\n        # Section is automatically timed\n        build_tab()\n\nVersion: 1.0.0",
      "version": null,
      "author": null,
      "complexity": 60,
      "loc": 502,
      "dependencies": [
        "functools",
        "atexit",
        "sqlite3",
        "pathlib",
        "time",
        "__future__",
        "zlib",
        "typing",
        "datetime",
        "dataclasses",
        "json",
        "contextlib",
        "os",
        "threading"
      ]
    },
    {
      "id": "src.pokertool.performance_telemetry.TelemetryEntry",
      "type": "class",
      "name": "TelemetryEntry",
      "module": "src.pokertool.performance_telemetry",
      "docstring": "Single telemetry entry.",
      "bases": [],
      "methods": [
        "to_db_tuple"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 73
    },
    {
      "id": "src.pokertool.performance_telemetry.PerformanceTelemetry",
      "type": "class",
      "name": "PerformanceTelemetry",
      "module": "src.pokertool.performance_telemetry",
      "docstring": "High-performance telemetry system with batched writes and compression.\n\nThread-safe, minimal overhead, automatic cleanup.",
      "bases": [],
      "methods": [
        "__init__",
        "_init_database",
        "_get_next_id",
        "_get_system_metrics",
        "_get_stack_depth",
        "record_start",
        "record_end",
        "record_instant",
        "_add_to_buffer",
        "_flush_buffer",
        "_flush_loop",
        "cleanup_old_data",
        "shutdown",
        "get_statistics"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 41,
      "line_number": 110
    },
    {
      "id": "src.pokertool.performance_telemetry.timed",
      "type": "function",
      "name": "timed",
      "module": "src.pokertool.performance_telemetry",
      "signature": "def timed(category: str, operation: Optional[str], capture_args: bool)",
      "docstring": "Decorator to automatically time function execution.\n\nArgs:\n    category: Telemetry category (e.g., 'module_init', 'ui_build')\n    operation: Operation name (defaults to function name)\n    capture_args: If True, capture function arguments in details\n\nUsage:\n    @timed(category='module_init', operation='gto_solver')\n    def init_solver(self):\n        # Automatically timed\n        pass",
      "parameters": [
        {
          "name": "category",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "operation",
          "annotation": "Optional[str]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "capture_args",
          "annotation": "bool",
          "default": "False",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 5,
      "calls": [
        "get_telemetry",
        "func",
        "str",
        "str",
        "telemetry.record_start",
        "time.time",
        "func",
        "telemetry.record_end",
        "telemetry.record_end",
        "str",
        "wraps"
      ],
      "raises": [],
      "line_number": 386
    },
    {
      "id": "src.pokertool.performance_telemetry.telemetry_section",
      "type": "function",
      "name": "telemetry_section",
      "module": "src.pokertool.performance_telemetry",
      "signature": "def telemetry_section(category: str, operation: str, details: Optional[Dict[str, Any]])",
      "docstring": "Context manager for timing code sections.\n\nUsage:\n    with telemetry_section('ui_build', 'autopilot_tab'):\n        build_autopilot_tab()",
      "parameters": [
        {
          "name": "category",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "operation",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "details",
          "annotation": "Optional[Dict[str, Any]]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [
        "contextmanager"
      ],
      "is_async": false,
      "is_generator": true,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "get_telemetry",
        "telemetry.record_start",
        "time.time",
        "telemetry.record_end",
        "telemetry.record_end",
        "str"
      ],
      "raises": [],
      "line_number": 431
    },
    {
      "id": "src.pokertool.performance_telemetry.telemetry_instant",
      "type": "function",
      "name": "telemetry_instant",
      "module": "src.pokertool.performance_telemetry",
      "signature": "def telemetry_instant(category: str, operation: str, details: Optional[Dict[str, Any]])",
      "docstring": "Record instant event (no duration).\n\nUsage:\n    telemetry_instant('startup', 'splash_shown', {'version': '66.0.0'})",
      "parameters": [
        {
          "name": "category",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "operation",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "details",
          "annotation": "Optional[Dict[str, Any]]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "get_telemetry",
        "telemetry.record_instant"
      ],
      "raises": [],
      "line_number": 455
    },
    {
      "id": "src.pokertool.performance_telemetry.init_telemetry",
      "type": "function",
      "name": "init_telemetry",
      "module": "src.pokertool.performance_telemetry",
      "signature": "def init_telemetry(db_path: Path) -> PerformanceTelemetry",
      "docstring": "Initialize global telemetry instance.",
      "parameters": [
        {
          "name": "db_path",
          "annotation": "Path",
          "default": "TELEMETRY_DB_PATH",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "PerformanceTelemetry",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "PerformanceTelemetry",
        "print"
      ],
      "raises": [],
      "line_number": 467
    },
    {
      "id": "src.pokertool.performance_telemetry.get_telemetry",
      "type": "function",
      "name": "get_telemetry",
      "module": "src.pokertool.performance_telemetry",
      "signature": "def get_telemetry() -> Optional[PerformanceTelemetry]",
      "docstring": "Get global telemetry instance.",
      "parameters": [],
      "return_type": "Optional[PerformanceTelemetry]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [],
      "raises": [],
      "line_number": 478
    },
    {
      "id": "src.pokertool.performance_telemetry.shutdown_telemetry",
      "type": "function",
      "name": "shutdown_telemetry",
      "module": "src.pokertool.performance_telemetry",
      "signature": "def shutdown_telemetry()",
      "docstring": "Shutdown global telemetry instance.",
      "parameters": [],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "_telemetry_instance.shutdown"
      ],
      "raises": [],
      "line_number": 483
    },
    {
      "id": "src.pokertool.card_recognizer",
      "type": "module",
      "path": "src/pokertool/card_recognizer.py",
      "docstring": "Card recognition utilities backed by OpenCV template matching.\n\nThe implementation intentionally keeps the public API small and defensive so\nthat downstream modules can depend on predictable behaviour even when the\nruntime environment does not provide OpenCV or previously learned templates.",
      "version": null,
      "author": null,
      "complexity": 68,
      "loc": 357,
      "dependencies": [
        "logging",
        "pathlib",
        "__future__",
        "typing",
        "dataclasses",
        "numpy",
        "pickle"
      ]
    },
    {
      "id": "src.pokertool.card_recognizer.Card",
      "type": "class",
      "name": "Card",
      "module": "src.pokertool.card_recognizer",
      "docstring": null,
      "bases": [],
      "methods": [
        "__post_init__",
        "__str__",
        "__repr__",
        "suit_name"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 6,
      "line_number": 36
    },
    {
      "id": "src.pokertool.card_recognizer.CardTemplate",
      "type": "class",
      "name": "CardTemplate",
      "module": "src.pokertool.card_recognizer",
      "docstring": "Serialized representation of a learned card or card component.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 58
    },
    {
      "id": "src.pokertool.card_recognizer.RecognitionResult",
      "type": "class",
      "name": "RecognitionResult",
      "module": "src.pokertool.card_recognizer",
      "docstring": "Information returned by card recognition.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 70
    },
    {
      "id": "src.pokertool.card_recognizer.CardRecognitionEngine",
      "type": "class",
      "name": "CardRecognitionEngine",
      "module": "src.pokertool.card_recognizer",
      "docstring": "Card recognition orchestrator built on top of OpenCV template matching.\n\nThe engine supports learning card templates on the fly and persists them\nto disk so that subsequent runs can reuse the information.",
      "bases": [],
      "methods": [
        "__init__",
        "recognize_card",
        "recognize_multiple_cards",
        "learn_card_from_image",
        "learn_full_deck",
        "_preprocess_card_image",
        "_match_full_card",
        "_match_rank",
        "_match_suit",
        "_match_region",
        "_templates_path",
        "_load_templates",
        "_save_templates"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 62,
      "line_number": 79
    },
    {
      "id": "src.pokertool.bayesian_profiler",
      "type": "module",
      "path": "src/pokertool/bayesian_profiler.py",
      "docstring": "Bayesian Opponent Profiler Module\n\nThis module implements Bayesian inference for opponent tendency prediction,\nproviding prior distribution models, online belief updating, uncertainty\nquantification, action prediction, and convergence guarantees.\n\nExpected Accuracy Gain: 15-20% improvement in opponent exploitation\n\nAuthor: PokerTool Development Team\nDate: 2025-01-10",
      "version": null,
      "author": null,
      "complexity": 81,
      "loc": 556,
      "dependencies": [
        "math",
        "pathlib",
        "typing",
        "collections",
        "dataclasses",
        "json",
        "enum",
        "datetime"
      ]
    },
    {
      "id": "src.pokertool.bayesian_profiler.PlayerTendency",
      "type": "class",
      "name": "PlayerTendency",
      "module": "src.pokertool.bayesian_profiler",
      "docstring": "Player tendency types",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 24
    },
    {
      "id": "src.pokertool.bayesian_profiler.PlayerStyle",
      "type": "class",
      "name": "PlayerStyle",
      "module": "src.pokertool.bayesian_profiler",
      "docstring": "Overall player style classifications",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 42
    },
    {
      "id": "src.pokertool.bayesian_profiler.BetaDistribution",
      "type": "class",
      "name": "BetaDistribution",
      "module": "src.pokertool.bayesian_profiler",
      "docstring": "Beta distribution for modeling binary outcomes",
      "bases": [],
      "methods": [
        "update",
        "mean",
        "variance",
        "std",
        "confidence_interval",
        "sample_size"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 7,
      "line_number": 52
    },
    {
      "id": "src.pokertool.bayesian_profiler.GaussianDistribution",
      "type": "class",
      "name": "GaussianDistribution",
      "module": "src.pokertool.bayesian_profiler",
      "docstring": "Gaussian distribution for continuous values",
      "bases": [],
      "methods": [
        "update",
        "mean",
        "variance",
        "std"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 91
    },
    {
      "id": "src.pokertool.bayesian_profiler.PlayerProfile",
      "type": "class",
      "name": "PlayerProfile",
      "module": "src.pokertool.bayesian_profiler",
      "docstring": "Complete Bayesian profile for a player",
      "bases": [],
      "methods": [
        "__post_init__"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 4,
      "line_number": 120
    },
    {
      "id": "src.pokertool.bayesian_profiler.BeliefUpdater",
      "type": "class",
      "name": "BeliefUpdater",
      "module": "src.pokertool.bayesian_profiler",
      "docstring": "Online belief updating system",
      "bases": [],
      "methods": [
        "__init__",
        "update_tendency",
        "update_continuous_stat",
        "has_converged",
        "get_reliability_score"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 9,
      "line_number": 145
    },
    {
      "id": "src.pokertool.bayesian_profiler.ActionPredictor",
      "type": "class",
      "name": "ActionPredictor",
      "module": "src.pokertool.bayesian_profiler",
      "docstring": "Predict opponent actions using Bayesian beliefs",
      "bases": [],
      "methods": [
        "__init__",
        "predict_action_probability",
        "_adjust_for_context",
        "predict_best_action"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 20,
      "line_number": 204
    },
    {
      "id": "src.pokertool.bayesian_profiler.BayesianOpponentProfiler",
      "type": "class",
      "name": "BayesianOpponentProfiler",
      "module": "src.pokertool.bayesian_profiler",
      "docstring": "Main Bayesian opponent profiling system",
      "bases": [],
      "methods": [
        "__init__",
        "get_profile",
        "observe_action",
        "_update_player_style",
        "predict_action",
        "get_exploitation_strategy",
        "get_uncertainty_quantification",
        "export_profile",
        "save_profiles",
        "_load_profiles"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 36,
      "line_number": 315
    },
    {
      "id": "src.pokertool.system_health_checker",
      "type": "module",
      "path": "src/pokertool/system_health_checker.py",
      "docstring": "# POKERTOOL-HEADER-START\n# ---\n# schema: pokerheader.v1\n# project: pokertool\n# file: src/pokertool/system_health_checker.py\n# version: v86.0.0\n# last_commit: '2025-10-16T00:00:00Z'\n# fixes:\n# - date: '2025-10-16'\n#   summary: Created comprehensive system health checker with 50+ health checks\n# ---\n# POKERTOOL-HEADER-END\n\nSystem Health Checker for PokerTool\n===================================\n\nComprehensive health monitoring system that periodically checks the status\nof all pokertool components across Backend, Screen Scraping, ML/Analytics,\nGUI, and Advanced Features.\n\nFeatures:\n- 50+ individual health checks\n- Periodic background checking (default: 30 seconds)\n- Timeout protection for all checks\n- Detailed error logging\n- Real-time WebSocket broadcasting\n- Category-based organization",
      "version": null,
      "author": null,
      "complexity": 86,
      "loc": 1076,
      "dependencies": [
        "logging",
        "pathlib",
        "time",
        "__future__",
        "typing",
        "dataclasses",
        "datetime",
        "os",
        "asyncio"
      ]
    },
    {
      "id": "src.pokertool.system_health_checker.HealthStatus",
      "type": "class",
      "name": "HealthStatus",
      "module": "src.pokertool.system_health_checker",
      "docstring": "Health status for a single feature.",
      "bases": [],
      "methods": [
        "to_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 84
    },
    {
      "id": "src.pokertool.system_health_checker.HealthCheck",
      "type": "class",
      "name": "HealthCheck",
      "module": "src.pokertool.system_health_checker",
      "docstring": "Individual health check registration.",
      "bases": [],
      "methods": [
        "__init__"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 100
    },
    {
      "id": "src.pokertool.system_health_checker.SystemHealthChecker",
      "type": "class",
      "name": "SystemHealthChecker",
      "module": "src.pokertool.system_health_checker",
      "docstring": "Comprehensive system health checker for all pokertool components.\n\nManages registration and execution of health checks, caches results,\nand provides periodic background checking with WebSocket broadcasting.",
      "bases": [],
      "methods": [
        "__init__",
        "register_check",
        "set_broadcast_callback",
        "run_check",
        "run_all_checks",
        "_periodic_check_loop",
        "start_periodic_checks",
        "stop_periodic_checks",
        "get_summary"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 29,
      "line_number": 117
    },
    {
      "id": "src.pokertool.system_health_checker._join_url",
      "type": "function",
      "name": "_join_url",
      "module": "src.pokertool.system_health_checker",
      "signature": "def _join_url(base: str, path: str) -> str",
      "docstring": null,
      "parameters": [
        {
          "name": "base",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "path",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "base.rstrip"
      ],
      "raises": [],
      "line_number": 52
    },
    {
      "id": "src.pokertool.system_health_checker._http_get_status",
      "type": "function",
      "name": "_http_get_status",
      "module": "src.pokertool.system_health_checker",
      "signature": "def _http_get_status(url: str, timeout: float) -> Tuple[int, str]",
      "docstring": "Perform an HTTP GET request and return status code and body text.\n\nTries to use aiohttp when available, otherwise falls back to requests\nexecuted in a thread to avoid blocking the event loop.",
      "parameters": [
        {
          "name": "url",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "timeout",
          "annotation": "float",
          "default": "2.0",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Tuple[int, str]",
      "decorators": [],
      "is_async": true,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "requests.get",
        "asyncio.to_thread",
        "aiohttp.ClientSession",
        "session.get",
        "response.text"
      ],
      "raises": [],
      "line_number": 59
    },
    {
      "id": "src.pokertool.system_health_checker.get_health_checker",
      "type": "function",
      "name": "get_health_checker",
      "module": "src.pokertool.system_health_checker",
      "signature": "def get_health_checker(check_interval: int) -> SystemHealthChecker",
      "docstring": "Get or create the global health checker instance.",
      "parameters": [
        {
          "name": "check_interval",
          "annotation": "int",
          "default": "30",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "SystemHealthChecker",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "SystemHealthChecker"
      ],
      "raises": [],
      "line_number": 363
    },
    {
      "id": "src.pokertool.system_health_checker.check_api_server_health",
      "type": "function",
      "name": "check_api_server_health",
      "module": "src.pokertool.system_health_checker",
      "signature": "def check_api_server_health() -> HealthStatus",
      "docstring": "Check if API server is responding.",
      "parameters": [],
      "return_type": "HealthStatus",
      "decorators": [],
      "is_async": true,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "_http_get_status",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "str"
      ],
      "raises": [],
      "line_number": 375
    },
    {
      "id": "src.pokertool.system_health_checker.check_database_health",
      "type": "function",
      "name": "check_database_health",
      "module": "src.pokertool.system_health_checker",
      "signature": "def check_database_health() -> HealthStatus",
      "docstring": "Check database connectivity.",
      "parameters": [],
      "return_type": "HealthStatus",
      "decorators": [],
      "is_async": true,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "get_production_db",
        "db.get_database_stats",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "str"
      ],
      "raises": [],
      "line_number": 408
    },
    {
      "id": "src.pokertool.system_health_checker.check_ocr_engine_health",
      "type": "function",
      "name": "check_ocr_engine_health",
      "module": "src.pokertool.system_health_checker",
      "signature": "def check_ocr_engine_health() -> HealthStatus",
      "docstring": "Check OCR engine functionality.",
      "parameters": [],
      "return_type": "HealthStatus",
      "decorators": [],
      "is_async": true,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "Image.fromarray",
        "np.ones",
        "pytesseract.image_to_string",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "str"
      ],
      "raises": [],
      "line_number": 444
    },
    {
      "id": "src.pokertool.system_health_checker.check_screen_capture_health",
      "type": "function",
      "name": "check_screen_capture_health",
      "module": "src.pokertool.system_health_checker",
      "signature": "def check_screen_capture_health() -> HealthStatus",
      "docstring": "Check screen capture functionality.",
      "parameters": [],
      "return_type": "HealthStatus",
      "decorators": [],
      "is_async": true,
      "is_generator": false,
      "is_method": false,
      "complexity": 5,
      "calls": [
        "mss.mss",
        "sct.grab",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "str"
      ],
      "raises": [],
      "line_number": 475
    },
    {
      "id": "src.pokertool.system_health_checker.check_model_calibration_health",
      "type": "function",
      "name": "check_model_calibration_health",
      "module": "src.pokertool.system_health_checker",
      "signature": "def check_model_calibration_health() -> HealthStatus",
      "docstring": "Check model calibration system.",
      "parameters": [],
      "return_type": "HealthStatus",
      "decorators": [],
      "is_async": true,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "str"
      ],
      "raises": [],
      "line_number": 502
    },
    {
      "id": "src.pokertool.system_health_checker.check_frontend_health",
      "type": "function",
      "name": "check_frontend_health",
      "module": "src.pokertool.system_health_checker",
      "signature": "def check_frontend_health() -> HealthStatus",
      "docstring": "Check frontend server availability.",
      "parameters": [],
      "return_type": "HealthStatus",
      "decorators": [],
      "is_async": true,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "_http_get_status",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "str"
      ],
      "raises": [],
      "line_number": 525
    },
    {
      "id": "src.pokertool.system_health_checker.check_poker_table_detection_health",
      "type": "function",
      "name": "check_poker_table_detection_health",
      "module": "src.pokertool.system_health_checker",
      "signature": "def check_poker_table_detection_health() -> HealthStatus",
      "docstring": "Check poker table detection model.",
      "parameters": [],
      "return_type": "HealthStatus",
      "decorators": [],
      "is_async": true,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "create_scraper",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "str"
      ],
      "raises": [],
      "line_number": 557
    },
    {
      "id": "src.pokertool.system_health_checker.check_gto_solver_health",
      "type": "function",
      "name": "check_gto_solver_health",
      "module": "src.pokertool.system_health_checker",
      "signature": "def check_gto_solver_health() -> HealthStatus",
      "docstring": "Check GTO solver functionality.",
      "parameters": [],
      "return_type": "HealthStatus",
      "decorators": [],
      "is_async": true,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "str"
      ],
      "raises": [],
      "line_number": 582
    },
    {
      "id": "src.pokertool.system_health_checker.check_opponent_modeling_health",
      "type": "function",
      "name": "check_opponent_modeling_health",
      "module": "src.pokertool.system_health_checker",
      "signature": "def check_opponent_modeling_health() -> HealthStatus",
      "docstring": "Check opponent modeling system.",
      "parameters": [],
      "return_type": "HealthStatus",
      "decorators": [],
      "is_async": true,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "str"
      ],
      "raises": [],
      "line_number": 605
    },
    {
      "id": "src.pokertool.system_health_checker.check_sequential_opponent_fusion_health",
      "type": "function",
      "name": "check_sequential_opponent_fusion_health",
      "module": "src.pokertool.system_health_checker",
      "signature": "def check_sequential_opponent_fusion_health() -> HealthStatus",
      "docstring": "Check sequential opponent fusion system.",
      "parameters": [],
      "return_type": "HealthStatus",
      "decorators": [],
      "is_async": true,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "str"
      ],
      "raises": [],
      "line_number": 628
    },
    {
      "id": "src.pokertool.system_health_checker.check_active_learning_health",
      "type": "function",
      "name": "check_active_learning_health",
      "module": "src.pokertool.system_health_checker",
      "signature": "def check_active_learning_health() -> HealthStatus",
      "docstring": "Check active learning feedback system.",
      "parameters": [],
      "return_type": "HealthStatus",
      "decorators": [],
      "is_async": true,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "str"
      ],
      "raises": [],
      "line_number": 651
    },
    {
      "id": "src.pokertool.system_health_checker.check_neural_evaluator_health",
      "type": "function",
      "name": "check_neural_evaluator_health",
      "module": "src.pokertool.system_health_checker",
      "signature": "def check_neural_evaluator_health() -> HealthStatus",
      "docstring": "Check neural network evaluator.",
      "parameters": [],
      "return_type": "HealthStatus",
      "decorators": [],
      "is_async": true,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "str"
      ],
      "raises": [],
      "line_number": 674
    },
    {
      "id": "src.pokertool.system_health_checker.check_hand_range_analyzer_health",
      "type": "function",
      "name": "check_hand_range_analyzer_health",
      "module": "src.pokertool.system_health_checker",
      "signature": "def check_hand_range_analyzer_health() -> HealthStatus",
      "docstring": "Check hand range analyzer.",
      "parameters": [],
      "return_type": "HealthStatus",
      "decorators": [],
      "is_async": true,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "str"
      ],
      "raises": [],
      "line_number": 697
    },
    {
      "id": "src.pokertool.system_health_checker.check_scraping_accuracy_health",
      "type": "function",
      "name": "check_scraping_accuracy_health",
      "module": "src.pokertool.system_health_checker",
      "signature": "def check_scraping_accuracy_health() -> HealthStatus",
      "docstring": "Check scraping accuracy system.",
      "parameters": [],
      "return_type": "HealthStatus",
      "decorators": [],
      "is_async": true,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "str"
      ],
      "raises": [],
      "line_number": 720
    },
    {
      "id": "src.pokertool.system_health_checker.check_roi_tracking_health",
      "type": "function",
      "name": "check_roi_tracking_health",
      "module": "src.pokertool.system_health_checker",
      "signature": "def check_roi_tracking_health() -> HealthStatus",
      "docstring": "Check ROI tracking system.",
      "parameters": [],
      "return_type": "HealthStatus",
      "decorators": [],
      "is_async": true,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "get_production_db",
        "db.get_database_stats",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "str"
      ],
      "raises": [],
      "line_number": 743
    },
    {
      "id": "src.pokertool.system_health_checker.check_tournament_support_health",
      "type": "function",
      "name": "check_tournament_support_health",
      "module": "src.pokertool.system_health_checker",
      "signature": "def check_tournament_support_health() -> HealthStatus",
      "docstring": "Check tournament support system.",
      "parameters": [],
      "return_type": "HealthStatus",
      "decorators": [],
      "is_async": true,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "str"
      ],
      "raises": [],
      "line_number": 769
    },
    {
      "id": "src.pokertool.system_health_checker.check_multi_table_support_health",
      "type": "function",
      "name": "check_multi_table_support_health",
      "module": "src.pokertool.system_health_checker",
      "signature": "def check_multi_table_support_health() -> HealthStatus",
      "docstring": "Check multi-table support.",
      "parameters": [],
      "return_type": "HealthStatus",
      "decorators": [],
      "is_async": true,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "str"
      ],
      "raises": [],
      "line_number": 792
    },
    {
      "id": "src.pokertool.system_health_checker.check_hand_history_database_health",
      "type": "function",
      "name": "check_hand_history_database_health",
      "module": "src.pokertool.system_health_checker",
      "signature": "def check_hand_history_database_health() -> HealthStatus",
      "docstring": "Check hand history database.",
      "parameters": [],
      "return_type": "HealthStatus",
      "decorators": [],
      "is_async": true,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "get_production_db",
        "db.get_recent_hands",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "str",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "str"
      ],
      "raises": [],
      "line_number": 815
    },
    {
      "id": "src.pokertool.system_health_checker.check_websocket_server_health",
      "type": "function",
      "name": "check_websocket_server_health",
      "module": "src.pokertool.system_health_checker",
      "signature": "def check_websocket_server_health() -> HealthStatus",
      "docstring": "Check WebSocket server.",
      "parameters": [],
      "return_type": "HealthStatus",
      "decorators": [],
      "is_async": true,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "_http_get_status",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "str"
      ],
      "raises": [],
      "line_number": 852
    },
    {
      "id": "src.pokertool.system_health_checker.check_region_extraction_health",
      "type": "function",
      "name": "check_region_extraction_health",
      "module": "src.pokertool.system_health_checker",
      "signature": "def check_region_extraction_health() -> HealthStatus",
      "docstring": "Check region extraction functionality.",
      "parameters": [],
      "return_type": "HealthStatus",
      "decorators": [],
      "is_async": true,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "HealthStatus",
        "isoformat",
        "datetime.utcnow",
        "str"
      ],
      "raises": [],
      "line_number": 884
    },
    {
      "id": "src.pokertool.system_health_checker.register_all_health_checks",
      "type": "function",
      "name": "register_all_health_checks",
      "module": "src.pokertool.system_health_checker",
      "signature": "def register_all_health_checks(checker: SystemHealthChecker)",
      "docstring": "Register all health checks with the checker.",
      "parameters": [
        {
          "name": "checker",
          "annotation": "SystemHealthChecker",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "checker.register_check",
        "checker.register_check",
        "checker.register_check",
        "checker.register_check",
        "checker.register_check",
        "checker.register_check",
        "checker.register_check",
        "checker.register_check",
        "checker.register_check",
        "checker.register_check",
        "checker.register_check",
        "checker.register_check",
        "checker.register_check",
        "checker.register_check",
        "checker.register_check",
        "checker.register_check",
        "checker.register_check",
        "checker.register_check",
        "checker.register_check",
        "checker.register_check",
        "logger.info",
        "len"
      ],
      "raises": [],
      "line_number": 908
    },
    {
      "id": "src.pokertool.ml_opponent_modeling",
      "type": "module",
      "path": "src/pokertool/ml_opponent_modeling.py",
      "docstring": "PokerTool Ml Opponent Modeling Module\n=======================================\n\nThis module provides functionality for ml opponent modeling operations\nwithin the PokerTool application ecosystem.\n\nModule: pokertool.ml_opponent_modeling\nVersion: 20.0.0\nLast Modified: 2025-09-29\nAuthor: PokerTool Development Team\nLicense: MIT\n\nDependencies:\n    - See module imports for specific dependencies\n    - Python 3.10+ required\n\nChange Log:\n    - v28.0.0 (2025-09-29): Enhanced documentation\n    - v19.0.0 (2025-09-18): Bug fixes and improvements\n    - v18.0.0 (2025-09-15): Initial implementation",
      "version": "'20.0.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 161,
      "loc": 1276,
      "dependencies": [
        "logging",
        "numpy",
        "pathlib",
        "hashlib",
        "time",
        "typing",
        "collections",
        "dataclasses",
        "json",
        "enum",
        "os",
        "pickle"
      ]
    },
    {
      "id": "src.pokertool.ml_opponent_modeling.ModelType",
      "type": "class",
      "name": "ModelType",
      "module": "src.pokertool.ml_opponent_modeling",
      "docstring": "Types of opponent models available.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 134
    },
    {
      "id": "src.pokertool.ml_opponent_modeling.PlayerType",
      "type": "class",
      "name": "PlayerType",
      "module": "src.pokertool.ml_opponent_modeling",
      "docstring": "Opponent player type classifications.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 143
    },
    {
      "id": "src.pokertool.ml_opponent_modeling.PlayerStats",
      "type": "class",
      "name": "PlayerStats",
      "module": "src.pokertool.ml_opponent_modeling",
      "docstring": "Statistical profile of a player.",
      "bases": [],
      "methods": [
        "get_player_type"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 8,
      "line_number": 156
    },
    {
      "id": "src.pokertool.ml_opponent_modeling.HandHistory",
      "type": "class",
      "name": "HandHistory",
      "module": "src.pokertool.ml_opponent_modeling",
      "docstring": "Single hand history for ML training.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 198
    },
    {
      "id": "src.pokertool.ml_opponent_modeling.ModelPrediction",
      "type": "class",
      "name": "ModelPrediction",
      "module": "src.pokertool.ml_opponent_modeling",
      "docstring": "Prediction from opponent model.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 216
    },
    {
      "id": "src.pokertool.ml_opponent_modeling.FeatureEngineering",
      "type": "class",
      "name": "FeatureEngineering",
      "module": "src.pokertool.ml_opponent_modeling",
      "docstring": "Feature engineering for opponent modeling.\nExtracts relevant features from hand histories and game states.",
      "bases": [],
      "methods": [
        "__init__",
        "extract_features",
        "_normalize_pot_size",
        "_normalize_stack_size",
        "_calculate_pot_odds",
        "_calculate_board_texture",
        "_extract_preflop_raise_size",
        "_calculate_action_frequencies",
        "_calculate_recent_win_rate",
        "_calculate_hands_since_showdown",
        "_calculate_street_aggression",
        "_estimate_bluff_frequency"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 32,
      "line_number": 226
    },
    {
      "id": "src.pokertool.ml_opponent_modeling.OpponentModel",
      "type": "class",
      "name": "OpponentModel",
      "module": "src.pokertool.ml_opponent_modeling",
      "docstring": "Base class for opponent models.",
      "bases": [],
      "methods": [
        "__init__",
        "train",
        "predict",
        "update_online",
        "save_model",
        "load_model"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 10,
      "line_number": 410
    },
    {
      "id": "src.pokertool.ml_opponent_modeling.RandomForestOpponentModel",
      "type": "class",
      "name": "RandomForestOpponentModel",
      "module": "src.pokertool.ml_opponent_modeling",
      "docstring": "Random Forest-based opponent model.",
      "bases": [
        "OpponentModel"
      ],
      "methods": [
        "__init__",
        "train",
        "predict"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 14,
      "line_number": 473
    },
    {
      "id": "src.pokertool.ml_opponent_modeling.NeuralNetworkOpponentModel",
      "type": "class",
      "name": "NeuralNetworkOpponentModel",
      "module": "src.pokertool.ml_opponent_modeling",
      "docstring": "Neural Network-based opponent model using TensorFlow.",
      "bases": [
        "OpponentModel"
      ],
      "methods": [
        "__init__",
        "_build_model",
        "train",
        "predict"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 15,
      "line_number": 593
    },
    {
      "id": "src.pokertool.ml_opponent_modeling.OpponentModelingSystem",
      "type": "class",
      "name": "OpponentModelingSystem",
      "module": "src.pokertool.ml_opponent_modeling",
      "docstring": "Central system for managing opponent models.\nHandles model creation, training, prediction, and versioning.",
      "bases": [],
      "methods": [
        "__init__",
        "observe_hand",
        "_update_player_stats",
        "_should_retrain_model",
        "_retrain_player_model",
        "predict_opponent_action",
        "_statistical_prediction",
        "get_player_profile",
        "export_player_data",
        "load_models",
        "get_system_stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 59,
      "line_number": 758
    },
    {
      "id": "src.pokertool.ml_opponent_modeling._disable_coreml_provider",
      "type": "function",
      "name": "_disable_coreml_provider",
      "module": "src.pokertool.ml_opponent_modeling",
      "signature": "def _disable_coreml_provider()",
      "docstring": "Disable CoreML execution provider to prevent errors.",
      "parameters": [],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "ort.get_available_providers",
        "providers.remove",
        "ort.set_default_logger_severity"
      ],
      "raises": [],
      "line_number": 39
    },
    {
      "id": "src.pokertool.ml_opponent_modeling.get_opponent_modeling_system",
      "type": "function",
      "name": "get_opponent_modeling_system",
      "module": "src.pokertool.ml_opponent_modeling",
      "signature": "def get_opponent_modeling_system() -> OpponentModelingSystem",
      "docstring": "Get the global opponent modeling system.",
      "parameters": [],
      "return_type": "OpponentModelingSystem",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "OpponentModelingSystem",
        "_opponent_modeling_system.load_models"
      ],
      "raises": [],
      "line_number": 1106
    },
    {
      "id": "src.pokertool.ml_opponent_modeling.observe_opponent_hand",
      "type": "function",
      "name": "observe_opponent_hand",
      "module": "src.pokertool.ml_opponent_modeling",
      "signature": "def observe_opponent_hand(player_id: str, hand_data: Dict[str, Any]) -> bool",
      "docstring": "Convenience function to observe opponent hand.",
      "parameters": [
        {
          "name": "player_id",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "hand_data",
          "annotation": "Dict[str, Any]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "bool",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "get_opponent_modeling_system",
        "HandHistory",
        "hand_data.get",
        "int",
        "time.time",
        "hand_data.get",
        "hand_data.get",
        "hand_data.get",
        "Action",
        "hand_data.get",
        "hand_data.get",
        "hand_data.get",
        "hand_data.get",
        "hand_data.get",
        "hand_data.get",
        "hand_data.get",
        "hand_data.get",
        "system.observe_hand",
        "logger.error"
      ],
      "raises": [],
      "line_number": 1115
    },
    {
      "id": "src.pokertool.ml_opponent_modeling.predict_opponent_action",
      "type": "function",
      "name": "predict_opponent_action",
      "module": "src.pokertool.ml_opponent_modeling",
      "signature": "def predict_opponent_action(player_id: str, game_context: Dict[str, Any]) -> ModelPrediction",
      "docstring": "Convenience function to predict opponent action.",
      "parameters": [
        {
          "name": "player_id",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "game_context",
          "annotation": "Dict[str, Any]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "ModelPrediction",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_opponent_modeling_system",
        "HandHistory",
        "int",
        "time.time",
        "game_context.get",
        "game_context.get",
        "game_context.get",
        "game_context.get",
        "game_context.get",
        "system.predict_opponent_action"
      ],
      "raises": [],
      "line_number": 1144
    },
    {
      "id": "src.pokertool.ml_opponent_modeling.get_opponent_profile",
      "type": "function",
      "name": "get_opponent_profile",
      "module": "src.pokertool.ml_opponent_modeling",
      "signature": "def get_opponent_profile(player_id: str) -> Optional[Dict[str, Any]]",
      "docstring": "Convenience function to get opponent profile.",
      "parameters": [
        {
          "name": "player_id",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Optional[Dict[str, Any]]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_opponent_modeling_system",
        "system.get_player_profile"
      ],
      "raises": [],
      "line_number": 1161
    },
    {
      "id": "src.pokertool.ml_opponent_modeling.analyze_table_dynamics",
      "type": "function",
      "name": "analyze_table_dynamics",
      "module": "src.pokertool.ml_opponent_modeling",
      "signature": "def analyze_table_dynamics(player_profiles: List[Dict[str, Any]]) -> Dict[str, Any]",
      "docstring": "Analyze overall table dynamics based on player profiles.",
      "parameters": [
        {
          "name": "player_profiles",
          "annotation": "List[Dict[str, Any]]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Dict[str, Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 8,
      "calls": [
        "sum",
        "sum",
        "len",
        "len",
        "player_types.count",
        "set",
        "len",
        "_generate_table_recommendations"
      ],
      "raises": [],
      "line_number": 1166
    },
    {
      "id": "src.pokertool.ml_opponent_modeling._generate_table_recommendations",
      "type": "function",
      "name": "_generate_table_recommendations",
      "module": "src.pokertool.ml_opponent_modeling",
      "signature": "def _generate_table_recommendations(table_type: str, avg_vpip: float, avg_aggression: float) -> List[str]",
      "docstring": "Generate recommendations based on table dynamics.",
      "parameters": [
        {
          "name": "table_type",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "avg_vpip",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "avg_aggression",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "List[str]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 6,
      "calls": [
        "recommendations.extend",
        "recommendations.extend",
        "recommendations.extend",
        "recommendations.extend",
        "recommendations.append",
        "recommendations.append"
      ],
      "raises": [],
      "line_number": 1199
    },
    {
      "id": "src.pokertool.global_error_handler",
      "type": "module",
      "path": "src/pokertool/global_error_handler.py",
      "docstring": "Global Error Handler with User-Friendly Messages\n=================================================\n\nProvides centralized error handling with user-friendly messages,\ndetailed logging, and structured error responses.\n\nFeatures:\n- User-friendly error messages\n- Detailed logging for developers\n- Structured error responses\n- Error categorization\n- Automatic error reporting\n- Recovery suggestions\n\nVersion: 86.5.0\nAuthor: PokerTool Development Team",
      "version": null,
      "author": null,
      "complexity": 32,
      "loc": 547,
      "dependencies": [
        "logging",
        "sys",
        "traceback",
        "__future__",
        "typing",
        "datetime",
        "dataclasses",
        "enum"
      ]
    },
    {
      "id": "src.pokertool.global_error_handler.ErrorCategory",
      "type": "class",
      "name": "ErrorCategory",
      "module": "src.pokertool.global_error_handler",
      "docstring": "Error categories for better organization.",
      "bases": [
        "str",
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 39
    },
    {
      "id": "src.pokertool.global_error_handler.ErrorSeverity",
      "type": "class",
      "name": "ErrorSeverity",
      "module": "src.pokertool.global_error_handler",
      "docstring": "Error severity levels.",
      "bases": [
        "str",
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 54
    },
    {
      "id": "src.pokertool.global_error_handler.ErrorResponse",
      "type": "class",
      "name": "ErrorResponse",
      "module": "src.pokertool.global_error_handler",
      "docstring": "Structured error response.",
      "bases": [],
      "methods": [
        "to_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 7,
      "line_number": 67
    },
    {
      "id": "src.pokertool.global_error_handler.GlobalErrorHandler",
      "type": "class",
      "name": "GlobalErrorHandler",
      "module": "src.pokertool.global_error_handler",
      "docstring": "Centralized error handling with user-friendly messages.\n\nUsage:\n    handler = GlobalErrorHandler()\n\n    # Handle exception\n    error_response = handler.handle_exception(exception)\n\n    # Create custom error\n    error = handler.create_error(\n        error_code=\"CUSTOM_ERROR\",\n        message=\"Something went wrong\",\n        category=ErrorCategory.VALIDATION\n    )",
      "bases": [],
      "methods": [
        "__init__",
        "_register_default_handlers",
        "register_handler",
        "handle_exception",
        "create_error",
        "_handle_value_error",
        "_handle_key_error",
        "_handle_type_error",
        "_handle_file_not_found",
        "_handle_permission_error",
        "_handle_connection_error",
        "_handle_timeout_error",
        "_handle_generic_error",
        "_log_error"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 22,
      "line_number": 189
    },
    {
      "id": "src.pokertool.global_error_handler.handle_errors",
      "type": "function",
      "name": "handle_errors",
      "module": "src.pokertool.global_error_handler",
      "signature": "def handle_errors(error_code: Optional[str], category: ErrorCategory, user_message: Optional[str])",
      "docstring": "Decorator to handle errors in functions.\n\nArgs:\n    error_code: Custom error code\n    category: Error category\n    user_message: Custom user-friendly message\n\nExample:\n    @handle_errors(error_code=\"POKER_ERROR\", category=ErrorCategory.VALIDATION)\n    def analyze_hand(cards):\n        # Function logic\n        pass",
      "parameters": [
        {
          "name": "error_code",
          "annotation": "Optional[str]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "category",
          "annotation": "ErrorCategory",
          "default": "ErrorCategory.UNKNOWN",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "user_message",
          "annotation": "Optional[str]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "func",
        "error_handler.create_error",
        "str",
        "error_handler.handle_exception"
      ],
      "raises": [],
      "line_number": 462
    },
    {
      "id": "src.pokertool.scraping_reliability_system",
      "type": "module",
      "path": "src/pokertool/scraping_reliability_system.py",
      "docstring": "Scraping Reliability System Master Module\n==========================================\n\nIntegrates all reliability improvement features (SCRAPE-040 through SCRAPE-049).\n\nThis module provides a unified interface for all reliability features:\n- SCRAPE-040: Automatic Recovery Manager\n- SCRAPE-041: Redundant Extraction Paths\n- SCRAPE-042: Health Monitoring Dashboard\n- SCRAPE-043: Graceful Degradation System\n- SCRAPE-044: State Persistence Layer\n- SCRAPE-045: Error Pattern Detector\n- SCRAPE-046: Watchdog Timer System\n- SCRAPE-047: Resource Leak Detection\n- SCRAPE-048: Extraction Quality Metrics\n- SCRAPE-049: Automatic Recalibration\n\nModule: pokertool.scraping_reliability_system\nVersion: 1.0.0\nCreated: 2025-10-15\nAuthor: PokerTool Development Team\nLicense: MIT",
      "version": "'1.0.0'",
      "author": null,
      "complexity": 109,
      "loc": 761,
      "dependencies": [
        "logging",
        "pathlib",
        "time",
        "typing",
        "collections",
        "dataclasses",
        "json",
        "psutil",
        "enum",
        "os",
        "threading"
      ]
    },
    {
      "id": "src.pokertool.scraping_reliability_system.RecoveryAction",
      "type": "class",
      "name": "RecoveryAction",
      "module": "src.pokertool.scraping_reliability_system",
      "docstring": null,
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 47
    },
    {
      "id": "src.pokertool.scraping_reliability_system.RecoveryStrategy",
      "type": "class",
      "name": "RecoveryStrategy",
      "module": "src.pokertool.scraping_reliability_system",
      "docstring": "Recovery strategy with escalating actions.",
      "bases": [],
      "methods": [
        "can_trigger"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 56
    },
    {
      "id": "src.pokertool.scraping_reliability_system.AutomaticRecoveryManager",
      "type": "class",
      "name": "AutomaticRecoveryManager",
      "module": "src.pokertool.scraping_reliability_system",
      "docstring": "Detect extraction failures and automatically recover.",
      "bases": [],
      "methods": [
        "__init__",
        "record_extraction",
        "get_success_rate",
        "check_and_recover",
        "_execute_recovery",
        "register_callback"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 13,
      "line_number": 69
    },
    {
      "id": "src.pokertool.scraping_reliability_system.ExtractionMethod",
      "type": "class",
      "name": "ExtractionMethod",
      "module": "src.pokertool.scraping_reliability_system",
      "docstring": null,
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 126
    },
    {
      "id": "src.pokertool.scraping_reliability_system.RedundantExtractionPaths",
      "type": "class",
      "name": "RedundantExtractionPaths",
      "module": "src.pokertool.scraping_reliability_system",
      "docstring": "CDP primary, OCR backup, Vision tertiary fallback.",
      "bases": [],
      "methods": [
        "__init__",
        "extract_with_fallback",
        "get_stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 8,
      "line_number": 132
    },
    {
      "id": "src.pokertool.scraping_reliability_system.HealthMetrics",
      "type": "class",
      "name": "HealthMetrics",
      "module": "src.pokertool.scraping_reliability_system",
      "docstring": "Health metrics for monitoring.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 183
    },
    {
      "id": "src.pokertool.scraping_reliability_system.HealthMonitor",
      "type": "class",
      "name": "HealthMonitor",
      "module": "src.pokertool.scraping_reliability_system",
      "docstring": "Track extraction success rates per field, alert on degradation.",
      "bases": [],
      "methods": [
        "__init__",
        "record_extraction",
        "record_error",
        "_check_field_health",
        "get_metrics",
        "get_field_stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 14,
      "line_number": 195
    },
    {
      "id": "src.pokertool.scraping_reliability_system.FieldConfidence",
      "type": "class",
      "name": "FieldConfidence",
      "module": "src.pokertool.scraping_reliability_system",
      "docstring": null,
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 289
    },
    {
      "id": "src.pokertool.scraping_reliability_system.PartialState",
      "type": "class",
      "name": "PartialState",
      "module": "src.pokertool.scraping_reliability_system",
      "docstring": "State with confidence levels per field.",
      "bases": [],
      "methods": [
        "set_field",
        "mark_missing"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 297
    },
    {
      "id": "src.pokertool.scraping_reliability_system.GracefulDegradation",
      "type": "class",
      "name": "GracefulDegradation",
      "module": "src.pokertool.scraping_reliability_system",
      "docstring": "Return partial data when full extraction fails.",
      "bases": [],
      "methods": [
        "__init__",
        "create_partial_state",
        "is_usable"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 9,
      "line_number": 314
    },
    {
      "id": "src.pokertool.scraping_reliability_system.StatePersistence",
      "type": "class",
      "name": "StatePersistence",
      "module": "src.pokertool.scraping_reliability_system",
      "docstring": "Save/restore table state across application restarts.",
      "bases": [],
      "methods": [
        "__init__",
        "save_state",
        "load_state",
        "clear_state"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 12,
      "line_number": 350
    },
    {
      "id": "src.pokertool.scraping_reliability_system.ErrorPattern",
      "type": "class",
      "name": "ErrorPattern",
      "module": "src.pokertool.scraping_reliability_system",
      "docstring": "Detected error pattern.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 408
    },
    {
      "id": "src.pokertool.scraping_reliability_system.ErrorPatternDetector",
      "type": "class",
      "name": "ErrorPatternDetector",
      "module": "src.pokertool.scraping_reliability_system",
      "docstring": "Identify recurring extraction failures and suggest fixes.",
      "bases": [],
      "methods": [
        "__init__",
        "log_error",
        "get_patterns",
        "generate_report"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 8,
      "line_number": 417
    },
    {
      "id": "src.pokertool.scraping_reliability_system.WatchdogTimer",
      "type": "class",
      "name": "WatchdogTimer",
      "module": "src.pokertool.scraping_reliability_system",
      "docstring": "Kill and restart hung extraction operations.",
      "bases": [],
      "methods": [
        "__init__",
        "start",
        "cancel",
        "_timeout_handler"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 7,
      "line_number": 466
    },
    {
      "id": "src.pokertool.scraping_reliability_system.ResourceLeakDetector",
      "type": "class",
      "name": "ResourceLeakDetector",
      "module": "src.pokertool.scraping_reliability_system",
      "docstring": "Monitor memory/GPU usage, alert on leaks.",
      "bases": [],
      "methods": [
        "__init__",
        "record_usage",
        "get_stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 8,
      "line_number": 500
    },
    {
      "id": "src.pokertool.scraping_reliability_system.QualityMetrics",
      "type": "class",
      "name": "QualityMetrics",
      "module": "src.pokertool.scraping_reliability_system",
      "docstring": "Per-field confidence tracking over time.",
      "bases": [],
      "methods": [
        "__init__",
        "record_confidence",
        "record_error",
        "get_field_quality"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 9,
      "line_number": 549
    },
    {
      "id": "src.pokertool.scraping_reliability_system.AutoRecalibrator",
      "type": "class",
      "name": "AutoRecalibrator",
      "module": "src.pokertool.scraping_reliability_system",
      "docstring": "Re-run setup/calibration when detection degrades.",
      "bases": [],
      "methods": [
        "__init__",
        "record_confidence",
        "_trigger_recalibration",
        "register_callback"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 9,
      "line_number": 593
    },
    {
      "id": "src.pokertool.scraping_reliability_system.ScrapingReliabilitySystem",
      "type": "class",
      "name": "ScrapingReliabilitySystem",
      "module": "src.pokertool.scraping_reliability_system",
      "docstring": "Master class integrating all reliability features.\n\nExpected improvement: 99.9% uptime with all features enabled.",
      "bases": [],
      "methods": [
        "__init__",
        "process_extraction_safe",
        "get_health_report"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 7,
      "line_number": 638
    },
    {
      "id": "src.pokertool.scraping_reliability_system.get_reliability_system",
      "type": "function",
      "name": "get_reliability_system",
      "module": "src.pokertool.scraping_reliability_system",
      "signature": "def get_reliability_system() -> ScrapingReliabilitySystem",
      "docstring": "Get global reliability system instance.",
      "parameters": [],
      "return_type": "ScrapingReliabilitySystem",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "ScrapingReliabilitySystem"
      ],
      "raises": [],
      "line_number": 736
    },
    {
      "id": "src.pokertool.test_utils",
      "type": "module",
      "path": "src/pokertool/test_utils.py",
      "docstring": "Test utilities for PokerTool\n\nProvides utilities to suppress GUI dialogs during testing while still logging errors.",
      "version": null,
      "author": null,
      "complexity": 4,
      "loc": 34,
      "dependencies": [
        "logging",
        "typing",
        "os"
      ]
    },
    {
      "id": "src.pokertool.test_utils.is_test_mode",
      "type": "function",
      "name": "is_test_mode",
      "module": "src.pokertool.test_utils",
      "signature": "def is_test_mode() -> bool",
      "docstring": "Check if running in test mode.",
      "parameters": [],
      "return_type": "bool",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "bool",
        "os.environ.get"
      ],
      "raises": [],
      "line_number": 17
    },
    {
      "id": "src.pokertool.test_utils.safe_messagebox_showerror",
      "type": "function",
      "name": "safe_messagebox_showerror",
      "module": "src.pokertool.test_utils",
      "signature": "def safe_messagebox_showerror(title: str, message: str, parent)",
      "docstring": "Log error message (GUI dialogs removed in web-only architecture).",
      "parameters": [
        {
          "name": "title",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "message",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "parent",
          "annotation": null,
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "logger.error"
      ],
      "raises": [],
      "line_number": 22
    },
    {
      "id": "src.pokertool.test_utils.safe_messagebox_showwarning",
      "type": "function",
      "name": "safe_messagebox_showwarning",
      "module": "src.pokertool.test_utils",
      "signature": "def safe_messagebox_showwarning(title: str, message: str, parent)",
      "docstring": "Log warning message (GUI dialogs removed in web-only architecture).",
      "parameters": [
        {
          "name": "title",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "message",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "parent",
          "annotation": null,
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "logger.warning"
      ],
      "raises": [],
      "line_number": 27
    },
    {
      "id": "src.pokertool.test_utils.safe_messagebox_showinfo",
      "type": "function",
      "name": "safe_messagebox_showinfo",
      "module": "src.pokertool.test_utils",
      "signature": "def safe_messagebox_showinfo(title: str, message: str, parent)",
      "docstring": "Log info message (GUI dialogs removed in web-only architecture).",
      "parameters": [
        {
          "name": "title",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "message",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "parent",
          "annotation": null,
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "logger.info"
      ],
      "raises": [],
      "line_number": 32
    },
    {
      "id": "src.pokertool.desktop_independent_scraper",
      "type": "module",
      "path": "src/pokertool/desktop_independent_scraper.py",
      "docstring": "Desktop Independent Screen Scraper\n==================================\n\nCross-platform screen scraping that works regardless of desktop/workspace separation.\nEliminates Chrome connection requirements and enables multi-desktop poker monitoring.\n\nFeatures:\n- Cross-desktop window detection and capture\n- Platform-specific window management (macOS, Windows, Linux)\n- OCR text recognition without browser dependencies\n- Multi-monitor support\n- Workspace-independent operation\n\nModule: pokertool.desktop_independent_scraper\nVersion: 1.0.0\nAuthor: PokerTool Development Team\nLicense: MIT",
      "version": "'1.0.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 177,
      "loc": 1256,
      "dependencies": [
        "logging",
        "sys",
        "numpy",
        "pathlib",
        "time",
        "typing",
        "dataclasses",
        "collections",
        "re",
        "enum",
        "os",
        "threading"
      ]
    },
    {
      "id": "src.pokertool.desktop_independent_scraper.WindowInfo",
      "type": "class",
      "name": "WindowInfo",
      "module": "src.pokertool.desktop_independent_scraper",
      "docstring": "Information about a detected window.",
      "bases": [],
      "methods": [
        "bounds",
        "area"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 3,
      "line_number": 100
    },
    {
      "id": "src.pokertool.desktop_independent_scraper.ScreenRegion",
      "type": "class",
      "name": "ScreenRegion",
      "module": "src.pokertool.desktop_independent_scraper",
      "docstring": "Define a region on screen for capture.",
      "bases": [],
      "methods": [
        "to_mss_monitor"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 125
    },
    {
      "id": "src.pokertool.desktop_independent_scraper.PokerDetectionMode",
      "type": "class",
      "name": "PokerDetectionMode",
      "module": "src.pokertool.desktop_independent_scraper",
      "docstring": "Different modes for detecting poker applications.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 142
    },
    {
      "id": "src.pokertool.desktop_independent_scraper.DesktopIndependentScraper",
      "type": "class",
      "name": "DesktopIndependentScraper",
      "module": "src.pokertool.desktop_independent_scraper",
      "docstring": "Desktop-independent screen scraper that can capture poker tables\nregardless of desktop/workspace separation.",
      "bases": [],
      "methods": [
        "__init__",
        "_detect_platform",
        "_init_platform_specific",
        "scan_for_poker_windows",
        "_scan_windows_windows",
        "_scan_macos_windows",
        "_scan_linux_windows",
        "_scan_linux_wmctrl",
        "_scan_linux_xwininfo",
        "_matches_poker_patterns",
        "capture_window",
        "_analyze_poker_screenshot",
        "_enhanced_table_analysis",
        "_analyze_at_scale",
        "_detect_poker_table",
        "_detect_cards_advanced",
        "_detect_rounded_corners",
        "_detect_poker_ui_elements",
        "_enhanced_ocr_analysis",
        "_cleanup_analysis_cache",
        "_calculate_adaptive_interval",
        "get_performance_metrics",
        "start_continuous_monitoring",
        "stop_monitoring",
        "register_callback",
        "unregister_callback",
        "save_debug_screenshots",
        "get_platform_capabilities"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 164,
      "line_number": 149
    },
    {
      "id": "src.pokertool.desktop_independent_scraper.create_desktop_scraper",
      "type": "function",
      "name": "create_desktop_scraper",
      "module": "src.pokertool.desktop_independent_scraper",
      "signature": "def create_desktop_scraper() -> DesktopIndependentScraper",
      "docstring": "Create a desktop-independent scraper instance.",
      "parameters": [],
      "return_type": "DesktopIndependentScraper",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "DesktopIndependentScraper"
      ],
      "raises": [],
      "line_number": 1207
    },
    {
      "id": "src.pokertool.desktop_independent_scraper.quick_poker_scan",
      "type": "function",
      "name": "quick_poker_scan",
      "module": "src.pokertool.desktop_independent_scraper",
      "signature": "def quick_poker_scan() -> List[WindowInfo]",
      "docstring": "Quick scan for poker windows across all desktops.",
      "parameters": [],
      "return_type": "List[WindowInfo]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "create_desktop_scraper",
        "scraper.scan_for_poker_windows"
      ],
      "raises": [],
      "line_number": 1211
    },
    {
      "id": "src.pokertool.desktop_independent_scraper.test_desktop_independence",
      "type": "function",
      "name": "test_desktop_independence",
      "module": "src.pokertool.desktop_independent_scraper",
      "signature": "def test_desktop_independence()",
      "docstring": "Test desktop-independent functionality.",
      "parameters": [],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 7,
      "calls": [
        "print",
        "print",
        "create_desktop_scraper",
        "scraper.get_platform_capabilities",
        "print",
        "print",
        "print",
        "print",
        "print",
        "scraper.scan_for_poker_windows",
        "print",
        "len",
        "enumerate",
        "print",
        "print",
        "print",
        "print",
        "scraper.capture_window",
        "result.get",
        "print",
        "result.get",
        "print",
        "print",
        "print",
        "print"
      ],
      "raises": [],
      "line_number": 1216
    },
    {
      "id": "src.pokertool.cfr_plus",
      "type": "module",
      "path": "src/pokertool/cfr_plus.py",
      "docstring": "Compact CFR++ implementation for normal-form poker abstractions.",
      "version": null,
      "author": null,
      "complexity": 22,
      "loc": 132,
      "dependencies": [
        "typing",
        "dataclasses",
        "__future__"
      ]
    },
    {
      "id": "src.pokertool.cfr_plus.CFRPlusSolution",
      "type": "class",
      "name": "CFRPlusSolution",
      "module": "src.pokertool.cfr_plus",
      "docstring": "Container for a solved normal-form game.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 33
    },
    {
      "id": "src.pokertool.cfr_plus.CFRPlusSolver",
      "type": "class",
      "name": "CFRPlusSolver",
      "module": "src.pokertool.cfr_plus",
      "docstring": "CFR++ solver for two-player zero-sum normal-form games.",
      "bases": [],
      "methods": [
        "__init__",
        "solve",
        "_seed_from_warm_start",
        "_current_strategy",
        "_accumulate",
        "_update_regrets",
        "_compute_exploitability"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 16,
      "line_number": 43
    },
    {
      "id": "src.pokertool.cfr_plus._normalise",
      "type": "function",
      "name": "_normalise",
      "module": "src.pokertool.cfr_plus",
      "signature": "def _normalise(vector: Sequence[float]) -> List[float]",
      "docstring": null,
      "parameters": [
        {
          "name": "vector",
          "annotation": "Sequence[float]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "List[float]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "sum",
        "len"
      ],
      "raises": [],
      "line_number": 9
    },
    {
      "id": "src.pokertool.cfr_plus._dot",
      "type": "function",
      "name": "_dot",
      "module": "src.pokertool.cfr_plus",
      "signature": "def _dot(a: Sequence[float], b: Sequence[float]) -> float",
      "docstring": null,
      "parameters": [
        {
          "name": "a",
          "annotation": "Sequence[float]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "b",
          "annotation": "Sequence[float]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "float",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "sum",
        "zip"
      ],
      "raises": [],
      "line_number": 19
    },
    {
      "id": "src.pokertool.cfr_plus._matrix_vector_product",
      "type": "function",
      "name": "_matrix_vector_product",
      "module": "src.pokertool.cfr_plus",
      "signature": "def _matrix_vector_product(matrix: Sequence[Sequence[float]], vector: Sequence[float]) -> List[float]",
      "docstring": null,
      "parameters": [
        {
          "name": "matrix",
          "annotation": "Sequence[Sequence[float]]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "vector",
          "annotation": "Sequence[float]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "List[float]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "sum",
        "range",
        "len"
      ],
      "raises": [],
      "line_number": 23
    },
    {
      "id": "src.pokertool.cfr_plus._transposed_matrix_vector_product",
      "type": "function",
      "name": "_transposed_matrix_vector_product",
      "module": "src.pokertool.cfr_plus",
      "signature": "def _transposed_matrix_vector_product(matrix: Sequence[Sequence[float]], vector: Sequence[float]) -> List[float]",
      "docstring": null,
      "parameters": [
        {
          "name": "matrix",
          "annotation": "Sequence[Sequence[float]]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "vector",
          "annotation": "Sequence[float]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "List[float]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "len",
        "sum",
        "range",
        "len",
        "range"
      ],
      "raises": [],
      "line_number": 27
    },
    {
      "id": "src.pokertool.analytics_dashboard",
      "type": "module",
      "path": "src/pokertool/analytics_dashboard.py",
      "docstring": "Usage analytics collection and dashboard summarisation.",
      "version": null,
      "author": null,
      "complexity": 17,
      "loc": 153,
      "dependencies": [
        "pathlib",
        "time",
        "__future__",
        "typing",
        "dataclasses",
        "json"
      ]
    },
    {
      "id": "src.pokertool.analytics_dashboard.UsageEvent",
      "type": "class",
      "name": "UsageEvent",
      "module": "src.pokertool.analytics_dashboard",
      "docstring": "Single usage event for analytics tracking.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 16
    },
    {
      "id": "src.pokertool.analytics_dashboard.PrivacySettings",
      "type": "class",
      "name": "PrivacySettings",
      "module": "src.pokertool.analytics_dashboard",
      "docstring": "Privacy controls for analytics.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 27
    },
    {
      "id": "src.pokertool.analytics_dashboard.DashboardMetrics",
      "type": "class",
      "name": "DashboardMetrics",
      "module": "src.pokertool.analytics_dashboard",
      "docstring": "Aggregated analytics metrics.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 36
    },
    {
      "id": "src.pokertool.analytics_dashboard.AnalyticsDashboard",
      "type": "class",
      "name": "AnalyticsDashboard",
      "module": "src.pokertool.analytics_dashboard",
      "docstring": "Collects usage events and produces dashboard reports.",
      "bases": [],
      "methods": [
        "__init__",
        "track_event",
        "track_session",
        "generate_metrics",
        "export_report",
        "_average_session_length",
        "_anonymize",
        "_load_history",
        "_persist"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 17,
      "line_number": 46
    },
    {
      "id": "src.pokertool.thread_manager",
      "type": "module",
      "path": "src/pokertool/thread_manager.py",
      "docstring": "PokerTool Threading Module\n=========================\n\nThis module provides threading utilities for the PokerTool application.\n\nModule: pokertool.thread_manager\nVersion: 1.0.0\nLast Modified: 2025-01-07\nAuthor: PokerTool Development Team\nLicense: MIT",
      "version": null,
      "author": null,
      "complexity": 12,
      "loc": 94,
      "dependencies": [
        "logging",
        "time",
        "typing",
        "concurrent",
        "threading"
      ]
    },
    {
      "id": "src.pokertool.thread_manager.ThreadManager",
      "type": "class",
      "name": "ThreadManager",
      "module": "src.pokertool.thread_manager",
      "docstring": "Manages application threads and thread pools.",
      "bases": [],
      "methods": [
        "__init__",
        "submit_task",
        "start_thread",
        "stop_thread",
        "get_stats",
        "shutdown"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 8,
      "line_number": 25
    },
    {
      "id": "src.pokertool.thread_manager.get_thread_manager",
      "type": "function",
      "name": "get_thread_manager",
      "module": "src.pokertool.thread_manager",
      "signature": "def get_thread_manager() -> ThreadManager",
      "docstring": "Get the global thread manager instance.",
      "parameters": [],
      "return_type": "ThreadManager",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "ThreadManager"
      ],
      "raises": [],
      "line_number": 81
    },
    {
      "id": "src.pokertool.thread_manager.submit_task",
      "type": "function",
      "name": "submit_task",
      "module": "src.pokertool.thread_manager",
      "signature": "def submit_task(func: Callable, args, kwargs) -> Future",
      "docstring": "Submit a task to the global thread pool.",
      "parameters": [
        {
          "name": "func",
          "annotation": "Callable",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "args",
          "annotation": null,
          "default": null,
          "kind": "VAR_POSITIONAL"
        },
        {
          "name": "kwargs",
          "annotation": null,
          "default": null,
          "kind": "VAR_KEYWORD"
        }
      ],
      "return_type": "Future",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "submit_task",
        "get_thread_manager"
      ],
      "raises": [],
      "line_number": 88
    },
    {
      "id": "src.pokertool.thread_manager.start_thread",
      "type": "function",
      "name": "start_thread",
      "module": "src.pokertool.thread_manager",
      "signature": "def start_thread(name: str, target: Callable, args, kwargs) -> threading.Thread",
      "docstring": "Start a named thread using the global manager.",
      "parameters": [
        {
          "name": "name",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "target",
          "annotation": "Callable",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "args",
          "annotation": null,
          "default": null,
          "kind": "VAR_POSITIONAL"
        },
        {
          "name": "kwargs",
          "annotation": null,
          "default": null,
          "kind": "VAR_KEYWORD"
        }
      ],
      "return_type": "threading.Thread",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "start_thread",
        "get_thread_manager"
      ],
      "raises": [],
      "line_number": 92
    },
    {
      "id": "src.pokertool.sequential_opponent_fusion",
      "type": "module",
      "path": "src/pokertool/sequential_opponent_fusion.py",
      "docstring": "Sequential Opponent State Fusion\n\nImproves prediction accuracy by incorporating temporal patterns from recent hands\nand betting lines using transformer-based sequence modeling.\n\nFeatures:\n- Transformer encoder for action sequences\n- Rolling window hand history aggregation\n- Per-player state embeddings with temporal context\n- Efficient caching for real-time inference\n- Attention-based pattern detection\n\nExpected Improvement: +12-18% prediction accuracy through temporal modeling",
      "version": null,
      "author": null,
      "complexity": 45,
      "loc": 594,
      "dependencies": [
        "numpy",
        "pathlib",
        "time",
        "typing",
        "dataclasses",
        "collections",
        "json",
        "enum"
      ]
    },
    {
      "id": "src.pokertool.sequential_opponent_fusion.ActionType",
      "type": "class",
      "name": "ActionType",
      "module": "src.pokertool.sequential_opponent_fusion",
      "docstring": "Poker action types for sequence encoding",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 27
    },
    {
      "id": "src.pokertool.sequential_opponent_fusion.Street",
      "type": "class",
      "name": "Street",
      "module": "src.pokertool.sequential_opponent_fusion",
      "docstring": "Betting streets",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 37
    },
    {
      "id": "src.pokertool.sequential_opponent_fusion.PlayerAction",
      "type": "class",
      "name": "PlayerAction",
      "module": "src.pokertool.sequential_opponent_fusion",
      "docstring": "Individual player action with context",
      "bases": [],
      "methods": [
        "to_vector",
        "to_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 46
    },
    {
      "id": "src.pokertool.sequential_opponent_fusion.HandSequence",
      "type": "class",
      "name": "HandSequence",
      "module": "src.pokertool.sequential_opponent_fusion",
      "docstring": "Sequence of actions for a single hand",
      "bases": [],
      "methods": [
        "get_player_actions",
        "to_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 86
    },
    {
      "id": "src.pokertool.sequential_opponent_fusion.SequenceFeatures",
      "type": "class",
      "name": "SequenceFeatures",
      "module": "src.pokertool.sequential_opponent_fusion",
      "docstring": "Extracted features from action sequences",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 108
    },
    {
      "id": "src.pokertool.sequential_opponent_fusion.SimpleTransformer",
      "type": "class",
      "name": "SimpleTransformer",
      "module": "src.pokertool.sequential_opponent_fusion",
      "docstring": "Lightweight transformer encoder for action sequences.\n\nUses multi-head self-attention to capture temporal dependencies\nin betting patterns and opponent behavior.",
      "bases": [],
      "methods": [
        "__init__",
        "embed_sequence",
        "self_attention",
        "_softmax",
        "forward",
        "_layer_norm"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 8,
      "line_number": 119
    },
    {
      "id": "src.pokertool.sequential_opponent_fusion.SequentialOpponentFusion",
      "type": "class",
      "name": "SequentialOpponentFusion",
      "module": "src.pokertool.sequential_opponent_fusion",
      "docstring": "Main system for sequential opponent state fusion.\n\nMaintains rolling windows of hand histories and produces\ntemporally-aware opponent embeddings for improved predictions.",
      "bases": [],
      "methods": [
        "__init__",
        "add_hand",
        "get_player_embedding",
        "_compute_features",
        "get_prediction_context",
        "_compute_entropy",
        "_prune_cache",
        "get_statistics",
        "save_state",
        "load_state",
        "_hand_from_dict"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 31,
      "line_number": 239
    },
    {
      "id": "src.pokertool.sequential_opponent_fusion.get_fusion_system",
      "type": "function",
      "name": "get_fusion_system",
      "module": "src.pokertool.sequential_opponent_fusion",
      "signature": "def get_fusion_system() -> SequentialOpponentFusion",
      "docstring": "Get or create global fusion system",
      "parameters": [],
      "return_type": "SequentialOpponentFusion",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "SequentialOpponentFusion"
      ],
      "raises": [],
      "line_number": 589
    },
    {
      "id": "src.pokertool.tournament_tracker",
      "type": "module",
      "path": "src/pokertool/tournament_tracker.py",
      "docstring": "Enhanced tournament tracking with scheduling, ROI analysis, and alerts.",
      "version": null,
      "author": null,
      "complexity": 40,
      "loc": 252,
      "dependencies": [
        "math",
        "pathlib",
        "time",
        "__future__",
        "typing",
        "dataclasses",
        "json"
      ]
    },
    {
      "id": "src.pokertool.tournament_tracker.TournamentStructure",
      "type": "class",
      "name": "TournamentStructure",
      "module": "src.pokertool.tournament_tracker",
      "docstring": "Basic tournament structure information.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 17
    },
    {
      "id": "src.pokertool.tournament_tracker.TournamentEvent",
      "type": "class",
      "name": "TournamentEvent",
      "module": "src.pokertool.tournament_tracker",
      "docstring": "Scheduled tournament event.",
      "bases": [],
      "methods": [
        "late_registration_end"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 28
    },
    {
      "id": "src.pokertool.tournament_tracker.TournamentResult",
      "type": "class",
      "name": "TournamentResult",
      "module": "src.pokertool.tournament_tracker",
      "docstring": "Recorded tournament outcome for ROI calculation.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 46
    },
    {
      "id": "src.pokertool.tournament_tracker.SatelliteLink",
      "type": "class",
      "name": "SatelliteLink",
      "module": "src.pokertool.tournament_tracker",
      "docstring": "Mapping between satellite events and target tournaments.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 56
    },
    {
      "id": "src.pokertool.tournament_tracker.TournamentAlert",
      "type": "class",
      "name": "TournamentAlert",
      "module": "src.pokertool.tournament_tracker",
      "docstring": "Alert scheduled for tournament reminders or updates.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 65
    },
    {
      "id": "src.pokertool.tournament_tracker.TournamentTracker",
      "type": "class",
      "name": "TournamentTracker",
      "module": "src.pokertool.tournament_tracker",
      "docstring": "High-level manager for tournament schedules and analytics.",
      "bases": [],
      "methods": [
        "__init__",
        "add_event",
        "update_event",
        "list_events",
        "upcoming_events",
        "late_registration_advice",
        "link_satellite",
        "satellites_for_event",
        "record_result",
        "roi_summary",
        "schedule_alert",
        "due_alerts",
        "mark_alert_delivered",
        "_require_event",
        "_load",
        "_persist",
        "_serialize_event"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 39,
      "line_number": 76
    },
    {
      "id": "src.pokertool.version",
      "type": "module",
      "path": "src/pokertool/version.py",
      "docstring": "PokerTool Version Management\n=============================\n\nCanonical source for version information across the entire project.\n\nThis module provides the single source of truth for version numbers,\nensuring consistency across all files, documentation, and releases.\n\nUsage:\n    from pokertool.version import __version__, get_version_info\n\n    print(__version__)  # \"60.0.0\"\n    info = get_version_info()  # Complete version details",
      "version": "_read_version()",
      "author": null,
      "complexity": 21,
      "loc": 476,
      "dependencies": [
        "typing",
        "datetime",
        "pathlib"
      ]
    },
    {
      "id": "src.pokertool.version._read_version",
      "type": "function",
      "name": "_read_version",
      "module": "src.pokertool.version",
      "signature": "def _read_version() -> str",
      "docstring": "Read version from VERSION file (TOML format).",
      "parameters": [],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 4,
      "calls": [
        "_VERSION_FILE.exists",
        "_VERSION_FILE.read_text",
        "content.split",
        "line.strip",
        "line.startswith",
        "strip",
        "line.split"
      ],
      "raises": [],
      "line_number": 27
    },
    {
      "id": "src.pokertool.version.get_version",
      "type": "function",
      "name": "get_version",
      "module": "src.pokertool.version",
      "signature": "def get_version() -> str",
      "docstring": "Get current version string.\n\nReturns:\n    Version string (e.g., \"60.0.0\")",
      "parameters": [],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [],
      "raises": [],
      "line_number": 368
    },
    {
      "id": "src.pokertool.version.get_version_info",
      "type": "function",
      "name": "get_version_info",
      "module": "src.pokertool.version",
      "signature": "def get_version_info() -> Dict[str, Any]",
      "docstring": "Get complete version information.\n\nReturns:\n    Dict with version details including metadata",
      "parameters": [],
      "return_type": "Dict[str, Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "VERSION_INFO.copy"
      ],
      "raises": [],
      "line_number": 378
    },
    {
      "id": "src.pokertool.version.get_release_history",
      "type": "function",
      "name": "get_release_history",
      "module": "src.pokertool.version",
      "signature": "def get_release_history(limit: int) -> list",
      "docstring": "Get release history.\n\nArgs:\n    limit: Maximum number of releases to return\n\nReturns:\n    List of release dicts with version, date, description",
      "parameters": [
        {
          "name": "limit",
          "annotation": "int",
          "default": "10",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "list",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [],
      "raises": [],
      "line_number": 388
    },
    {
      "id": "src.pokertool.version.get_version_tuple",
      "type": "function",
      "name": "get_version_tuple",
      "module": "src.pokertool.version",
      "signature": "def get_version_tuple() -> tuple",
      "docstring": "Get version as tuple.\n\nReturns:\n    (major, minor, patch) tuple",
      "parameters": [],
      "return_type": "tuple",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [],
      "raises": [],
      "line_number": 401
    },
    {
      "id": "src.pokertool.version.is_compatible",
      "type": "function",
      "name": "is_compatible",
      "module": "src.pokertool.version",
      "signature": "def is_compatible(required_version: str) -> bool",
      "docstring": "Check if current version is compatible with required version.\n\nArgs:\n    required_version: Required version string (e.g., \"60.0.0\")\n\nReturns:\n    True if current version >= required version",
      "parameters": [
        {
          "name": "required_version",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "bool",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 5,
      "calls": [
        "map",
        "required_version.split"
      ],
      "raises": [],
      "line_number": 411
    },
    {
      "id": "src.pokertool.version.format_version",
      "type": "function",
      "name": "format_version",
      "module": "src.pokertool.version",
      "signature": "def format_version(include_name: bool) -> str",
      "docstring": "Format version string with optional release name.\n\nArgs:\n    include_name: Include release name\n\nReturns:\n    Formatted version string",
      "parameters": [
        {
          "name": "include_name",
          "annotation": "bool",
          "default": "False",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [],
      "raises": [],
      "line_number": 434
    },
    {
      "id": "src.pokertool.version.print_version_info",
      "type": "function",
      "name": "print_version_info",
      "module": "src.pokertool.version",
      "signature": "def print_version_info()",
      "docstring": "Print comprehensive version information.",
      "parameters": [],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 5,
      "calls": [
        "get_version_info",
        "print",
        "print",
        "format_version",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "get_release_history",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "raises": [],
      "line_number": 449
    },
    {
      "id": "src.pokertool.scraping_master_system",
      "type": "module",
      "path": "src/pokertool/scraping_master_system.py",
      "docstring": "PokerTool Scraping Master System\n=================================\n\nComplete integration of all 35 scraping improvement features.\n\nThis is the top-level module that integrates:\n- Speed Optimization System (SCRAPE-015 to SCRAPE-026): 12 features\n- Accuracy System (SCRAPE-027 to SCRAPE-039): 13 features  \n- Reliability System (SCRAPE-040 to SCRAPE-049): 10 features\n\nExpected Improvements:\n- Speed: 5-10x faster with all optimizations\n- Accuracy: 95%+ accuracy with all validations\n- Reliability: 99.9% uptime with all features\n\nModule: pokertool.scraping_master_system\nVersion: 1.0.0\nCreated: 2025-10-15\nAuthor: PokerTool Development Team\nLicense: MIT",
      "version": "'1.0.0'",
      "author": null,
      "complexity": 37,
      "loc": 344,
      "dependencies": [
        "logging",
        "dataclasses",
        "numpy",
        "typing"
      ]
    },
    {
      "id": "src.pokertool.scraping_master_system.MasterSystemMetrics",
      "type": "class",
      "name": "MasterSystemMetrics",
      "module": "src.pokertool.scraping_master_system",
      "docstring": "Aggregated metrics from all subsystems.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 39
    },
    {
      "id": "src.pokertool.scraping_master_system.ScrapingMasterSystem",
      "type": "class",
      "name": "ScrapingMasterSystem",
      "module": "src.pokertool.scraping_master_system",
      "docstring": "Master system integrating all 35 scraping improvement features.\n\nThis provides a unified interface for poker table screen scraping with:\n- 5-10x speed improvement\n- 95%+ accuracy\n- 99.9% uptime",
      "bases": [],
      "methods": [
        "__init__",
        "process_frame",
        "safe_extract",
        "get_comprehensive_metrics",
        "get_health_report",
        "reset_all"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 33,
      "line_number": 60
    },
    {
      "id": "src.pokertool.scraping_master_system.get_master_system",
      "type": "function",
      "name": "get_master_system",
      "module": "src.pokertool.scraping_master_system",
      "signature": "def get_master_system() -> ScrapingMasterSystem",
      "docstring": "Get global master system instance.",
      "parameters": [],
      "return_type": "ScrapingMasterSystem",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "ScrapingMasterSystem"
      ],
      "raises": [],
      "line_number": 272
    },
    {
      "id": "src.pokertool.scraping_master_system.process_poker_frame",
      "type": "function",
      "name": "process_poker_frame",
      "module": "src.pokertool.scraping_master_system",
      "signature": "def process_poker_frame(frame: np.ndarray, extract_fn: Callable) -> Optional[Dict[str, Any]]",
      "docstring": "Convenience function to process a poker table frame with all improvements.\n\nThis is the main entry point for using the complete scraping system.\n\nArgs:\n    frame: Screen capture frame\n    extract_fn: Base extraction function\n    \nReturns:\n    Processed table state",
      "parameters": [
        {
          "name": "frame",
          "annotation": "np.ndarray",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "extract_fn",
          "annotation": "Callable",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Optional[Dict[str, Any]]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_master_system",
        "system.process_frame"
      ],
      "raises": [],
      "line_number": 280
    },
    {
      "id": "src.pokertool.scraping_master_system.get_system_status",
      "type": "function",
      "name": "get_system_status",
      "module": "src.pokertool.scraping_master_system",
      "signature": "def get_system_status() -> Dict[str, Any]",
      "docstring": "Get current system status and health.",
      "parameters": [],
      "return_type": "Dict[str, Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_master_system",
        "system.get_health_report"
      ],
      "raises": [],
      "line_number": 297
    },
    {
      "id": "src.pokertool.scraping_accuracy_system",
      "type": "module",
      "path": "src/pokertool/scraping_accuracy_system.py",
      "docstring": "Scraping Accuracy System Master Module\n========================================\n\nIntegrates all accuracy improvement features (SCRAPE-027 through SCRAPE-039).\n\nThis module provides a unified interface for all accuracy features:\n- SCRAPE-027: Multi-Frame Temporal Consensus\n- SCRAPE-028: Context-Aware Pot Validation\n- SCRAPE-029: Card Recognition ML Model\n- SCRAPE-030: Spatial Relationship Validator\n- SCRAPE-031: Geometric Calibration System\n- SCRAPE-032: Adaptive Regional Thresholding\n- SCRAPE-033: Confidence-Based Re-extraction\n- SCRAPE-034: Player Action State Machine\n- SCRAPE-035: Card Suit Color Validation\n- SCRAPE-036: Blinds Consistency Checker\n- SCRAPE-037: Stack Change Tracking\n- SCRAPE-038: OCR Post-Processing Rules\n- SCRAPE-039: Multi-Strategy Fusion\n\nModule: pokertool.scraping_accuracy_system\nVersion: 1.0.0\nCreated: 2025-10-15\nAuthor: PokerTool Development Team\nLicense: MIT",
      "version": "'1.0.0'",
      "author": null,
      "complexity": 95,
      "loc": 591,
      "dependencies": [
        "logging",
        "numpy",
        "typing",
        "collections",
        "dataclasses",
        "re",
        "enum"
      ]
    },
    {
      "id": "src.pokertool.scraping_accuracy_system.TemporalConsensus",
      "type": "class",
      "name": "TemporalConsensus",
      "module": "src.pokertool.scraping_accuracy_system",
      "docstring": "Smooth values over 3-5 frames to eliminate OCR noise.",
      "bases": [],
      "methods": [
        "__init__",
        "add_value",
        "get_consensus"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 14,
      "line_number": 47
    },
    {
      "id": "src.pokertool.scraping_accuracy_system.PotValidator",
      "type": "class",
      "name": "PotValidator",
      "module": "src.pokertool.scraping_accuracy_system",
      "docstring": "Validate pot size using game state continuity.",
      "bases": [],
      "methods": [
        "__init__",
        "validate"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 102
    },
    {
      "id": "src.pokertool.scraping_accuracy_system.SpatialValidator",
      "type": "class",
      "name": "SpatialValidator",
      "module": "src.pokertool.scraping_accuracy_system",
      "docstring": "Validate geometric consistency of table elements.",
      "bases": [],
      "methods": [
        "__init__",
        "validate_position"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 136
    },
    {
      "id": "src.pokertool.scraping_accuracy_system.PlayerAction",
      "type": "class",
      "name": "PlayerAction",
      "module": "src.pokertool.scraping_accuracy_system",
      "docstring": null,
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 167
    },
    {
      "id": "src.pokertool.scraping_accuracy_system.PlayerStateMachine",
      "type": "class",
      "name": "PlayerStateMachine",
      "module": "src.pokertool.scraping_accuracy_system",
      "docstring": "Track player action sequences for validation.",
      "bases": [],
      "methods": [
        "__init__",
        "update"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 4,
      "line_number": 176
    },
    {
      "id": "src.pokertool.scraping_accuracy_system.CardSuitValidator",
      "type": "class",
      "name": "CardSuitValidator",
      "module": "src.pokertool.scraping_accuracy_system",
      "docstring": "Cross-check suit against card color.",
      "bases": [],
      "methods": [
        "validate"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 4,
      "line_number": 205
    },
    {
      "id": "src.pokertool.scraping_accuracy_system.BlindsChecker",
      "type": "class",
      "name": "BlindsChecker",
      "module": "src.pokertool.scraping_accuracy_system",
      "docstring": "Validate SB/BB against known blind structures.",
      "bases": [],
      "methods": [
        "__init__",
        "validate"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 6,
      "line_number": 232
    },
    {
      "id": "src.pokertool.scraping_accuracy_system.StackTracker",
      "type": "class",
      "name": "StackTracker",
      "module": "src.pokertool.scraping_accuracy_system",
      "docstring": "Detect impossible stack changes.",
      "bases": [],
      "methods": [
        "__init__",
        "validate_change"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 269
    },
    {
      "id": "src.pokertool.scraping_accuracy_system.OCRPostProcessor",
      "type": "class",
      "name": "OCRPostProcessor",
      "module": "src.pokertool.scraping_accuracy_system",
      "docstring": "Apply poker-specific text cleanup.",
      "bases": [],
      "methods": [
        "__init__",
        "clean_amount",
        "clean_card"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 25,
      "line_number": 295
    },
    {
      "id": "src.pokertool.scraping_accuracy_system.ExtractionStrategy",
      "type": "class",
      "name": "ExtractionStrategy",
      "module": "src.pokertool.scraping_accuracy_system",
      "docstring": null,
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 407
    },
    {
      "id": "src.pokertool.scraping_accuracy_system.MultiStrategyFusion",
      "type": "class",
      "name": "MultiStrategyFusion",
      "module": "src.pokertool.scraping_accuracy_system",
      "docstring": "Combine CDP, OCR, and Vision results with weighted voting.",
      "bases": [],
      "methods": [
        "__init__",
        "fuse_results"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 10,
      "line_number": 413
    },
    {
      "id": "src.pokertool.scraping_accuracy_system.AccuracyMetrics",
      "type": "class",
      "name": "AccuracyMetrics",
      "module": "src.pokertool.scraping_accuracy_system",
      "docstring": "Metrics for accuracy improvements.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 460
    },
    {
      "id": "src.pokertool.scraping_accuracy_system.ScrapingAccuracySystem",
      "type": "class",
      "name": "ScrapingAccuracySystem",
      "module": "src.pokertool.scraping_accuracy_system",
      "docstring": "Master class integrating all accuracy improvement features.\n\nExpected overall improvement: 95%+ accuracy with all features enabled.",
      "bases": [],
      "methods": [
        "__init__",
        "process_extraction",
        "get_metrics"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 15,
      "line_number": 472
    },
    {
      "id": "src.pokertool.scraping_accuracy_system.get_accuracy_system",
      "type": "function",
      "name": "get_accuracy_system",
      "module": "src.pokertool.scraping_accuracy_system",
      "signature": "def get_accuracy_system() -> ScrapingAccuracySystem",
      "docstring": "Get global accuracy system instance.",
      "parameters": [],
      "return_type": "ScrapingAccuracySystem",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "ScrapingAccuracySystem"
      ],
      "raises": [],
      "line_number": 561
    },
    {
      "id": "src.pokertool.timing_analyzer",
      "type": "module",
      "path": "src/pokertool/timing_analyzer.py",
      "docstring": "Timing Tell Analyzer - Advanced timing pattern analysis for poker decisions.\n\nThis module provides microsecond precision tracking, action sequence timing,\ntiming deviation detection, pattern clustering, and confidence intervals.",
      "version": null,
      "author": null,
      "complexity": 67,
      "loc": 519,
      "dependencies": [
        "math",
        "time",
        "typing",
        "dataclasses",
        "collections",
        "json"
      ]
    },
    {
      "id": "src.pokertool.timing_analyzer.TimingData",
      "type": "class",
      "name": "TimingData",
      "module": "src.pokertool.timing_analyzer",
      "docstring": "Store timing information for a single action.",
      "bases": [],
      "methods": [
        "to_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 17
    },
    {
      "id": "src.pokertool.timing_analyzer.TimingPattern",
      "type": "class",
      "name": "TimingPattern",
      "module": "src.pokertool.timing_analyzer",
      "docstring": "Detected timing pattern for a player.",
      "bases": [],
      "methods": [
        "to_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 43
    },
    {
      "id": "src.pokertool.timing_analyzer.MicrosecondPrecisionTracker",
      "type": "class",
      "name": "MicrosecondPrecisionTracker",
      "module": "src.pokertool.timing_analyzer",
      "docstring": "Track action timing with microsecond precision.",
      "bases": [],
      "methods": [
        "__init__",
        "start_action_timer",
        "record_action",
        "get_player_timings",
        "get_action_type_timings"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 6,
      "line_number": 66
    },
    {
      "id": "src.pokertool.timing_analyzer.ActionSequenceTimer",
      "type": "class",
      "name": "ActionSequenceTimer",
      "module": "src.pokertool.timing_analyzer",
      "docstring": "Analyze timing patterns in action sequences.",
      "bases": [],
      "methods": [
        "__init__",
        "add_to_sequence",
        "get_sequence_pattern",
        "detect_speed_changes",
        "_calculate_std_dev"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 13,
      "line_number": 115
    },
    {
      "id": "src.pokertool.timing_analyzer.TimingDeviationDetector",
      "type": "class",
      "name": "TimingDeviationDetector",
      "module": "src.pokertool.timing_analyzer",
      "docstring": "Detect timing deviations from baseline patterns.",
      "bases": [],
      "methods": [
        "__init__",
        "establish_baseline",
        "detect_deviation",
        "_calculate_std_dev"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 11,
      "line_number": 183
    },
    {
      "id": "src.pokertool.timing_analyzer.PatternClusterer",
      "type": "class",
      "name": "PatternClusterer",
      "module": "src.pokertool.timing_analyzer",
      "docstring": "Cluster timing patterns to identify player tendencies.",
      "bases": [],
      "methods": [
        "__init__",
        "cluster_timings",
        "identify_patterns",
        "_calculate_std_dev"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 13,
      "line_number": 248
    },
    {
      "id": "src.pokertool.timing_analyzer.ConfidenceIntervalCalculator",
      "type": "class",
      "name": "ConfidenceIntervalCalculator",
      "module": "src.pokertool.timing_analyzer",
      "docstring": "Calculate confidence intervals for timing patterns.",
      "bases": [],
      "methods": [
        "calculate_interval",
        "calculate_pattern_confidence"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 3,
      "line_number": 338
    },
    {
      "id": "src.pokertool.timing_analyzer.TimingTellAnalyzer",
      "type": "class",
      "name": "TimingTellAnalyzer",
      "module": "src.pokertool.timing_analyzer",
      "docstring": "Main class orchestrating all timing analysis components.",
      "bases": [],
      "methods": [
        "__init__",
        "start_action",
        "record_action",
        "analyze_player",
        "detect_live_deviation",
        "get_hand_sequence_analysis",
        "export_data",
        "import_data"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 14,
      "line_number": 381
    },
    {
      "id": "src.pokertool.timing_analyzer.analyze_timing_patterns",
      "type": "function",
      "name": "analyze_timing_patterns",
      "module": "src.pokertool.timing_analyzer",
      "signature": "def analyze_timing_patterns(timings: List[TimingData]) -> List[TimingPattern]",
      "docstring": "Quick utility to analyze timing patterns.",
      "parameters": [
        {
          "name": "timings",
          "annotation": "List[TimingData]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "List[TimingPattern]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "TimingTellAnalyzer",
        "analyzer.tracker.timing_data.append",
        "analyzer.clusterer.identify_patterns"
      ],
      "raises": [],
      "line_number": 491
    },
    {
      "id": "src.pokertool.timing_analyzer.detect_timing_tell",
      "type": "function",
      "name": "detect_timing_tell",
      "module": "src.pokertool.timing_analyzer",
      "signature": "def detect_timing_tell(baseline_mean: float, baseline_std: float, decision_time: float) -> Dict",
      "docstring": "Quick utility to detect timing tell.",
      "parameters": [
        {
          "name": "baseline_mean",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "baseline_std",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "decision_time",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Dict",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "abs",
        "min",
        "abs"
      ],
      "raises": [],
      "line_number": 503
    },
    {
      "id": "src.pokertool.database_optimization",
      "type": "module",
      "path": "src/pokertool/database_optimization.py",
      "docstring": "Database optimization utilities including caching, archiving, and monitoring.",
      "version": null,
      "author": null,
      "complexity": 45,
      "loc": 205,
      "dependencies": [
        "pathlib",
        "time",
        "__future__",
        "typing",
        "dataclasses",
        "json"
      ]
    },
    {
      "id": "src.pokertool.database_optimization.CachedResult",
      "type": "class",
      "name": "CachedResult",
      "module": "src.pokertool.database_optimization",
      "docstring": "Represents a cached query result entry.",
      "bases": [],
      "methods": [
        "is_valid"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 16
    },
    {
      "id": "src.pokertool.database_optimization.QueryRecord",
      "type": "class",
      "name": "QueryRecord",
      "module": "src.pokertool.database_optimization",
      "docstring": "Captured information about executed queries.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 29
    },
    {
      "id": "src.pokertool.database_optimization.QueryCache",
      "type": "class",
      "name": "QueryCache",
      "module": "src.pokertool.database_optimization",
      "docstring": "In-memory query result cache with TTL support.",
      "bases": [],
      "methods": [
        "__init__",
        "get",
        "set",
        "purge",
        "stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 9,
      "line_number": 41
    },
    {
      "id": "src.pokertool.database_optimization.QueryMonitor",
      "type": "class",
      "name": "QueryMonitor",
      "module": "src.pokertool.database_optimization",
      "docstring": "Tracks query performance and identifies optimization candidates.",
      "bases": [],
      "methods": [
        "__init__",
        "record",
        "slow_queries",
        "failure_rate",
        "usage_statistics"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 7,
      "line_number": 72
    },
    {
      "id": "src.pokertool.database_optimization.IndexAdvisor",
      "type": "class",
      "name": "IndexAdvisor",
      "module": "src.pokertool.database_optimization",
      "docstring": "Heuristic index recommendation engine based on query patterns.",
      "bases": [],
      "methods": [
        "__init__",
        "register_filter",
        "recommendations"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 102
    },
    {
      "id": "src.pokertool.database_optimization.ArchiveManager",
      "type": "class",
      "name": "ArchiveManager",
      "module": "src.pokertool.database_optimization",
      "docstring": "Handles data archiving for cold storage.",
      "bases": [],
      "methods": [
        "__init__",
        "archive",
        "archived_files"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 3,
      "line_number": 121
    },
    {
      "id": "src.pokertool.database_optimization.DatabaseOptimizationManager",
      "type": "class",
      "name": "DatabaseOptimizationManager",
      "module": "src.pokertool.database_optimization",
      "docstring": "Composite utility for applying database optimizations.",
      "bases": [],
      "methods": [
        "__init__",
        "cached_query",
        "optimize_query",
        "monitor_query",
        "archive_table",
        "optimization_summary"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 20,
      "line_number": 138
    },
    {
      "id": "src.pokertool.bankroll_management",
      "type": "module",
      "path": "src/pokertool/bankroll_management.py",
      "docstring": "PokerTool Bankroll Management Module\n======================================\n\nThis module provides functionality for bankroll management operations\nwithin the PokerTool application ecosystem.\n\nModule: pokertool.bankroll_management\nVersion: 20.0.0\nLast Modified: 2025-09-29\nAuthor: PokerTool Development Team\nLicense: MIT\n\nDependencies:\n    - See module imports for specific dependencies\n    - Python 3.10+ required\n\nChange Log:\n    - v28.0.0 (2025-09-29): Enhanced documentation\n    - v19.0.0 (2025-09-18): Bug fixes and improvements\n    - v18.0.0 (2025-09-15): Initial implementation",
      "version": "'20.0.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 62,
      "loc": 643,
      "dependencies": [
        "logging",
        "math",
        "typing",
        "dataclasses",
        "json",
        "enum",
        "datetime",
        "statistics"
      ]
    },
    {
      "id": "src.pokertool.bankroll_management.GameType",
      "type": "class",
      "name": "GameType",
      "module": "src.pokertool.bankroll_management",
      "docstring": "Types of poker games.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 45
    },
    {
      "id": "src.pokertool.bankroll_management.StakeLevel",
      "type": "class",
      "name": "StakeLevel",
      "module": "src.pokertool.bankroll_management",
      "docstring": "Stake levels for games.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 52
    },
    {
      "id": "src.pokertool.bankroll_management.BankrollTransaction",
      "type": "class",
      "name": "BankrollTransaction",
      "module": "src.pokertool.bankroll_management",
      "docstring": "Individual bankroll transaction.",
      "bases": [],
      "methods": [
        "get_roi"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 61
    },
    {
      "id": "src.pokertool.bankroll_management.BankrollSnapshot",
      "type": "class",
      "name": "BankrollSnapshot",
      "module": "src.pokertool.bankroll_management",
      "docstring": "Snapshot of bankroll at a point in time.",
      "bases": [],
      "methods": [
        "get_roi"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 81
    },
    {
      "id": "src.pokertool.bankroll_management.KellyCriterion",
      "type": "class",
      "name": "KellyCriterion",
      "module": "src.pokertool.bankroll_management",
      "docstring": "Kelly Criterion calculator for optimal bankroll sizing.",
      "bases": [],
      "methods": [
        "calculate_kelly_fraction",
        "recommended_stake"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 11,
      "line_number": 97
    },
    {
      "id": "src.pokertool.bankroll_management.VarianceCalculator",
      "type": "class",
      "name": "VarianceCalculator",
      "module": "src.pokertool.bankroll_management",
      "docstring": "Calculate variance and risk metrics.",
      "bases": [],
      "methods": [
        "calculate_standard_deviation",
        "calculate_downswing_probability",
        "risk_of_ruin"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 9,
      "line_number": 153
    },
    {
      "id": "src.pokertool.bankroll_management.BankrollAlert",
      "type": "class",
      "name": "BankrollAlert",
      "module": "src.pokertool.bankroll_management",
      "docstring": "Bankroll alert system.",
      "bases": [],
      "methods": [
        "__init__",
        "check_alerts"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 12,
      "line_number": 221
    },
    {
      "id": "src.pokertool.bankroll_management.BankrollManager",
      "type": "class",
      "name": "BankrollManager",
      "module": "src.pokertool.bankroll_management",
      "docstring": "Main bankroll management system.",
      "bases": [],
      "methods": [
        "__init__",
        "set_initial_bankroll",
        "add_transaction",
        "_update_snapshot",
        "get_current_snapshot",
        "get_recent_transactions",
        "calculate_statistics",
        "get_kelly_recommendation",
        "get_variance_analysis",
        "check_alerts",
        "export_data"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 21,
      "line_number": 293
    },
    {
      "id": "src.pokertool.bankroll_management.get_bankroll_manager",
      "type": "function",
      "name": "get_bankroll_manager",
      "module": "src.pokertool.bankroll_management",
      "signature": "def get_bankroll_manager() -> BankrollManager",
      "docstring": "Get the global bankroll manager instance.",
      "parameters": [],
      "return_type": "BankrollManager",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "BankrollManager"
      ],
      "raises": [],
      "line_number": 547
    },
    {
      "id": "src.pokertool.bankroll_management.add_session_result",
      "type": "function",
      "name": "add_session_result",
      "module": "src.pokertool.bankroll_management",
      "signature": "def add_session_result(game_type: str, stake_level: str, buy_in: float, cash_out: float, session_hours: float, location: str, notes: str) -> bool",
      "docstring": "Add a session result to bankroll tracking.",
      "parameters": [
        {
          "name": "game_type",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "stake_level",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "buy_in",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "cash_out",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "session_hours",
          "annotation": "float",
          "default": "1.0",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "location",
          "annotation": "str",
          "default": "'Online'",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "notes",
          "annotation": "str",
          "default": "''",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "bool",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_bankroll_manager",
        "BankrollTransaction",
        "int",
        "timestamp",
        "datetime.utcnow",
        "GameType",
        "timedelta",
        "manager.add_transaction"
      ],
      "raises": [],
      "line_number": 554
    },
    {
      "id": "src.pokertool.bankroll_management.get_bankroll_summary",
      "type": "function",
      "name": "get_bankroll_summary",
      "module": "src.pokertool.bankroll_management",
      "signature": "def get_bankroll_summary() -> Dict[str, Any]",
      "docstring": "Get current bankroll summary.",
      "parameters": [],
      "return_type": "Dict[str, Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_bankroll_manager",
        "manager.get_current_snapshot",
        "manager.calculate_statistics"
      ],
      "raises": [],
      "line_number": 573
    },
    {
      "id": "src.pokertool.bankroll_management.get_stake_recommendation",
      "type": "function",
      "name": "get_stake_recommendation",
      "module": "src.pokertool.bankroll_management",
      "signature": "def get_stake_recommendation(stake_buy_in: float) -> Dict[str, Any]",
      "docstring": "Get Kelly criterion recommendation for a stake.",
      "parameters": [
        {
          "name": "stake_buy_in",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Dict[str, Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_bankroll_manager",
        "manager.get_kelly_recommendation"
      ],
      "raises": [],
      "line_number": 589
    },
    {
      "id": "src.pokertool.dependency_manager",
      "type": "module",
      "path": "src/pokertool/dependency_manager.py",
      "docstring": "PokerTool Dependency Manager\n===========================\n\nComprehensive dependency validation and management system for PokerTool.\nThis module validates all dependencies upfront and provides detailed logging.\n\nModule: pokertool.dependency_manager\nVersion: 1.0.0\nLast Modified: 2025-01-07\nAuthor: PokerTool Development Team\nLicense: MIT",
      "version": null,
      "author": null,
      "complexity": 71,
      "loc": 633,
      "dependencies": [
        "sys",
        "platform",
        "pathlib",
        "time",
        "typing",
        "dataclasses",
        "subprocess",
        "json",
        "importlib",
        "os"
      ]
    },
    {
      "id": "src.pokertool.dependency_manager.DependencyInfo",
      "type": "class",
      "name": "DependencyInfo",
      "module": "src.pokertool.dependency_manager",
      "docstring": "Information about a dependency.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 31
    },
    {
      "id": "src.pokertool.dependency_manager.SystemReport",
      "type": "class",
      "name": "SystemReport",
      "module": "src.pokertool.dependency_manager",
      "docstring": "Complete system validation report.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 42
    },
    {
      "id": "src.pokertool.dependency_manager.DependencyManager",
      "type": "class",
      "name": "DependencyManager",
      "module": "src.pokertool.dependency_manager",
      "docstring": "Comprehensive dependency management system.",
      "bases": [],
      "methods": [
        "__init__",
        "log",
        "check_python_module",
        "check_system_dependency",
        "_is_module_available",
        "_get_module_version",
        "install_python_package",
        "validate_all_dependencies",
        "_generate_recommendations",
        "_log_report",
        "_log_dependency_category",
        "is_ready",
        "get_missing_critical",
        "save_report"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 67,
      "line_number": 53
    },
    {
      "id": "src.pokertool.dependency_manager.get_dependency_manager",
      "type": "function",
      "name": "get_dependency_manager",
      "module": "src.pokertool.dependency_manager",
      "signature": "def get_dependency_manager(verbose: bool, auto_install: bool) -> DependencyManager",
      "docstring": "Get the global dependency manager instance.",
      "parameters": [
        {
          "name": "verbose",
          "annotation": "bool",
          "default": "True",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "auto_install",
          "annotation": "bool",
          "default": "True",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "DependencyManager",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "DependencyManager"
      ],
      "raises": [],
      "line_number": 603
    },
    {
      "id": "src.pokertool.dependency_manager.validate_system",
      "type": "function",
      "name": "validate_system",
      "module": "src.pokertool.dependency_manager",
      "signature": "def validate_system(verbose: bool, auto_install: bool) -> SystemReport",
      "docstring": "Validate all system dependencies and return report.",
      "parameters": [
        {
          "name": "verbose",
          "annotation": "bool",
          "default": "True",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "auto_install",
          "annotation": "bool",
          "default": "True",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "SystemReport",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_dependency_manager",
        "manager.validate_all_dependencies"
      ],
      "raises": [],
      "line_number": 610
    },
    {
      "id": "src.pokertool.dependency_manager.is_system_ready",
      "type": "function",
      "name": "is_system_ready",
      "module": "src.pokertool.dependency_manager",
      "signature": "def is_system_ready(verbose: bool) -> bool",
      "docstring": "Quick check if system has all critical dependencies.",
      "parameters": [
        {
          "name": "verbose",
          "annotation": "bool",
          "default": "False",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "bool",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_dependency_manager",
        "manager.is_ready"
      ],
      "raises": [],
      "line_number": 615
    },
    {
      "id": "src.pokertool.hud_profiles",
      "type": "module",
      "path": "src/pokertool/hud_profiles.py",
      "docstring": "HUD profile storage helpers.",
      "version": null,
      "author": null,
      "complexity": 9,
      "loc": 41,
      "dependencies": [
        "typing",
        "pathlib",
        "json",
        "__future__"
      ]
    },
    {
      "id": "src.pokertool.hud_profiles.list_hud_profiles",
      "type": "function",
      "name": "list_hud_profiles",
      "module": "src.pokertool.hud_profiles",
      "signature": "def list_hud_profiles() -> List[str]",
      "docstring": "Return the list of available HUD profile names.",
      "parameters": [],
      "return_type": "List[str]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "PROFILE_DIR.glob",
        "profiles.append",
        "profiles.append",
        "sorted"
      ],
      "raises": [],
      "line_number": 13
    },
    {
      "id": "src.pokertool.hud_profiles.load_hud_profile",
      "type": "function",
      "name": "load_hud_profile",
      "module": "src.pokertool.hud_profiles",
      "signature": "def load_hud_profile(name: str) -> Dict[str, Any]",
      "docstring": "Load the HUD profile dictionary or return empty dict when missing.",
      "parameters": [
        {
          "name": "name",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Dict[str, Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 4,
      "calls": [
        "profile_path.exists",
        "profile_path.open",
        "json.load"
      ],
      "raises": [],
      "line_number": 23
    },
    {
      "id": "src.pokertool.hud_profiles.save_hud_profile",
      "type": "function",
      "name": "save_hud_profile",
      "module": "src.pokertool.hud_profiles",
      "signature": "def save_hud_profile(name: str, config_dict: Dict[str, Any]) -> Path",
      "docstring": "Persist the HUD profile dictionary to disk.",
      "parameters": [
        {
          "name": "name",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "config_dict",
          "annotation": "Dict[str, Any]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Path",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "profile_path.open",
        "json.dump"
      ],
      "raises": [],
      "line_number": 35
    },
    {
      "id": "src.pokertool.compliance",
      "type": "module",
      "path": "src/pokertool/compliance.py",
      "docstring": "PokerTool Compliance Module\n=============================\n\nThis module provides functionality for compliance operations\nwithin the PokerTool application ecosystem.\n\nModule: pokertool.compliance\nVersion: 20.0.0\nLast Modified: 2025-09-29\nAuthor: PokerTool Development Team\nLicense: MIT\n\nDependencies:\n    - See module imports for specific dependencies\n    - Python 3.10+ required\n\nChange Log:\n    - v28.0.0 (2025-09-29): Enhanced documentation\n    - v19.0.0 (2025-09-18): Bug fixes and improvements\n    - v18.0.0 (2025-09-15): Initial implementation",
      "version": "'20.0.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 44,
      "loc": 554,
      "dependencies": [
        "logging",
        "pathlib",
        "typing",
        "dataclasses",
        "json",
        "enum",
        "datetime"
      ]
    },
    {
      "id": "src.pokertool.compliance.ConsentType",
      "type": "class",
      "name": "ConsentType",
      "module": "src.pokertool.compliance",
      "docstring": "Types of user consent required.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 44
    },
    {
      "id": "src.pokertool.compliance.DataCategory",
      "type": "class",
      "name": "DataCategory",
      "module": "src.pokertool.compliance",
      "docstring": "Categories of data for GDPR compliance.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 53
    },
    {
      "id": "src.pokertool.compliance.UserConsent",
      "type": "class",
      "name": "UserConsent",
      "module": "src.pokertool.compliance",
      "docstring": "User consent record.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 62
    },
    {
      "id": "src.pokertool.compliance.DataRetentionPolicy",
      "type": "class",
      "name": "DataRetentionPolicy",
      "module": "src.pokertool.compliance",
      "docstring": "Data retention policy configuration.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 73
    },
    {
      "id": "src.pokertool.compliance.ComplianceViolation",
      "type": "class",
      "name": "ComplianceViolation",
      "module": "src.pokertool.compliance",
      "docstring": "Compliance violation record.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 82
    },
    {
      "id": "src.pokertool.compliance.PokerSiteCompliance",
      "type": "class",
      "name": "PokerSiteCompliance",
      "module": "src.pokertool.compliance",
      "docstring": "Compliance checker for poker site Terms of Service.",
      "bases": [],
      "methods": [
        "__init__",
        "check_feature_compliance",
        "get_site_restrictions"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 11,
      "line_number": 92
    },
    {
      "id": "src.pokertool.compliance.GDPRCompliance",
      "type": "class",
      "name": "GDPRCompliance",
      "module": "src.pokertool.compliance",
      "docstring": "GDPR compliance management.",
      "bases": [],
      "methods": [
        "__init__",
        "_create_default_retention_policies",
        "record_consent",
        "check_consent",
        "get_user_consents",
        "revoke_consent",
        "log_data_processing",
        "should_delete_data",
        "generate_privacy_report"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 13,
      "line_number": 159
    },
    {
      "id": "src.pokertool.compliance.ComplianceManager",
      "type": "class",
      "name": "ComplianceManager",
      "module": "src.pokertool.compliance",
      "docstring": "Main compliance management system.",
      "bases": [],
      "methods": [
        "__init__",
        "validate_feature_use",
        "_record_violation",
        "setup_user_consent",
        "get_required_consents",
        "generate_privacy_policy",
        "cleanup_expired_data",
        "get_compliance_status"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 13,
      "line_number": 308
    },
    {
      "id": "src.pokertool.compliance.get_compliance_manager",
      "type": "function",
      "name": "get_compliance_manager",
      "module": "src.pokertool.compliance",
      "signature": "def get_compliance_manager() -> ComplianceManager",
      "docstring": "Get the global compliance manager instance.",
      "parameters": [],
      "return_type": "ComplianceManager",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "ComplianceManager"
      ],
      "raises": [],
      "line_number": 500
    },
    {
      "id": "src.pokertool.compliance.check_feature_compliance",
      "type": "function",
      "name": "check_feature_compliance",
      "module": "src.pokertool.compliance",
      "signature": "def check_feature_compliance(user_id: str, site: str, feature: str) -> bool",
      "docstring": "Check if a feature can be used compliantly.",
      "parameters": [
        {
          "name": "user_id",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "site",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "feature",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "bool",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_compliance_manager",
        "manager.validate_feature_use"
      ],
      "raises": [],
      "line_number": 507
    },
    {
      "id": "src.pokertool.compliance.record_user_consent",
      "type": "function",
      "name": "record_user_consent",
      "module": "src.pokertool.compliance",
      "signature": "def record_user_consent(user_id: str, consent_type: str, granted: bool, ip_address: str, user_agent: str) -> bool",
      "docstring": "Record user consent for GDPR compliance.",
      "parameters": [
        {
          "name": "user_id",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "consent_type",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "granted",
          "annotation": "bool",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "ip_address",
          "annotation": "str",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "user_agent",
          "annotation": "str",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "bool",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "get_compliance_manager",
        "ConsentType",
        "manager.gdpr.record_consent",
        "logger.error"
      ],
      "raises": [],
      "line_number": 512
    },
    {
      "id": "src.pokertool.compliance.get_user_privacy_report",
      "type": "function",
      "name": "get_user_privacy_report",
      "module": "src.pokertool.compliance",
      "signature": "def get_user_privacy_report(user_id: str) -> Dict[str, Any]",
      "docstring": "Generate GDPR privacy report for user.",
      "parameters": [
        {
          "name": "user_id",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Dict[str, Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_compliance_manager",
        "manager.gdpr.generate_privacy_report"
      ],
      "raises": [],
      "line_number": 524
    },
    {
      "id": "src.pokertool.compliance.is_site_compliant",
      "type": "function",
      "name": "is_site_compliant",
      "module": "src.pokertool.compliance",
      "signature": "def is_site_compliant(site: str, feature: str) -> bool",
      "docstring": "Check if feature is compliant with poker site ToS.",
      "parameters": [
        {
          "name": "site",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "feature",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "bool",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_compliance_manager",
        "manager.poker_sites.check_feature_compliance"
      ],
      "raises": [],
      "line_number": 529
    },
    {
      "id": "src.pokertool.icm_calculator",
      "type": "module",
      "path": "src/pokertool/icm_calculator.py",
      "docstring": "Real-time Independent Chip Model (ICM) calculator for tournament poker.\n\nThis module implements ICM calculations for tournament optimal play, including:\n- Malmuth-Harville algorithm for prize distribution\n- Future game simulation\n- Bubble factor calculations\n- Risk premium adjustments\n- Payout structure optimization\n\nModule: icm_calculator\nVersion: 1.0.0\nLast Updated: 2025-10-05\nTask: ICM-001\nDependencies: None\nTest Coverage: tests/system/test_icm_calculator.py",
      "version": null,
      "author": null,
      "complexity": 46,
      "loc": 511,
      "dependencies": [
        "typing",
        "dataclasses",
        "math",
        "__future__"
      ]
    },
    {
      "id": "src.pokertool.icm_calculator.TournamentState",
      "type": "class",
      "name": "TournamentState",
      "module": "src.pokertool.icm_calculator",
      "docstring": "Represents the current state of a poker tournament.",
      "bases": [],
      "methods": [
        "__post_init__",
        "num_players",
        "total_chips",
        "get_stack_sizes"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 4,
      "line_number": 26
    },
    {
      "id": "src.pokertool.icm_calculator.ICMResult",
      "type": "class",
      "name": "ICMResult",
      "module": "src.pokertool.icm_calculator",
      "docstring": "Result of an ICM calculation.",
      "bases": [],
      "methods": [
        "get_equity_percentage"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 54
    },
    {
      "id": "src.pokertool.icm_calculator.ICMDecision",
      "type": "class",
      "name": "ICMDecision",
      "module": "src.pokertool.icm_calculator",
      "docstring": "ICM-adjusted decision analysis.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 69
    },
    {
      "id": "src.pokertool.icm_calculator.MalmuthHarvilleCalculator",
      "type": "class",
      "name": "MalmuthHarvilleCalculator",
      "module": "src.pokertool.icm_calculator",
      "docstring": "Implements the Malmuth-Harville algorithm for ICM calculations.\n\nThe Malmuth-Harville algorithm calculates the probability of each player\nfinishing in each position based on their chip stacks.",
      "bases": [],
      "methods": [
        "__init__",
        "calculate_finish_probability",
        "clear_cache"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 17,
      "line_number": 79
    },
    {
      "id": "src.pokertool.icm_calculator.ICMCalculator",
      "type": "class",
      "name": "ICMCalculator",
      "module": "src.pokertool.icm_calculator",
      "docstring": "Real-time ICM calculator for tournament poker.\n\nProvides comprehensive ICM calculations including:\n- Player equity calculation\n- Finish probability distributions\n- Bubble factor analysis\n- Risk premium calculations",
      "bases": [],
      "methods": [
        "__init__",
        "calculate_icm",
        "calculate_bubble_factor",
        "calculate_risk_premium",
        "analyze_decision",
        "_modify_stack",
        "optimize_payout_structure",
        "simulate_future_game"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 23,
      "line_number": 183
    },
    {
      "id": "src.pokertool.coaching_system",
      "type": "module",
      "path": "src/pokertool/coaching_system.py",
      "docstring": "Adaptive coaching system providing real-time poker guidance.",
      "version": null,
      "author": null,
      "complexity": 85,
      "loc": 498,
      "dependencies": [
        "pathlib",
        "time",
        "__future__",
        "typing",
        "dataclasses",
        "core",
        "json",
        "statistics"
      ]
    },
    {
      "id": "src.pokertool.coaching_system.DetectedMistake",
      "type": "class",
      "name": "DetectedMistake",
      "module": "src.pokertool.coaching_system",
      "docstring": "Represents a detected mistake for a particular hand.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 25
    },
    {
      "id": "src.pokertool.coaching_system.RealTimeAdvice",
      "type": "class",
      "name": "RealTimeAdvice",
      "module": "src.pokertool.coaching_system",
      "docstring": "Structured real-time coaching hint.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 37
    },
    {
      "id": "src.pokertool.coaching_system.TrainingScenario",
      "type": "class",
      "name": "TrainingScenario",
      "module": "src.pokertool.coaching_system",
      "docstring": "Guided training spot the player can review.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 47
    },
    {
      "id": "src.pokertool.coaching_system.CoachingProgress",
      "type": "class",
      "name": "CoachingProgress",
      "module": "src.pokertool.coaching_system",
      "docstring": "Aggregated progress snapshot used for UI summaries.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 66
    },
    {
      "id": "src.pokertool.coaching_system.CoachingFeedback",
      "type": "class",
      "name": "CoachingFeedback",
      "module": "src.pokertool.coaching_system",
      "docstring": "Full coaching payload after evaluating a hand.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 78
    },
    {
      "id": "src.pokertool.coaching_system.CoachingSystem",
      "type": "class",
      "name": "CoachingSystem",
      "module": "src.pokertool.coaching_system",
      "docstring": "High-level coordinator for poker coaching insights.",
      "bases": [],
      "methods": [
        "__init__",
        "_load_progress",
        "_save_progress",
        "evaluate_hand",
        "get_real_time_advice",
        "get_training_scenarios",
        "mark_scenario_completed",
        "get_progress_snapshot",
        "get_personalized_tips",
        "_detect_mistakes",
        "_build_real_time_advice_from_result",
        "_generate_personalized_tips",
        "_update_progress_with_feedback",
        "_calculate_accuracy_score",
        "_normalize_cards",
        "_update_daily_streak",
        "_build_default_scenarios",
        "_build_tip_library"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 85,
      "line_number": 86
    },
    {
      "id": "src.pokertool.scraping_speed_optimizer",
      "type": "module",
      "path": "src/pokertool/scraping_speed_optimizer.py",
      "docstring": "Scraping Speed Optimization Master Module\n==========================================\n\nIntegrates all speed improvement features (SCRAPE-015 through SCRAPE-026).\n\nThis module provides a unified interface for all speed optimization features:\n- SCRAPE-015: ROI Tracking System\n- SCRAPE-016: Frame Differencing Engine\n- SCRAPE-017: Smart OCR Result Caching\n- SCRAPE-018: Parallel Multi-Region Extraction\n- SCRAPE-019: Memory-Mapped Screen Capture\n- SCRAPE-020: Compiled Preprocessing Kernels\n- SCRAPE-021: Batch Region Processing\n- SCRAPE-022: Adaptive Sampling Rate\n- SCRAPE-023: Incremental Table Updates\n- SCRAPE-024: Hardware Decode Acceleration\n- SCRAPE-025: OCR Engine Prioritization\n- SCRAPE-026: Lazy Extraction Strategy\n\nModule: pokertool.scraping_speed_optimizer\nVersion: 1.0.0\nCreated: 2025-10-15\nAuthor: PokerTool Development Team\nLicense: MIT",
      "version": "'1.0.0'",
      "author": null,
      "complexity": 50,
      "loc": 379,
      "dependencies": [
        "logging",
        "numpy",
        "time",
        "typing",
        "dataclasses",
        "concurrent",
        "enum"
      ]
    },
    {
      "id": "src.pokertool.scraping_speed_optimizer.ParallelExtractor",
      "type": "class",
      "name": "ParallelExtractor",
      "module": "src.pokertool.scraping_speed_optimizer",
      "docstring": "Extract pot, cards, and all seat information concurrently.",
      "bases": [],
      "methods": [
        "__init__",
        "extract_parallel",
        "shutdown"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 6,
      "line_number": 47
    },
    {
      "id": "src.pokertool.scraping_speed_optimizer.AdaptiveSamplingRate",
      "type": "class",
      "name": "AdaptiveSamplingRate",
      "module": "src.pokertool.scraping_speed_optimizer",
      "docstring": "Adjust scraping frequency based on table activity.",
      "bases": [],
      "methods": [
        "__init__",
        "update",
        "get_interval"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 4,
      "line_number": 76
    },
    {
      "id": "src.pokertool.scraping_speed_optimizer.IncrementalUpdater",
      "type": "class",
      "name": "IncrementalUpdater",
      "module": "src.pokertool.scraping_speed_optimizer",
      "docstring": "Only re-extract elements that have changed since last frame.",
      "bases": [],
      "methods": [
        "__init__",
        "get_changes"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 104
    },
    {
      "id": "src.pokertool.scraping_speed_optimizer.OCREnginePriority",
      "type": "class",
      "name": "OCREnginePriority",
      "module": "src.pokertool.scraping_speed_optimizer",
      "docstring": null,
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 121
    },
    {
      "id": "src.pokertool.scraping_speed_optimizer.CascadingOCR",
      "type": "class",
      "name": "CascadingOCR",
      "module": "src.pokertool.scraping_speed_optimizer",
      "docstring": "Try fastest OCR engine first, fallback to slower/more accurate if confidence low.",
      "bases": [],
      "methods": [
        "__init__",
        "recognize",
        "_run_engine"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 6,
      "line_number": 127
    },
    {
      "id": "src.pokertool.scraping_speed_optimizer.ExtractionPriority",
      "type": "class",
      "name": "ExtractionPriority",
      "module": "src.pokertool.scraping_speed_optimizer",
      "docstring": null,
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 159
    },
    {
      "id": "src.pokertool.scraping_speed_optimizer.LazyExtractor",
      "type": "class",
      "name": "LazyExtractor",
      "module": "src.pokertool.scraping_speed_optimizer",
      "docstring": "Extract only fields needed for current decision.",
      "bases": [],
      "methods": [
        "__init__",
        "extract_prioritized"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 8,
      "line_number": 164
    },
    {
      "id": "src.pokertool.scraping_speed_optimizer.SpeedOptimizationMetrics",
      "type": "class",
      "name": "SpeedOptimizationMetrics",
      "module": "src.pokertool.scraping_speed_optimizer",
      "docstring": "Aggregated metrics for all speed optimizations.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 207
    },
    {
      "id": "src.pokertool.scraping_speed_optimizer.ScrapingSpeedOptimizer",
      "type": "class",
      "name": "ScrapingSpeedOptimizer",
      "module": "src.pokertool.scraping_speed_optimizer",
      "docstring": "Master class integrating all speed optimization features.\n\nExpected overall improvement: 5-10x faster scraping with all features enabled.",
      "bases": [],
      "methods": [
        "__init__",
        "process_frame",
        "get_metrics",
        "reset"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 19,
      "line_number": 217
    },
    {
      "id": "src.pokertool.scraping_speed_optimizer.get_speed_optimizer",
      "type": "function",
      "name": "get_speed_optimizer",
      "module": "src.pokertool.scraping_speed_optimizer",
      "signature": "def get_speed_optimizer() -> ScrapingSpeedOptimizer",
      "docstring": "Get global speed optimizer instance.",
      "parameters": [],
      "return_type": "ScrapingSpeedOptimizer",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "ScrapingSpeedOptimizer"
      ],
      "raises": [],
      "line_number": 348
    },
    {
      "id": "src.pokertool.retry_util",
      "type": "module",
      "path": "src/pokertool/retry_util.py",
      "docstring": "Retry Utility Module\n====================\n\nRetry logic with exponential backoff for handling transient failures in\nexternal API calls and other operations.\n\nModule: pokertool.retry_util\nVersion: 1.0.0",
      "version": null,
      "author": null,
      "complexity": 18,
      "loc": 280,
      "dependencies": [
        "functools",
        "logging",
        "random",
        "time",
        "typing"
      ]
    },
    {
      "id": "src.pokertool.retry_util.RetryError",
      "type": "class",
      "name": "RetryError",
      "module": "src.pokertool.retry_util",
      "docstring": "Exception raised when all retry attempts fail",
      "bases": [
        "Exception"
      ],
      "methods": [
        "__init__"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 25
    },
    {
      "id": "src.pokertool.retry_util.RetryStrategy",
      "type": "class",
      "name": "RetryStrategy",
      "module": "src.pokertool.retry_util",
      "docstring": "Configurable retry strategy for programmatic use",
      "bases": [],
      "methods": [
        "__init__",
        "execute"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 6,
      "line_number": 144
    },
    {
      "id": "src.pokertool.retry_util.exponential_backoff",
      "type": "function",
      "name": "exponential_backoff",
      "module": "src.pokertool.retry_util",
      "signature": "def exponential_backoff(attempt: int, base_delay: float, max_delay: float, exponential_base: float, jitter: bool) -> float",
      "docstring": "Calculate delay for exponential backoff\n\nArgs:\n    attempt: Current attempt number (0-indexed)\n    base_delay: Initial delay in seconds\n    max_delay: Maximum delay in seconds\n    exponential_base: Base for exponential growth\n    jitter: Add random jitter to prevent thundering herd\n\nReturns:\n    Delay in seconds",
      "parameters": [
        {
          "name": "attempt",
          "annotation": "int",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "base_delay",
          "annotation": "float",
          "default": "1.0",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "max_delay",
          "annotation": "float",
          "default": "60.0",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "exponential_base",
          "annotation": "float",
          "default": "2.0",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "jitter",
          "annotation": "bool",
          "default": "True",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "float",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "min",
        "random.random"
      ],
      "raises": [],
      "line_number": 33
    },
    {
      "id": "src.pokertool.retry_util.retry_with_backoff",
      "type": "function",
      "name": "retry_with_backoff",
      "module": "src.pokertool.retry_util",
      "signature": "def retry_with_backoff(max_attempts: int, base_delay: float, max_delay: float, exponential_base: float, exceptions: Tuple[Type[Exception], ...], on_retry: Optional[Callable[[Exception, int], None]], jitter: bool)",
      "docstring": "Decorator for retrying function with exponential backoff\n\nArgs:\n    max_attempts: Maximum number of attempts\n    base_delay: Initial delay between retries (seconds)\n    max_delay: Maximum delay between retries (seconds)\n    exponential_base: Base for exponential calculation\n    exceptions: Tuple of exceptions to catch and retry\n    on_retry: Optional callback function(exception, attempt)\n    jitter: Add random jitter to delays\n\nExample:\n    @retry_with_backoff(max_attempts=5, base_delay=2.0)\n    def fetch_data_from_api():\n        response = requests.get('https://api.example.com/data')\n        response.raise_for_status()\n        return response.json()",
      "parameters": [
        {
          "name": "max_attempts",
          "annotation": "int",
          "default": "3",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "base_delay",
          "annotation": "float",
          "default": "1.0",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "max_delay",
          "annotation": "float",
          "default": "60.0",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "exponential_base",
          "annotation": "float",
          "default": "2.0",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "exceptions",
          "annotation": "Tuple[Type[Exception], ...]",
          "default": "(Exception,)",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "on_retry",
          "annotation": "Optional[Callable[[Exception, int], None]]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "jitter",
          "annotation": "bool",
          "default": "True",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 5,
      "calls": [
        "range",
        "func",
        "logger.error",
        "RetryError",
        "exponential_backoff",
        "logger.warning",
        "on_retry",
        "time.sleep",
        "RetryError",
        "functools.wraps"
      ],
      "raises": [
        "RetryError",
        "RetryError"
      ],
      "line_number": 62
    },
    {
      "id": "src.pokertool.retry_util.retry_api_call",
      "type": "function",
      "name": "retry_api_call",
      "module": "src.pokertool.retry_util",
      "signature": "def retry_api_call(func: Callable, args, kwargs) -> Any",
      "docstring": "Retry API call with standard configuration",
      "parameters": [
        {
          "name": "func",
          "annotation": "Callable",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "args",
          "annotation": null,
          "default": null,
          "kind": "VAR_POSITIONAL"
        },
        {
          "name": "kwargs",
          "annotation": null,
          "default": null,
          "kind": "VAR_KEYWORD"
        }
      ],
      "return_type": "Any",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "API_RETRY.execute"
      ],
      "raises": [],
      "line_number": 263
    },
    {
      "id": "src.pokertool.retry_util.retry_database_operation",
      "type": "function",
      "name": "retry_database_operation",
      "module": "src.pokertool.retry_util",
      "signature": "def retry_database_operation(func: Callable, args, kwargs) -> Any",
      "docstring": "Retry database operation with standard configuration",
      "parameters": [
        {
          "name": "func",
          "annotation": "Callable",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "args",
          "annotation": null,
          "default": null,
          "kind": "VAR_POSITIONAL"
        },
        {
          "name": "kwargs",
          "annotation": null,
          "default": null,
          "kind": "VAR_KEYWORD"
        }
      ],
      "return_type": "Any",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "DATABASE_RETRY.execute"
      ],
      "raises": [],
      "line_number": 268
    },
    {
      "id": "src.pokertool.retry_util.retry_network_request",
      "type": "function",
      "name": "retry_network_request",
      "module": "src.pokertool.retry_util",
      "signature": "def retry_network_request(func: Callable, args, kwargs) -> Any",
      "docstring": "Retry network request with standard configuration",
      "parameters": [
        {
          "name": "func",
          "annotation": "Callable",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "args",
          "annotation": null,
          "default": null,
          "kind": "VAR_POSITIONAL"
        },
        {
          "name": "kwargs",
          "annotation": null,
          "default": null,
          "kind": "VAR_KEYWORD"
        }
      ],
      "return_type": "Any",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "NETWORK_RETRY.execute"
      ],
      "raises": [],
      "line_number": 273
    },
    {
      "id": "src.pokertool.retry_util.retry_ml_prediction",
      "type": "function",
      "name": "retry_ml_prediction",
      "module": "src.pokertool.retry_util",
      "signature": "def retry_ml_prediction(func: Callable, args, kwargs) -> Any",
      "docstring": "Retry ML prediction with standard configuration",
      "parameters": [
        {
          "name": "func",
          "annotation": "Callable",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "args",
          "annotation": null,
          "default": null,
          "kind": "VAR_POSITIONAL"
        },
        {
          "name": "kwargs",
          "annotation": null,
          "default": null,
          "kind": "VAR_KEYWORD"
        }
      ],
      "return_type": "Any",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "ML_MODEL_RETRY.execute"
      ],
      "raises": [],
      "line_number": 278
    },
    {
      "id": "src.pokertool.neural_evaluator",
      "type": "module",
      "path": "src/pokertool/neural_evaluator.py",
      "docstring": "Neural network hand strength evaluator for PokerTool.\n\nThis module provides both a lightweight neural-inspired model and a full CNN-based\ndeep learning model for hand strength evaluation. The CNN model can be trained on\nlarge hand history datasets for maximum accuracy.\n\nModule: neural_evaluator\nVersion: 2.0.0\nLast Updated: 2025-10-05\nTask: NN-EVAL-001\nDependencies: None\nTest Coverage: tests/system/test_neural_evaluator.py",
      "version": null,
      "author": null,
      "complexity": 113,
      "loc": 964,
      "dependencies": [
        "math",
        "pathlib",
        "__future__",
        "typing",
        "dataclasses",
        "json"
      ]
    },
    {
      "id": "src.pokertool.neural_evaluator.HandState",
      "type": "class",
      "name": "HandState",
      "module": "src.pokertool.neural_evaluator",
      "docstring": "Snapshot of a poker hand required for evaluation.",
      "bases": [],
      "methods": [
        "__post_init__"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 30
    },
    {
      "id": "src.pokertool.neural_evaluator.TrainingSample",
      "type": "class",
      "name": "TrainingSample",
      "module": "src.pokertool.neural_evaluator",
      "docstring": "Single labelled datapoint for incremental training.",
      "bases": [],
      "methods": [
        "__post_init__"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 52
    },
    {
      "id": "src.pokertool.neural_evaluator.HandEvaluation",
      "type": "class",
      "name": "HandEvaluation",
      "module": "src.pokertool.neural_evaluator",
      "docstring": "Result payload returned by the evaluator.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 65
    },
    {
      "id": "src.pokertool.neural_evaluator.NeuralHandStrengthEvaluator",
      "type": "class",
      "name": "NeuralHandStrengthEvaluator",
      "module": "src.pokertool.neural_evaluator",
      "docstring": "Evaluates hand strength using a lightweight neural-inspired model.",
      "bases": [],
      "methods": [
        "__init__",
        "evaluate_hand",
        "train",
        "board_texture_analysis",
        "_apply_gradient_update",
        "_extract_features",
        "_linear_score",
        "_contextual_adjustment",
        "_confidence_score",
        "_track_history",
        "_load_model",
        "_save_model",
        "_write_model_file",
        "_hole_card_strength",
        "_is_suited",
        "_gap_penalty",
        "_position_index",
        "_card_rank",
        "_has_straight_potential",
        "_sigmoid",
        "_clamp",
        "_clamp01"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 61,
      "line_number": 101
    },
    {
      "id": "src.pokertool.neural_evaluator.CNNModelConfig",
      "type": "class",
      "name": "CNNModelConfig",
      "module": "src.pokertool.neural_evaluator",
      "docstring": "Configuration for the CNN hand strength model.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 484
    },
    {
      "id": "src.pokertool.neural_evaluator.TrainingProgress",
      "type": "class",
      "name": "TrainingProgress",
      "module": "src.pokertool.neural_evaluator",
      "docstring": "Tracks training progress for the CNN model.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 498
    },
    {
      "id": "src.pokertool.neural_evaluator.CNNHandStrengthModel",
      "type": "class",
      "name": "CNNHandStrengthModel",
      "module": "src.pokertool.neural_evaluator",
      "docstring": "Deep learning CNN model for hand strength evaluation.\n\nThis model uses a convolutional neural network architecture to evaluate\nhand strength. It can be trained on millions of hand histories for\nsuperior accuracy compared to the lightweight model.\n\nArchitecture:\n- Input: 4x13x13 tensor (suits x ranks x ranks)\n- 3 Convolutional layers with increasing filters (64->128->256)\n- Global average pooling\n- 3 Dense layers with dropout (512->256->128)\n- Output: Single neuron with sigmoid activation (win probability)\n\nTraining:\n- Batch size: 256\n- Optimizer: Adam with learning rate 0.001\n- Loss: Binary cross-entropy\n- Metrics: Accuracy, AUC",
      "bases": [],
      "methods": [
        "__init__",
        "_initialize_model",
        "_build_tensorflow_model",
        "_build_pytorch_model",
        "encode_hand_state",
        "predict",
        "_simple_heuristic",
        "train_on_batch",
        "save_model",
        "_save_progress",
        "_load_progress"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 42,
      "line_number": 509
    },
    {
      "id": "src.pokertool.neural_evaluator.RealTimeInferenceEngine",
      "type": "class",
      "name": "RealTimeInferenceEngine",
      "module": "src.pokertool.neural_evaluator",
      "docstring": "High-level wrapper for real-time hand strength inference.\n\nThis class provides a simple interface for both the lightweight and\nCNN-based models, automatically selecting the best available option.",
      "bases": [],
      "methods": [
        "__init__",
        "evaluate",
        "get_model_info"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 8,
      "line_number": 883
    },
    {
      "id": "src.pokertool.status_window",
      "type": "module",
      "path": "src/pokertool/status_window.py",
      "docstring": "PokerTool Status Window\n=======================\n\nSimple status window for macOS dock icon that shows:\n- App loading status\n- Current activity\n- Detected tables\n- Real-time updates from backend\n\nModule: pokertool.status_window",
      "version": null,
      "author": null,
      "complexity": 33,
      "loc": 281,
      "dependencies": [
        "requests",
        "typing",
        "json",
        "datetime",
        "threading",
        "tkinter"
      ]
    },
    {
      "id": "src.pokertool.status_window.StatusWindow",
      "type": "class",
      "name": "StatusWindow",
      "module": "src.pokertool.status_window",
      "docstring": "Status window for displaying app status and detected tables.",
      "bases": [],
      "methods": [
        "__init__",
        "create_window",
        "show",
        "hide",
        "toggle",
        "log",
        "clear_log",
        "refresh_status",
        "_update_loop",
        "run",
        "stop"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 32,
      "line_number": 26
    },
    {
      "id": "src.pokertool.status_window.main",
      "type": "function",
      "name": "main",
      "module": "src.pokertool.status_window",
      "signature": "def main()",
      "docstring": "Test the status window.",
      "parameters": [],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "StatusWindow",
        "window.run"
      ],
      "raises": [],
      "line_number": 274
    },
    {
      "id": "src.pokertool.hud_designer",
      "type": "module",
      "path": "src/pokertool/hud_designer.py",
      "docstring": "Interactive HUD designer dialog for customizing the overlay.",
      "version": null,
      "author": null,
      "complexity": 92,
      "loc": 621,
      "dependencies": [
        "typing",
        "copy",
        "hud_profiles",
        "__future__"
      ]
    },
    {
      "id": "src.pokertool.hud_designer.HUDDesigner",
      "type": "class",
      "name": "HUDDesigner",
      "module": "src.pokertool.hud_designer",
      "docstring": "Modal configuration editor for the HUD overlay.",
      "bases": [],
      "methods": [
        "__init__",
        "show",
        "_create_window",
        "_build_display_tab",
        "_build_stats_tab",
        "_add_custom_stat",
        "_build_conditions_tab",
        "_refresh_condition_list",
        "_on_condition_selected",
        "_read_condition_fields",
        "_add_condition",
        "_update_condition",
        "_delete_condition",
        "_build_popup_tab",
        "_add_popup_stats",
        "_remove_popup_stats",
        "_reorder_popup",
        "_build_profile_tab",
        "_load_profile",
        "_rebuild_full_ui",
        "_on_cancel",
        "_on_apply",
        "_collect_configuration"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 92,
      "line_number": 20
    },
    {
      "id": "src.pokertool.quantum_optimizer",
      "type": "module",
      "path": "src/pokertool/quantum_optimizer.py",
      "docstring": "Quantum-Inspired Optimization for Poker\n\nApplies quantum computing algorithms for complex optimization in poker scenarios.\nUses quantum annealing simulation, QAOA, superposition states, and entanglement.\n\nID: QUANTUM-001\nPriority: HIGH\nExpected Accuracy Gain: 10-14% in specific complex scenarios",
      "version": null,
      "author": null,
      "complexity": 62,
      "loc": 512,
      "dependencies": [
        "typing",
        "dataclasses",
        "json",
        "enum",
        "numpy"
      ]
    },
    {
      "id": "src.pokertool.quantum_optimizer.OptimizationType",
      "type": "class",
      "name": "OptimizationType",
      "module": "src.pokertool.quantum_optimizer",
      "docstring": "Types of optimization problems",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 19
    },
    {
      "id": "src.pokertool.quantum_optimizer.QuantumState",
      "type": "class",
      "name": "QuantumState",
      "module": "src.pokertool.quantum_optimizer",
      "docstring": "Represents a quantum state (superposition)",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 29
    },
    {
      "id": "src.pokertool.quantum_optimizer.OptimizationResult",
      "type": "class",
      "name": "OptimizationResult",
      "module": "src.pokertool.quantum_optimizer",
      "docstring": "Result from quantum optimization",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 37
    },
    {
      "id": "src.pokertool.quantum_optimizer.QuantumAnnealingSimulator",
      "type": "class",
      "name": "QuantumAnnealingSimulator",
      "module": "src.pokertool.quantum_optimizer",
      "docstring": "Simulates quantum annealing for optimization",
      "bases": [],
      "methods": [
        "__init__",
        "_default_schedule",
        "_initialize_state",
        "_energy_function",
        "_propose_move",
        "anneal"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 21,
      "line_number": 47
    },
    {
      "id": "src.pokertool.quantum_optimizer.SuperpositionStateExplorer",
      "type": "class",
      "name": "SuperpositionStateExplorer",
      "module": "src.pokertool.quantum_optimizer",
      "docstring": "Explore solution space using quantum superposition",
      "bases": [],
      "methods": [
        "__init__",
        "create_superposition",
        "apply_phase_gate",
        "measure",
        "grover_iteration",
        "explore_space"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 15,
      "line_number": 169
    },
    {
      "id": "src.pokertool.quantum_optimizer.EntanglementCorrelationAnalyzer",
      "type": "class",
      "name": "EntanglementCorrelationAnalyzer",
      "module": "src.pokertool.quantum_optimizer",
      "docstring": "Analyze correlations using quantum entanglement concepts",
      "bases": [],
      "methods": [
        "__init__",
        "create_entangled_pair",
        "build_entanglement_network",
        "find_maximally_entangled_states",
        "calculate_correlation_matrix"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 12,
      "line_number": 272
    },
    {
      "id": "src.pokertool.quantum_optimizer.QuantumInspiredOptimizer",
      "type": "class",
      "name": "QuantumInspiredOptimizer",
      "module": "src.pokertool.quantum_optimizer",
      "docstring": "Main quantum-inspired optimizer for poker problems",
      "bases": [],
      "methods": [
        "__init__",
        "optimize_range_construction",
        "optimize_action_selection",
        "find_correlated_strategies",
        "optimize_bet_sizing",
        "export_optimization_report"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 11,
      "line_number": 327
    },
    {
      "id": "src.pokertool.quantum_optimizer.quick_optimize_range",
      "type": "function",
      "name": "quick_optimize_range",
      "module": "src.pokertool.quantum_optimizer",
      "signature": "def quick_optimize_range(candidate_hands: List[str], max_hands: int) -> str",
      "docstring": "Quick range optimization",
      "parameters": [
        {
          "name": "candidate_hands",
          "annotation": "List[str]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "max_hands",
          "annotation": "int",
          "default": "8",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "QuantumInspiredOptimizer",
        "sum",
        "any",
        "optimizer.optimize_range_construction"
      ],
      "raises": [],
      "line_number": 488
    },
    {
      "id": "src.pokertool.quantum_optimizer.find_optimal_action",
      "type": "function",
      "name": "find_optimal_action",
      "module": "src.pokertool.quantum_optimizer",
      "signature": "def find_optimal_action(actions: List[str], context: Dict) -> str",
      "docstring": "Find optimal action using quantum exploration",
      "parameters": [
        {
          "name": "actions",
          "annotation": "List[str]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "context",
          "annotation": "Dict",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "QuantumInspiredOptimizer",
        "optimizer.optimize_action_selection"
      ],
      "raises": [],
      "line_number": 508
    },
    {
      "id": "src.pokertool.scrape_fix",
      "type": "module",
      "path": "src/pokertool/scrape_fix.py",
      "docstring": "Screen Scraper Diagnostic and Fix Tool\n=======================================\n\nThis module diagnoses and fixes issues with the screen scraping system.",
      "version": null,
      "author": null,
      "complexity": 32,
      "loc": 262,
      "dependencies": [
        "logging",
        "sys",
        "pathlib",
        "typing",
        "os"
      ]
    },
    {
      "id": "src.pokertool.scrape_fix.diagnose_chrome_capture",
      "type": "function",
      "name": "diagnose_chrome_capture",
      "module": "src.pokertool.scrape_fix",
      "signature": "def diagnose_chrome_capture() -> Dict[str, Any]",
      "docstring": "Diagnose Chrome capture issues.",
      "parameters": [],
      "return_type": "Dict[str, Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 9,
      "calls": [
        "subprocess.run",
        "result.stdout.lower",
        "subprocess.run",
        "result.stdout.lower",
        "subprocess.run",
        "result.stdout.lower",
        "append",
        "socket.socket",
        "sock.settimeout",
        "sock.connect_ex",
        "sock.close",
        "append",
        "append",
        "append",
        "append",
        "append",
        "append",
        "append"
      ],
      "raises": [],
      "line_number": 19
    },
    {
      "id": "src.pokertool.scrape_fix.fix_scraper_initialization",
      "type": "function",
      "name": "fix_scraper_initialization",
      "module": "src.pokertool.scrape_fix",
      "signature": "def fix_scraper_initialization() -> bool",
      "docstring": "Fix the screen scraper initialization by updating the default capture source.",
      "parameters": [],
      "return_type": "bool",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 6,
      "calls": [
        "logger.info",
        "Path",
        "open",
        "f.read",
        "logger.info",
        "scrape_file.with_suffix",
        "open",
        "f.write",
        "logger.info",
        "content.replace",
        "content.replace",
        "open",
        "f.write",
        "logger.info",
        "logger.error"
      ],
      "raises": [],
      "line_number": 86
    },
    {
      "id": "src.pokertool.scrape_fix.test_screen_capture",
      "type": "function",
      "name": "test_screen_capture",
      "module": "src.pokertool.scrape_fix",
      "signature": "def test_screen_capture() -> Dict[str, Any]",
      "docstring": "Test all available screen capture methods.",
      "parameters": [],
      "return_type": "Dict[str, Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 5,
      "calls": [
        "mss.mss",
        "sct.grab",
        "np.array",
        "logger.info",
        "append",
        "append",
        "logger.error",
        "create_desktop_scraper",
        "scraper.scan_for_poker_windows",
        "len",
        "logger.info",
        "len",
        "append",
        "logger.error"
      ],
      "raises": [],
      "line_number": 139
    },
    {
      "id": "src.pokertool.scrape_fix.main",
      "type": "function",
      "name": "main",
      "module": "src.pokertool.scrape_fix",
      "signature": "def main()",
      "docstring": "Main diagnostic and fix routine.",
      "parameters": [],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 12,
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "diagnose_chrome_capture",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "test_screen_capture",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "fix_scraper_initialization",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "raises": [],
      "line_number": 184
    },
    {
      "id": "src.pokertool.watchdog_timer",
      "type": "module",
      "path": "src/pokertool/watchdog_timer.py",
      "docstring": "Watchdog Timer for Stuck Operations\n====================================\n\nDetect and recover from stuck/hung operations to improve reliability.\n\nFeatures:\n- Operation timeout detection\n- Automatic recovery actions\n- Thread safety\n- Configurable timeouts\n- Stuck operation logging\n- Automatic cleanup\n\nVersion: 69.0.0\nAuthor: PokerTool Development Team",
      "version": null,
      "author": null,
      "complexity": 45,
      "loc": 491,
      "dependencies": [
        "logging",
        "traceback",
        "time",
        "__future__",
        "typing",
        "dataclasses",
        "enum",
        "contextlib",
        "threading"
      ]
    },
    {
      "id": "src.pokertool.watchdog_timer.WatchdogAction",
      "type": "class",
      "name": "WatchdogAction",
      "module": "src.pokertool.watchdog_timer",
      "docstring": "Action to take when watchdog times out.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 40
    },
    {
      "id": "src.pokertool.watchdog_timer.OperationInfo",
      "type": "class",
      "name": "OperationInfo",
      "module": "src.pokertool.watchdog_timer",
      "docstring": "Information about a monitored operation.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 48
    },
    {
      "id": "src.pokertool.watchdog_timer.WatchdogTimeoutError",
      "type": "class",
      "name": "WatchdogTimeoutError",
      "module": "src.pokertool.watchdog_timer",
      "docstring": "Raised when an operation times out.",
      "bases": [
        "Exception"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 59
    },
    {
      "id": "src.pokertool.watchdog_timer.WatchdogTimer",
      "type": "class",
      "name": "WatchdogTimer",
      "module": "src.pokertool.watchdog_timer",
      "docstring": "Monitor operations and detect when they get stuck.\n\nUsage:\n    watchdog = WatchdogTimer()\n\n    # Use as context manager\n    with watchdog.monitor(\"scrape_table\", timeout=5.0):\n        result = scrape_table()\n\n    # Or use as decorator\n    @watchdog.watch(timeout=3.0)\n    def my_function():\n        ...",
      "bases": [],
      "methods": [
        "__init__",
        "start_monitoring",
        "stop_monitoring",
        "_monitoring_loop",
        "_handle_timeout",
        "monitor",
        "watch",
        "get_active_operations",
        "get_stats",
        "clear_stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 40,
      "line_number": 68
    },
    {
      "id": "src.pokertool.watchdog_timer.get_watchdog",
      "type": "function",
      "name": "get_watchdog",
      "module": "src.pokertool.watchdog_timer",
      "signature": "def get_watchdog() -> WatchdogTimer",
      "docstring": "Get global watchdog instance (singleton).\n\nReturns:\n    WatchdogTimer instance",
      "parameters": [],
      "return_type": "WatchdogTimer",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "WatchdogTimer",
        "_global_watchdog.start_monitoring"
      ],
      "raises": [],
      "line_number": 364
    },
    {
      "id": "src.pokertool.watchdog_timer.watch",
      "type": "function",
      "name": "watch",
      "module": "src.pokertool.watchdog_timer",
      "signature": "def watch(timeout: Optional[float], operation_name: Optional[str])",
      "docstring": "Convenience decorator using global watchdog.\n\nArgs:\n    timeout: Timeout in seconds\n    operation_name: Name of operation\n\nExample:\n    @watch(timeout=5.0)\n    def my_function():\n        ...",
      "parameters": [
        {
          "name": "timeout",
          "annotation": "Optional[float]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "operation_name",
          "annotation": "Optional[str]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "watch",
        "get_watchdog"
      ],
      "raises": [],
      "line_number": 378
    },
    {
      "id": "src.pokertool.watchdog_timer.monitor",
      "type": "function",
      "name": "monitor",
      "module": "src.pokertool.watchdog_timer",
      "signature": "def monitor(operation_name: str, timeout: Optional[float])",
      "docstring": "Convenience context manager using global watchdog.\n\nArgs:\n    operation_name: Name of operation\n    timeout: Timeout in seconds\n\nExample:\n    with monitor(\"expensive_op\", timeout=10.0):\n        result = expensive_operation()",
      "parameters": [
        {
          "name": "operation_name",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "timeout",
          "annotation": "Optional[float]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [
        "contextmanager"
      ],
      "is_async": false,
      "is_generator": true,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "monitor",
        "get_watchdog"
      ],
      "raises": [],
      "line_number": 398
    },
    {
      "id": "src.pokertool.hand_recorder",
      "type": "module",
      "path": "src/pokertool/hand_recorder.py",
      "docstring": "Hand Recorder for PokerTool\n============================\n\nCaptures hands in real-time from table state and saves to hand history database.\nDetects hand completion and extracts all relevant information.\n\nVersion: 1.0.0",
      "version": null,
      "author": null,
      "complexity": 43,
      "loc": 312,
      "dependencies": [
        "logging",
        "__future__",
        "typing",
        "dataclasses",
        "enum",
        "datetime"
      ]
    },
    {
      "id": "src.pokertool.hand_recorder.HandRecorderState",
      "type": "class",
      "name": "HandRecorderState",
      "module": "src.pokertool.hand_recorder",
      "docstring": "State of the hand recorder.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 25
    },
    {
      "id": "src.pokertool.hand_recorder.HandSnapshot",
      "type": "class",
      "name": "HandSnapshot",
      "module": "src.pokertool.hand_recorder",
      "docstring": "Snapshot of table state at a point in time.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 33
    },
    {
      "id": "src.pokertool.hand_recorder.HandRecorder",
      "type": "class",
      "name": "HandRecorder",
      "module": "src.pokertool.hand_recorder",
      "docstring": "Records poker hands from live table state.\n\nTracks hand progression and saves complete hand history when hand completes.",
      "bases": [],
      "methods": [
        "__init__",
        "update",
        "_should_start_new_hand",
        "_start_new_hand",
        "_record_snapshot",
        "_is_hand_complete",
        "_complete_hand",
        "reset",
        "get_status"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 39,
      "line_number": 44
    },
    {
      "id": "src.pokertool.hand_recorder.get_hand_recorder",
      "type": "function",
      "name": "get_hand_recorder",
      "module": "src.pokertool.hand_recorder",
      "signature": "def get_hand_recorder() -> HandRecorder",
      "docstring": "Get the global hand recorder instance.",
      "parameters": [],
      "return_type": "HandRecorder",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "HandRecorder"
      ],
      "raises": [],
      "line_number": 286
    },
    {
      "id": "src.pokertool.hand_recorder.enable_hand_recording",
      "type": "function",
      "name": "enable_hand_recording",
      "module": "src.pokertool.hand_recorder",
      "signature": "def enable_hand_recording(enabled: bool) -> None",
      "docstring": "Enable or disable hand recording.",
      "parameters": [
        {
          "name": "enabled",
          "annotation": "bool",
          "default": "True",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "None",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "get_hand_recorder",
        "logger.info",
        "logger.info"
      ],
      "raises": [],
      "line_number": 294
    },
    {
      "id": "src.pokertool.active_learning",
      "type": "module",
      "path": "src/pokertool/active_learning.py",
      "docstring": "Active Learning Feedback Loop for PokerTool\n\nContinuously improves prediction models by collecting targeted human feedback\non low-confidence situations.\n\nKey Components:\n- Uncertainty detection and triage rules\n- Expert feedback collection and annotation\n- Prioritized storage with metadata for bias audits\n- Automated weekly retraining batches\n- Model lift reporting\n\nAuthor: PokerTool Development Team\nVersion: v48.0.0",
      "version": null,
      "author": null,
      "complexity": 66,
      "loc": 830,
      "dependencies": [
        "logging",
        "sqlite3",
        "pathlib",
        "typing",
        "dataclasses",
        "heapq",
        "collections",
        "json",
        "enum",
        "datetime"
      ]
    },
    {
      "id": "src.pokertool.active_learning.ActionType",
      "type": "class",
      "name": "ActionType",
      "module": "src.pokertool.active_learning",
      "docstring": "Poker action types",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 33
    },
    {
      "id": "src.pokertool.active_learning.StreetType",
      "type": "class",
      "name": "StreetType",
      "module": "src.pokertool.active_learning",
      "docstring": "Poker street types",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 42
    },
    {
      "id": "src.pokertool.active_learning.FeedbackStatus",
      "type": "class",
      "name": "FeedbackStatus",
      "module": "src.pokertool.active_learning",
      "docstring": "Status of feedback events",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 50
    },
    {
      "id": "src.pokertool.active_learning.UncertaintyLevel",
      "type": "class",
      "name": "UncertaintyLevel",
      "module": "src.pokertool.active_learning",
      "docstring": "Uncertainty classification levels",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 58
    },
    {
      "id": "src.pokertool.active_learning.GameState",
      "type": "class",
      "name": "GameState",
      "module": "src.pokertool.active_learning",
      "docstring": "Represents the poker game state for a decision",
      "bases": [],
      "methods": [
        "to_dict",
        "from_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 67
    },
    {
      "id": "src.pokertool.active_learning.Prediction",
      "type": "class",
      "name": "Prediction",
      "module": "src.pokertool.active_learning",
      "docstring": "Model prediction with uncertainty",
      "bases": [],
      "methods": [
        "to_dict",
        "from_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 110
    },
    {
      "id": "src.pokertool.active_learning.ExpertFeedback",
      "type": "class",
      "name": "ExpertFeedback",
      "module": "src.pokertool.active_learning",
      "docstring": "Expert annotation for a decision",
      "bases": [],
      "methods": [
        "to_dict",
        "from_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 144
    },
    {
      "id": "src.pokertool.active_learning.FeedbackEvent",
      "type": "class",
      "name": "FeedbackEvent",
      "module": "src.pokertool.active_learning",
      "docstring": "A feedback event for active learning",
      "bases": [],
      "methods": [
        "__lt__"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 178
    },
    {
      "id": "src.pokertool.active_learning.UncertaintyTriage",
      "type": "class",
      "name": "UncertaintyTriage",
      "module": "src.pokertool.active_learning",
      "docstring": "Detects uncertain predictions and assigns priority",
      "bases": [],
      "methods": [
        "__init__",
        "assess_uncertainty"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 8,
      "line_number": 195
    },
    {
      "id": "src.pokertool.active_learning.FeedbackStorage",
      "type": "class",
      "name": "FeedbackStorage",
      "module": "src.pokertool.active_learning",
      "docstring": "SQLite-based storage for feedback events with connection pooling",
      "bases": [],
      "methods": [
        "__init__",
        "_get_connection",
        "_init_database",
        "save_event",
        "get_event",
        "get_pending_events",
        "get_reviewed_events",
        "mark_incorporated",
        "_row_to_event"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 26,
      "line_number": 283
    },
    {
      "id": "src.pokertool.active_learning.RetrainingScheduler",
      "type": "class",
      "name": "RetrainingScheduler",
      "module": "src.pokertool.active_learning",
      "docstring": "Manages automated retraining batches",
      "bases": [],
      "methods": [
        "__init__",
        "should_trigger_retraining",
        "prepare_training_batch",
        "mark_batch_incorporated"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 6,
      "line_number": 525
    },
    {
      "id": "src.pokertool.active_learning.ActiveLearningFeedbackLoop",
      "type": "class",
      "name": "ActiveLearningFeedbackLoop",
      "module": "src.pokertool.active_learning",
      "docstring": "Main active learning system",
      "bases": [],
      "methods": [
        "__init__",
        "get_instance",
        "process_prediction",
        "submit_feedback",
        "get_review_queue",
        "check_retraining_trigger",
        "prepare_retraining_batch",
        "complete_retraining",
        "get_statistics",
        "_count_by_uncertainty",
        "_count_by_street"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 18,
      "line_number": 576
    },
    {
      "id": "src.pokertool.active_learning.get_active_learning",
      "type": "function",
      "name": "get_active_learning",
      "module": "src.pokertool.active_learning",
      "signature": "def get_active_learning() -> ActiveLearningFeedbackLoop",
      "docstring": "Get global active learning instance",
      "parameters": [],
      "return_type": "ActiveLearningFeedbackLoop",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "ActiveLearningFeedbackLoop.get_instance"
      ],
      "raises": [],
      "line_number": 765
    },
    {
      "id": "src.pokertool.community_features",
      "type": "module",
      "path": "src/pokertool/community_features.py",
      "docstring": "Community platform utilities: forums, mentorship, tournaments, and knowledge sharing.",
      "version": null,
      "author": null,
      "complexity": 33,
      "loc": 223,
      "dependencies": [
        "pathlib",
        "time",
        "__future__",
        "typing",
        "dataclasses",
        "json"
      ]
    },
    {
      "id": "src.pokertool.community_features.ForumPost",
      "type": "class",
      "name": "ForumPost",
      "module": "src.pokertool.community_features",
      "docstring": "Forum post representation.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 16
    },
    {
      "id": "src.pokertool.community_features.Challenge",
      "type": "class",
      "name": "Challenge",
      "module": "src.pokertool.community_features",
      "docstring": "Community challenge metadata.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 29
    },
    {
      "id": "src.pokertool.community_features.MentorshipPair",
      "type": "class",
      "name": "MentorshipPair",
      "module": "src.pokertool.community_features",
      "docstring": "Mentorship pairing.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 41
    },
    {
      "id": "src.pokertool.community_features.CommunityTournament",
      "type": "class",
      "name": "CommunityTournament",
      "module": "src.pokertool.community_features",
      "docstring": "Community tournament entry.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 51
    },
    {
      "id": "src.pokertool.community_features.KnowledgeArticle",
      "type": "class",
      "name": "KnowledgeArticle",
      "module": "src.pokertool.community_features",
      "docstring": "Knowledge sharing article.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 63
    },
    {
      "id": "src.pokertool.community_features.CommunityPlatform",
      "type": "class",
      "name": "CommunityPlatform",
      "module": "src.pokertool.community_features",
      "docstring": "Coordinates community features.",
      "bases": [],
      "methods": [
        "__init__",
        "create_post",
        "reply_to_post",
        "add_article",
        "list_articles",
        "create_challenge",
        "join_challenge",
        "complete_challenge",
        "create_mentorship",
        "schedule_tournament",
        "register_tournament_player",
        "record_tournament_result",
        "export",
        "_serialize_post",
        "_load_state",
        "_persist_state"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 33,
      "line_number": 74
    },
    {
      "id": "src.pokertool.scrape_qa_harness",
      "type": "module",
      "path": "src/pokertool/scrape_qa_harness.py",
      "docstring": "Automated Scrape QA Harness\n============================\n\nSCRAPE-014: Automated Scrape QA Harness\n\nCatches scraping regressions by replaying curated screenshots through\nthe full extraction stack and comparing against ground truth.\n\nFeatures:\n- Load labelled screenshot suites with ground truth data\n- Run scraper end-to-end on test images\n- Compare extracted data against truth data\n- Generate detailed diff reports with visual overlays\n- Parallel execution for fast testing\n- Integration with CI/CD pipelines\n\nModule: pokertool.scrape_qa_harness\nVersion: v46.0.0\nAuthor: PokerTool Development Team",
      "version": "'46.0.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 76,
      "loc": 801,
      "dependencies": [
        "logging",
        "numpy",
        "pathlib",
        "time",
        "hashlib",
        "typing",
        "dataclasses",
        "json",
        "concurrent",
        "enum"
      ]
    },
    {
      "id": "src.pokertool.scrape_qa_harness.FieldType",
      "type": "class",
      "name": "FieldType",
      "module": "src.pokertool.scrape_qa_harness",
      "docstring": "Types of fields that can be extracted from poker tables.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 51
    },
    {
      "id": "src.pokertool.scrape_qa_harness.ThemeType",
      "type": "class",
      "name": "ThemeType",
      "module": "src.pokertool.scrape_qa_harness",
      "docstring": "Poker table themes.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 64
    },
    {
      "id": "src.pokertool.scrape_qa_harness.GroundTruth",
      "type": "class",
      "name": "GroundTruth",
      "module": "src.pokertool.scrape_qa_harness",
      "docstring": "Ground truth data for a test case.",
      "bases": [],
      "methods": [
        "to_dict",
        "from_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 74
    },
    {
      "id": "src.pokertool.scrape_qa_harness.QaTestCase",
      "type": "class",
      "name": "QaTestCase",
      "module": "src.pokertool.scrape_qa_harness",
      "docstring": "A single QA test case.",
      "bases": [],
      "methods": [
        "compute_hash"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 3,
      "line_number": 102
    },
    {
      "id": "src.pokertool.scrape_qa_harness.FieldDiff",
      "type": "class",
      "name": "FieldDiff",
      "module": "src.pokertool.scrape_qa_harness",
      "docstring": "Difference between expected and actual field value.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 124
    },
    {
      "id": "src.pokertool.scrape_qa_harness.QaTestResult",
      "type": "class",
      "name": "QaTestResult",
      "module": "src.pokertool.scrape_qa_harness",
      "docstring": "Result of running a test case.",
      "bases": [],
      "methods": [
        "get_failed_fields",
        "summary"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 135
    },
    {
      "id": "src.pokertool.scrape_qa_harness.SuiteReport",
      "type": "class",
      "name": "SuiteReport",
      "module": "src.pokertool.scrape_qa_harness",
      "docstring": "Report for entire test suite.",
      "bases": [],
      "methods": [
        "pass_rate",
        "avg_accuracy"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 3,
      "line_number": 158
    },
    {
      "id": "src.pokertool.scrape_qa_harness.ScrapeQAHarness",
      "type": "class",
      "name": "ScrapeQAHarness",
      "module": "src.pokertool.scrape_qa_harness",
      "docstring": "Automated QA harness for poker table scraping.\n\nLoads test cases, runs scrapers, compares results, generates reports.",
      "bases": [],
      "methods": [
        "__init__",
        "load_test_suite",
        "_load_from_manifest",
        "_discover_test_cases",
        "run_test_case",
        "_compare_numeric",
        "_compare_string",
        "_compare_cards",
        "_compare_exact",
        "_mock_extraction",
        "run_suite",
        "_generate_report",
        "generate_markdown_report",
        "check_thresholds"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 58,
      "line_number": 183
    },
    {
      "id": "src.pokertool.scrape_qa_harness.create_test_case_from_screenshot",
      "type": "function",
      "name": "create_test_case_from_screenshot",
      "module": "src.pokertool.scrape_qa_harness",
      "signature": "def create_test_case_from_screenshot(image_path: Path, ground_truth: GroundTruth, kwargs) -> QaTestCase",
      "docstring": "Create a test case from a screenshot file.",
      "parameters": [
        {
          "name": "image_path",
          "annotation": "Path",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "ground_truth",
          "annotation": "GroundTruth",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "kwargs",
          "annotation": null,
          "default": null,
          "kind": "VAR_KEYWORD"
        }
      ],
      "return_type": "QaTestCase",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "cv2.imread",
        "str",
        "QaTestCase",
        "kwargs.get",
        "kwargs.get",
        "kwargs.get",
        "kwargs.get",
        "kwargs.get"
      ],
      "raises": [],
      "line_number": 684
    },
    {
      "id": "src.pokertool.scrape_qa_harness.save_test_case",
      "type": "function",
      "name": "save_test_case",
      "module": "src.pokertool.scrape_qa_harness",
      "signature": "def save_test_case(test_case: QaTestCase, output_dir: Path)",
      "docstring": "Save test case as image + json pair.",
      "parameters": [
        {
          "name": "test_case",
          "annotation": "QaTestCase",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "output_dir",
          "annotation": "Path",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "output_dir.mkdir",
        "test_case.ground_truth.to_dict",
        "list",
        "open",
        "json.dump",
        "logger.info"
      ],
      "raises": [],
      "line_number": 711
    },
    {
      "id": "src.pokertool.database",
      "type": "module",
      "path": "src/pokertool/database.py",
      "docstring": "PokerTool Production Database Module\n=====================================\n\nEnterprise-grade database abstraction layer supporting both PostgreSQL\nfor production and SQLite for development. Implements connection pooling,\nautomatic failover, and comprehensive transaction management.\n\nModule: pokertool.database\nVersion: 20.0.0\nLast Modified: 2025-09-29\nAuthor: PokerTool Development Team\nLicense: MIT\n\nDependencies:\n    - psycopg2 >= 2.9.0: PostgreSQL adapter (optional)\n    - psycopg2-pool: Connection pooling\n    - sqlite3: Built-in SQLite support\n\nDatabase Features:\n    - Dual database support (PostgreSQL/SQLite)\n    - Connection pooling for performance\n    - Automatic retry with exponential backoff\n    - Transaction management with rollback\n    - Query optimization and caching\n    - Migration support\n    - Audit logging\n    - Backup and restore\n\nConfiguration:\n    Environment variables:\n    - POKERTOOL_DB_TYPE: 'postgresql' or 'sqlite'\n    - POKERTOOL_DB_HOST: PostgreSQL host\n    - POKERTOOL_DB_PORT: PostgreSQL port\n    - POKERTOOL_DB_NAME: Database name\n    - POKERTOOL_DB_USER: Database user\n    - POKERTOOL_DB_PASSWORD: Database password\n\nChange Log:\n    - v28.0.0 (2025-09-29): Enhanced documentation, added connection pooling\n    - v19.0.0 (2025-09-18): PostgreSQL integration\n    - v18.0.0 (2025-09-15): Initial database abstraction",
      "version": "'20.0.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 45,
      "loc": 458,
      "dependencies": [
        "logging",
        "pathlib",
        "hashlib",
        "time",
        "typing",
        "dataclasses",
        "json",
        "enum",
        "contextlib",
        "os"
      ]
    },
    {
      "id": "src.pokertool.database.DatabaseType",
      "type": "class",
      "name": "DatabaseType",
      "module": "src.pokertool.database",
      "docstring": "Supported database types.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 93
    },
    {
      "id": "src.pokertool.database.DatabaseConfig",
      "type": "class",
      "name": "DatabaseConfig",
      "module": "src.pokertool.database",
      "docstring": "Database configuration.",
      "bases": [],
      "methods": [
        "from_env"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 100
    },
    {
      "id": "src.pokertool.database.ProductionDatabase",
      "type": "class",
      "name": "ProductionDatabase",
      "module": "src.pokertool.database",
      "docstring": "Production database adapter supporting both SQLite and PostgreSQL.\nProvides connection pooling, migration support, and monitoring.",
      "bases": [],
      "methods": [
        "__init__",
        "_init_postgresql",
        "_init_sqlite",
        "get_connection",
        "_create_postgresql_schema",
        "_rate_limit_check",
        "_generate_user_hash",
        "save_hand_analysis",
        "get_recent_hands",
        "get_database_stats",
        "close"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 39,
      "line_number": 143
    },
    {
      "id": "src.pokertool.database.get_production_db",
      "type": "function",
      "name": "get_production_db",
      "module": "src.pokertool.database",
      "signature": "def get_production_db() -> ProductionDatabase",
      "docstring": "Get the global production database instance.",
      "parameters": [],
      "return_type": "ProductionDatabase",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "ProductionDatabase"
      ],
      "raises": [],
      "line_number": 423
    },
    {
      "id": "src.pokertool.database.migrate_to_production",
      "type": "function",
      "name": "migrate_to_production",
      "module": "src.pokertool.database",
      "signature": "def migrate_to_production(sqlite_path: str) -> bool",
      "docstring": "Helper function to migrate from SQLite to PostgreSQL.",
      "parameters": [
        {
          "name": "sqlite_path",
          "annotation": "str",
          "default": "'poker_decisions.db'",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "bool",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "DatabaseConfig",
        "os.getenv",
        "int",
        "os.getenv",
        "os.getenv",
        "os.getenv",
        "os.getenv",
        "ProductionDatabase",
        "logger.info",
        "logger.error"
      ],
      "raises": [],
      "line_number": 431
    },
    {
      "id": "src.pokertool.gto_solver",
      "type": "module",
      "path": "src/pokertool/gto_solver.py",
      "docstring": "PokerTool Gto Solver Module\n=============================\n\nThis module provides functionality for gto solver operations\nwithin the PokerTool application ecosystem.\n\nModule: pokertool.gto_solver\nVersion: 20.0.0\nLast Modified: 2025-09-29\nAuthor: PokerTool Development Team\nLicense: MIT\n\nDependencies:\n    - See module imports for specific dependencies\n    - Python 3.10+ required\n\nChange Log:\n    - v28.0.0 (2025-09-29): Enhanced documentation\n    - v19.0.0 (2025-09-18): Bug fixes and improvements\n    - v18.0.0 (2025-09-15): Initial implementation",
      "version": "'20.0.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 184,
      "loc": 1218,
      "dependencies": [
        "logging",
        "functools",
        "numpy",
        "pathlib",
        "hashlib",
        "time",
        "typing",
        "dataclasses",
        "collections",
        "json",
        "concurrent",
        "enum",
        "os",
        "pickle"
      ]
    },
    {
      "id": "src.pokertool.gto_solver.Action",
      "type": "class",
      "name": "Action",
      "module": "src.pokertool.gto_solver",
      "docstring": "Possible poker actions.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 80
    },
    {
      "id": "src.pokertool.gto_solver.Street",
      "type": "class",
      "name": "Street",
      "module": "src.pokertool.gto_solver",
      "docstring": "Poker streets/betting rounds.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 89
    },
    {
      "id": "src.pokertool.gto_solver.Range",
      "type": "class",
      "name": "Range",
      "module": "src.pokertool.gto_solver",
      "docstring": "Represents a poker range with hand combinations and frequencies.",
      "bases": [],
      "methods": [
        "__post_init__",
        "add_hand",
        "remove_hand",
        "get_frequency",
        "total_combos",
        "to_string"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 13,
      "line_number": 97
    },
    {
      "id": "src.pokertool.gto_solver.GameState",
      "type": "class",
      "name": "GameState",
      "module": "src.pokertool.gto_solver",
      "docstring": "Represents the current state of a poker hand.",
      "bases": [],
      "methods": [
        "get_pot_odds",
        "get_stack_to_pot_ratio"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 4,
      "line_number": 149
    },
    {
      "id": "src.pokertool.gto_solver.Strategy",
      "type": "class",
      "name": "Strategy",
      "module": "src.pokertool.gto_solver",
      "docstring": "Represents a mixed strategy for a given game state.",
      "bases": [],
      "methods": [
        "__post_init__",
        "get_action_frequency",
        "add_action",
        "get_dominant_action",
        "is_pure_strategy"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 8,
      "line_number": 175
    },
    {
      "id": "src.pokertool.gto_solver.GTOSolution",
      "type": "class",
      "name": "GTOSolution",
      "module": "src.pokertool.gto_solver",
      "docstring": "Complete GTO solution for a given scenario.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 209
    },
    {
      "id": "src.pokertool.gto_solver.LRUCache",
      "type": "class",
      "name": "LRUCache",
      "module": "src.pokertool.gto_solver",
      "docstring": "LRU Cache with size limit and statistics tracking.",
      "bases": [],
      "methods": [
        "__init__",
        "get",
        "put",
        "get_stats",
        "clear"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 8,
      "line_number": 220
    },
    {
      "id": "src.pokertool.gto_solver.EquityCalculator",
      "type": "class",
      "name": "EquityCalculator",
      "module": "src.pokertool.gto_solver",
      "docstring": "Fast equity calculation for poker hands with advanced caching.",
      "bases": [],
      "methods": [
        "__init__",
        "calculate_equity",
        "_create_cache_key",
        "_generate_deck",
        "_evaluate_hand",
        "_load_disk_cache",
        "_load_from_disk",
        "_save_to_disk",
        "get_cache_stats",
        "clear_cache"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 57,
      "line_number": 267
    },
    {
      "id": "src.pokertool.gto_solver.GTOSolver",
      "type": "class",
      "name": "GTOSolver",
      "module": "src.pokertool.gto_solver",
      "docstring": "Advanced GTO solver using counterfactual regret minimization (CFR).\nSupports multi-way pots and complex game trees.",
      "bases": [],
      "methods": [
        "__init__",
        "solve",
        "_get_strategy_from_regret",
        "_get_possible_actions",
        "_calculate_exploitability",
        "_create_solution_cache_key",
        "_save_solution_to_disk",
        "load_solution_from_disk"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 37,
      "line_number": 501
    },
    {
      "id": "src.pokertool.gto_solver.GTOTrainer",
      "type": "class",
      "name": "GTOTrainer",
      "module": "src.pokertool.gto_solver",
      "docstring": "GTO training system for practicing optimal play.\nProvides spot training and deviation analysis.",
      "bases": [],
      "methods": [
        "__init__",
        "generate_training_spot",
        "evaluate_decision",
        "_generate_explanation",
        "get_weak_spots"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 15,
      "line_number": 725
    },
    {
      "id": "src.pokertool.gto_solver.DeviationExplorer",
      "type": "class",
      "name": "DeviationExplorer",
      "module": "src.pokertool.gto_solver",
      "docstring": "Explore deviations from GTO strategy and their impact.",
      "bases": [],
      "methods": [
        "__init__",
        "analyze_deviation",
        "_calculate_strategy_ev",
        "_calculate_deviation_ev",
        "_calculate_exploitability_increase",
        "_suggest_counter_exploits"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 9,
      "line_number": 842
    },
    {
      "id": "src.pokertool.gto_solver.get_gto_solver",
      "type": "function",
      "name": "get_gto_solver",
      "module": "src.pokertool.gto_solver",
      "signature": "def get_gto_solver() -> GTOSolver",
      "docstring": "Get the global GTO solver instance.",
      "parameters": [],
      "return_type": "GTOSolver",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "GTOSolver"
      ],
      "raises": [],
      "line_number": 912
    },
    {
      "id": "src.pokertool.gto_solver.solve_spot",
      "type": "function",
      "name": "solve_spot",
      "module": "src.pokertool.gto_solver",
      "signature": "def solve_spot(game_state: GameState, ranges: Dict[str, Range], max_iterations: int) -> GTOSolution",
      "docstring": "Convenience function to solve a GTO spot.",
      "parameters": [
        {
          "name": "game_state",
          "annotation": "GameState",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "ranges",
          "annotation": "Dict[str, Range]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "max_iterations",
          "annotation": "int",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "GTOSolution",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_gto_solver",
        "solver.solve"
      ],
      "raises": [],
      "line_number": 919
    },
    {
      "id": "src.pokertool.gto_solver.create_standard_ranges",
      "type": "function",
      "name": "create_standard_ranges",
      "module": "src.pokertool.gto_solver",
      "signature": "def create_standard_ranges() -> Dict[str, Range]",
      "docstring": "Create standard preflop ranges for common positions.",
      "parameters": [],
      "return_type": "Dict[str, Range]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "Range",
        "utg_range.add_hand",
        "Range",
        "btn_range.add_hand"
      ],
      "raises": [],
      "line_number": 925
    },
    {
      "id": "src.pokertool.gto_solver.parse_range_string",
      "type": "function",
      "name": "parse_range_string",
      "module": "src.pokertool.gto_solver",
      "signature": "def parse_range_string(range_str: str) -> Range",
      "docstring": "Parse a range string into a Range object.",
      "parameters": [
        {
          "name": "range_str",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Range",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 5,
      "calls": [
        "Range",
        "part.strip",
        "range_str.split",
        "part.split",
        "float",
        "hands_part.split",
        "hand.strip",
        "range_obj.add_hand"
      ],
      "raises": [],
      "line_number": 947
    },
    {
      "id": "src.pokertool.gto_solver.calculate_range_equity",
      "type": "function",
      "name": "calculate_range_equity",
      "module": "src.pokertool.gto_solver",
      "signature": "def calculate_range_equity(range1: Range, range2: Range, board: List[str], iterations: int) -> Tuple[float, float]",
      "docstring": "Calculate equity between two ranges.",
      "parameters": [
        {
          "name": "range1",
          "annotation": "Range",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "range2",
          "annotation": "Range",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "board",
          "annotation": "List[str]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "iterations",
          "annotation": "int",
          "default": "10000",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Tuple[float, float]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "EquityCalculator",
        "min",
        "len",
        "len",
        "range",
        "random.choices",
        "list",
        "range1.hands.keys",
        "list",
        "range1.hands.values",
        "random.choices",
        "list",
        "range2.hands.keys",
        "list",
        "range2.hands.values",
        "equity_calc.calculate_equity",
        "range1.get_frequency",
        "range2.get_frequency"
      ],
      "raises": [],
      "line_number": 972
    },
    {
      "id": "src.pokertool.gto_solver.analyze_gto_spot",
      "type": "function",
      "name": "analyze_gto_spot",
      "module": "src.pokertool.gto_solver",
      "signature": "def analyze_gto_spot(hole_cards: str, board: List[str], position: str, pot: float, to_call: float, effective_stack: float) -> Dict[str, Any]",
      "docstring": "Analyze a specific GTO spot and return recommendations.\n\nArgs:\n    hole_cards: Hero's hole cards (e.g., \"AsKh\")\n    board: Community cards\n    position: Hero's position\n    pot: Current pot size\n    to_call: Amount to call\n    effective_stack: Effective stack size\n    \nReturns:\n    Analysis with GTO recommendations",
      "parameters": [
        {
          "name": "hole_cards",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "board",
          "annotation": "List[str]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "position",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "pot",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "to_call",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "effective_stack",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Dict[str, Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 4,
      "calls": [
        "len",
        "len",
        "len",
        "GameState",
        "create_standard_ranges",
        "get_gto_solver",
        "solver.solve",
        "get",
        "solution.strategies.get",
        "Strategy",
        "game_state.get_pot_odds",
        "game_state.get_stack_to_pot_ratio",
        "hero_strategy.get_dominant_action",
        "_generate_recommendations"
      ],
      "raises": [],
      "line_number": 1012
    },
    {
      "id": "src.pokertool.gto_solver._generate_recommendations",
      "type": "function",
      "name": "_generate_recommendations",
      "module": "src.pokertool.gto_solver",
      "signature": "def _generate_recommendations(strategy: Strategy, game_state: GameState) -> List[str]",
      "docstring": "Generate human-readable recommendations from GTO strategy.",
      "parameters": [
        {
          "name": "strategy",
          "annotation": "Strategy",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "game_state",
          "annotation": "GameState",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "List[str]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 7,
      "calls": [
        "recommendations.append",
        "strategy.get_dominant_action",
        "strategy.get_action_frequency",
        "recommendations.append",
        "recommendations.append",
        "sorted",
        "strategy.actions.items",
        "recommendations.append",
        "game_state.get_pot_odds",
        "recommendations.append",
        "game_state.get_stack_to_pot_ratio",
        "recommendations.append"
      ],
      "raises": [],
      "line_number": 1079
    },
    {
      "id": "src.pokertool.gto_solver.create_training_session",
      "type": "function",
      "name": "create_training_session",
      "module": "src.pokertool.gto_solver",
      "signature": "def create_training_session(difficulty: str, num_spots: int) -> List[Dict[str, Any]]",
      "docstring": "Create a GTO training session with multiple spots.",
      "parameters": [
        {
          "name": "difficulty",
          "annotation": "str",
          "default": "'intermediate'",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "num_spots",
          "annotation": "int",
          "default": "10",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "List[Dict[str, Any]]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "GTOTrainer",
        "difficulty_settings.get",
        "range",
        "random.choice",
        "random.choice",
        "trainer.generate_training_spot",
        "spots.append"
      ],
      "raises": [],
      "line_number": 1112
    },
    {
      "id": "src.pokertool.gto_solver.export_solution",
      "type": "function",
      "name": "export_solution",
      "module": "src.pokertool.gto_solver",
      "signature": "def export_solution(solution: GTOSolution, filename: str, format: str) -> bool",
      "docstring": "Export GTO solution to file.",
      "parameters": [
        {
          "name": "solution",
          "annotation": "GTOSolution",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "filename",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "format",
          "annotation": "str",
          "default": "'json'",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "bool",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 6,
      "calls": [
        "range_obj.to_string",
        "solution.ranges.items",
        "strategy.actions.items",
        "hands.items",
        "solution.strategies.items",
        "open",
        "json.dump",
        "open",
        "pickle.dump",
        "ValueError",
        "logger.info",
        "logger.error"
      ],
      "raises": [
        "ValueError"
      ],
      "line_number": 1134
    },
    {
      "id": "src.pokertool.smart_poker_detector",
      "type": "module",
      "path": "src/pokertool/smart_poker_detector.py",
      "docstring": "Smart Poker Window Detector\n===========================\n\nEnhanced poker window detection that prioritizes actual betting sites\nover development tools and documentation.\n\nThis module adds URL-based filtering and smart exclusions to improve\ndetection accuracy and reduce false positives.",
      "version": null,
      "author": null,
      "complexity": 19,
      "loc": 237,
      "dependencies": [
        "logging",
        "typing",
        "re",
        "dataclasses"
      ]
    },
    {
      "id": "src.pokertool.smart_poker_detector.WindowPriority",
      "type": "class",
      "name": "WindowPriority",
      "module": "src.pokertool.smart_poker_detector",
      "docstring": "Priority levels for detected windows.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 23
    },
    {
      "id": "src.pokertool.smart_poker_detector.SmartPokerDetector",
      "type": "class",
      "name": "SmartPokerDetector",
      "module": "src.pokertool.smart_poker_detector",
      "docstring": "Smart detector that prioritizes real poker sites over development tools.",
      "bases": [],
      "methods": [
        "__init__",
        "classify_window",
        "filter_and_prioritize",
        "get_best_windows"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 18,
      "line_number": 30
    },
    {
      "id": "src.pokertool.smart_poker_detector.create_smart_detector",
      "type": "function",
      "name": "create_smart_detector",
      "module": "src.pokertool.smart_poker_detector",
      "signature": "def create_smart_detector() -> SmartPokerDetector",
      "docstring": "Create a smart poker window detector.",
      "parameters": [],
      "return_type": "SmartPokerDetector",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "SmartPokerDetector"
      ],
      "raises": [],
      "line_number": 207
    },
    {
      "id": "src.pokertool.automation",
      "type": "module",
      "path": "src/pokertool/automation.py",
      "docstring": "Developer automation helpers for PokerTool.",
      "version": null,
      "author": null,
      "complexity": 33,
      "loc": 158,
      "dependencies": [
        "logging",
        "sys",
        "pathlib",
        "time",
        "__future__",
        "hashlib",
        "typing",
        "subprocess",
        "json",
        "importlib",
        "os"
      ]
    },
    {
      "id": "src.pokertool.automation._hash_file",
      "type": "function",
      "name": "_hash_file",
      "module": "src.pokertool.automation",
      "signature": "def _hash_file(path: Path) -> str",
      "docstring": null,
      "parameters": [
        {
          "name": "path",
          "annotation": "Path",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 4,
      "calls": [
        "path.exists",
        "sha256",
        "path.open",
        "iter",
        "handle.read",
        "digest.update",
        "digest.hexdigest"
      ],
      "raises": [],
      "line_number": 29
    },
    {
      "id": "src.pokertool.automation._get_git_head",
      "type": "function",
      "name": "_get_git_head",
      "module": "src.pokertool.automation",
      "signature": "def _get_git_head() -> str",
      "docstring": null,
      "parameters": [],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "subprocess.run",
        "result.stdout.strip"
      ],
      "raises": [],
      "line_number": 39
    },
    {
      "id": "src.pokertool.automation._missing_modules",
      "type": "function",
      "name": "_missing_modules",
      "module": "src.pokertool.automation",
      "signature": "def _missing_modules(modules: Iterable[str]) -> list[str]",
      "docstring": null,
      "parameters": [
        {
          "name": "modules",
          "annotation": "Iterable[str]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "list[str]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "importlib.util.find_spec",
        "missing.append"
      ],
      "raises": [],
      "line_number": 53
    },
    {
      "id": "src.pokertool.automation.ensure_ml_tests_run",
      "type": "function",
      "name": "ensure_ml_tests_run",
      "module": "src.pokertool.automation",
      "signature": "def ensure_ml_tests_run(logger) -> None",
      "docstring": "Run the full pytest suite once the heavyweight ML dependencies are present.",
      "parameters": [
        {
          "name": "logger",
          "annotation": null,
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "None",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 24,
      "calls": [
        "logging.getLogger",
        "hasattr",
        "callable",
        "getattr",
        "logging.getLogger",
        "os.environ.get",
        "log.info",
        "_missing_modules",
        "log.info",
        "importlib.util.find_spec",
        "log.info",
        "_hash_file",
        "_get_git_head",
        "STATE_DIR.mkdir",
        "hasattr",
        "hasattr",
        "log.warning",
        "log.warning",
        "str",
        "log.warning",
        "str",
        "SENTINEL_PATH.exists",
        "json.loads",
        "SENTINEL_PATH.read_text",
        "previous.get",
        "previous.get",
        "log.debug",
        "log.info",
        "os.environ.copy",
        "subprocess.run",
        "hasattr",
        "hasattr",
        "log.error",
        "log.error",
        "str",
        "log.error",
        "str",
        "log.error",
        "time.time",
        "SENTINEL_PATH.write_text",
        "json.dumps",
        "hasattr",
        "hasattr",
        "log.warning",
        "log.warning",
        "str",
        "log.warning",
        "str",
        "log.info"
      ],
      "raises": [],
      "line_number": 61
    },
    {
      "id": "src.pokertool.game_selection",
      "type": "module",
      "path": "src/pokertool/game_selection.py",
      "docstring": "PokerTool Game Selection Module\n=================================\n\nThis module provides functionality for game selection operations\nwithin the PokerTool application ecosystem.\n\nModule: pokertool.game_selection\nVersion: 20.0.0\nLast Modified: 2025-09-29\nAuthor: PokerTool Development Team\nLicense: MIT\n\nDependencies:\n    - See module imports for specific dependencies\n    - Python 3.10+ required\n\nChange Log:\n    - v28.0.0 (2025-09-29): Enhanced documentation\n    - v19.0.0 (2025-09-18): Bug fixes and improvements\n    - v18.0.0 (2025-09-15): Initial implementation",
      "version": "'20.0.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 119,
      "loc": 866,
      "dependencies": [
        "logging",
        "random",
        "math",
        "typing",
        "dataclasses",
        "enum",
        "datetime",
        "statistics"
      ]
    },
    {
      "id": "src.pokertool.game_selection.GameType",
      "type": "class",
      "name": "GameType",
      "module": "src.pokertool.game_selection",
      "docstring": "Supported game types.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 45
    },
    {
      "id": "src.pokertool.game_selection.TablePosition",
      "type": "class",
      "name": "TablePosition",
      "module": "src.pokertool.game_selection",
      "docstring": "Table positions for seat selection.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 53
    },
    {
      "id": "src.pokertool.game_selection.PlayerProfile",
      "type": "class",
      "name": "PlayerProfile",
      "module": "src.pokertool.game_selection",
      "docstring": "Individual player profile for table analysis.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 64
    },
    {
      "id": "src.pokertool.game_selection.TableInfo",
      "type": "class",
      "name": "TableInfo",
      "module": "src.pokertool.game_selection",
      "docstring": "Table information and statistics.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 81
    },
    {
      "id": "src.pokertool.game_selection.GameRating",
      "type": "class",
      "name": "GameRating",
      "module": "src.pokertool.game_selection",
      "docstring": "Comprehensive game rating.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 96
    },
    {
      "id": "src.pokertool.game_selection.TableScanner",
      "type": "class",
      "name": "TableScanner",
      "module": "src.pokertool.game_selection",
      "docstring": "Scans and analyzes available poker tables.",
      "bases": [],
      "methods": [
        "__init__",
        "add_player_to_database",
        "scan_table",
        "get_active_tables",
        "get_table_trends",
        "_calculate_stability_score",
        "_calculate_trend"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 22,
      "line_number": 111
    },
    {
      "id": "src.pokertool.game_selection.ProfitabilityCalculator",
      "type": "class",
      "name": "ProfitabilityCalculator",
      "module": "src.pokertool.game_selection",
      "docstring": "Calculates expected profitability for different games.",
      "bases": [],
      "methods": [
        "__init__",
        "calculate_table_profitability",
        "_calculate_confidence",
        "_calculate_dynamic_adjustment"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 17,
      "line_number": 219
    },
    {
      "id": "src.pokertool.game_selection.PlayerPoolAnalyzer",
      "type": "class",
      "name": "PlayerPoolAnalyzer",
      "module": "src.pokertool.game_selection",
      "docstring": "Analyzes player pools for game selection.",
      "bases": [],
      "methods": [
        "__init__",
        "analyze_player_pool",
        "_classify_pool_type",
        "_calculate_exploitability",
        "_generate_pool_recommendation"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 30,
      "line_number": 325
    },
    {
      "id": "src.pokertool.game_selection.SeatSelector",
      "type": "class",
      "name": "SeatSelector",
      "module": "src.pokertool.game_selection",
      "docstring": "Provides seat selection advice.",
      "bases": [],
      "methods": [
        "__init__",
        "analyze_seat_selection",
        "_calculate_seat_score",
        "_get_players_to_left",
        "_get_players_to_right",
        "_count_weak_players_to_left",
        "_count_strong_players_to_right",
        "_generate_seat_reasoning"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 15,
      "line_number": 455
    },
    {
      "id": "src.pokertool.game_selection.GameSelectionEngine",
      "type": "class",
      "name": "GameSelectionEngine",
      "module": "src.pokertool.game_selection",
      "docstring": "Main game selection engine combining all components.",
      "bases": [],
      "methods": [
        "__init__",
        "rate_all_tables",
        "rate_table",
        "_calculate_profitability_score",
        "_calculate_position_score",
        "_calculate_volume_score",
        "_calculate_average_stack_depth",
        "_generate_rating_reasons"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 32,
      "line_number": 560
    },
    {
      "id": "src.pokertool.game_selection.analyze_single_table",
      "type": "function",
      "name": "analyze_single_table",
      "module": "src.pokertool.game_selection",
      "signature": "def analyze_single_table(table: TableInfo, hero_stats: Dict[str, float]) -> GameRating",
      "docstring": "Analyze a single table without full engine setup.",
      "parameters": [
        {
          "name": "table",
          "annotation": "TableInfo",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "hero_stats",
          "annotation": "Dict[str, float]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "GameRating",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "GameSelectionEngine",
        "engine.rate_table"
      ],
      "raises": [],
      "line_number": 737
    },
    {
      "id": "src.pokertool.game_selection.find_best_tables",
      "type": "function",
      "name": "find_best_tables",
      "module": "src.pokertool.game_selection",
      "signature": "def find_best_tables(tables: List[TableInfo], count: int, hero_stats: Dict[str, float]) -> List[GameRating]",
      "docstring": "Find the best tables from a list.",
      "parameters": [
        {
          "name": "tables",
          "annotation": "List[TableInfo]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "count",
          "annotation": "int",
          "default": "3",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "hero_stats",
          "annotation": "Dict[str, float]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "List[GameRating]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "GameSelectionEngine",
        "engine.rate_all_tables"
      ],
      "raises": [],
      "line_number": 742
    },
    {
      "id": "src.pokertool.game_selection.create_sample_player",
      "type": "function",
      "name": "create_sample_player",
      "module": "src.pokertool.game_selection",
      "signature": "def create_sample_player(player_id: str, vpip: float, pfr: float, skill_level: str) -> PlayerProfile",
      "docstring": "Create a sample player for testing.",
      "parameters": [
        {
          "name": "player_id",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "vpip",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "pfr",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "skill_level",
          "annotation": "str",
          "default": "'recreational'",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "PlayerProfile",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get",
        "PlayerProfile",
        "random.randint",
        "random.uniform"
      ],
      "raises": [],
      "line_number": 749
    },
    {
      "id": "src.pokertool.ensemble_decision",
      "type": "module",
      "path": "src/pokertool/ensemble_decision.py",
      "docstring": "Ensemble Decision System\n\nCombines multiple decision engines with weighted voting, confidence-based weighting,\ndisagreement resolution, adaptive weights, and performance tracking.\n\nID: ENSEMBLE-001\nStatus: COMPLETED\nPriority: MEDIUM",
      "version": null,
      "author": null,
      "complexity": 72,
      "loc": 551,
      "dependencies": [
        "time",
        "typing",
        "dataclasses",
        "collections",
        "json",
        "enum"
      ]
    },
    {
      "id": "src.pokertool.ensemble_decision.DecisionType",
      "type": "class",
      "name": "DecisionType",
      "module": "src.pokertool.ensemble_decision",
      "docstring": "Types of decisions that can be made.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 20
    },
    {
      "id": "src.pokertool.ensemble_decision.EngineDecision",
      "type": "class",
      "name": "EngineDecision",
      "module": "src.pokertool.ensemble_decision",
      "docstring": "A decision from a single engine.",
      "bases": [],
      "methods": [
        "to_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 30
    },
    {
      "id": "src.pokertool.ensemble_decision.EnsembleDecision",
      "type": "class",
      "name": "EnsembleDecision",
      "module": "src.pokertool.ensemble_decision",
      "docstring": "Final ensemble decision combining multiple engines.",
      "bases": [],
      "methods": [
        "to_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 54
    },
    {
      "id": "src.pokertool.ensemble_decision.WeightOptimizer",
      "type": "class",
      "name": "WeightOptimizer",
      "module": "src.pokertool.ensemble_decision",
      "docstring": "Optimizes engine weights based on performance history.",
      "bases": [],
      "methods": [
        "__init__",
        "initialize_weights",
        "get_weight",
        "update_weight",
        "_normalize_weights",
        "get_all_weights",
        "get_performance_stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 12,
      "line_number": 79
    },
    {
      "id": "src.pokertool.ensemble_decision.DisagreementResolver",
      "type": "class",
      "name": "DisagreementResolver",
      "module": "src.pokertool.ensemble_decision",
      "docstring": "Resolves disagreements between engines.",
      "bases": [],
      "methods": [
        "__init__",
        "calculate_disagreement",
        "resolve",
        "_resolve_by_confidence",
        "_resolve_by_weighted_vote",
        "_resolve_by_majority",
        "_resolve_by_average"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 20,
      "line_number": 154
    },
    {
      "id": "src.pokertool.ensemble_decision.PerformanceTracker",
      "type": "class",
      "name": "PerformanceTracker",
      "module": "src.pokertool.ensemble_decision",
      "docstring": "Tracks performance of ensemble and individual engines.",
      "bases": [],
      "methods": [
        "__init__",
        "record_result",
        "get_ensemble_stats",
        "get_engine_stats",
        "get_all_stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 10,
      "line_number": 284
    },
    {
      "id": "src.pokertool.ensemble_decision.EnsembleDecisionSystem",
      "type": "class",
      "name": "EnsembleDecisionSystem",
      "module": "src.pokertool.ensemble_decision",
      "docstring": "Main ensemble decision system.\n\nCombines multiple decision engines with weighted voting, confidence-based weighting,\ndisagreement resolution, adaptive weights, and performance tracking.",
      "bases": [],
      "methods": [
        "__init__",
        "register_engine",
        "unregister_engine",
        "make_decision",
        "update_performance",
        "get_stats",
        "get_engine_weights",
        "set_engine_weight",
        "set_default_method",
        "export_state",
        "import_state"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 25,
      "line_number": 368
    },
    {
      "id": "src.pokertool.ensemble_decision.create_ensemble",
      "type": "function",
      "name": "create_ensemble",
      "module": "src.pokertool.ensemble_decision",
      "signature": "def create_ensemble(engine_configs: List[Dict[str, Any]], learning_rate: float) -> EnsembleDecisionSystem",
      "docstring": "Create an ensemble system from engine configurations.\n\nArgs:\n    engine_configs: List of dicts with 'name' and 'function' keys\n    learning_rate: Learning rate for weight adaptation\n    \nReturns:\n    Configured EnsembleDecisionSystem",
      "parameters": [
        {
          "name": "engine_configs",
          "annotation": "List[Dict[str, Any]]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "learning_rate",
          "annotation": "float",
          "default": "0.1",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "EnsembleDecisionSystem",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "EnsembleDecisionSystem",
        "ensemble.register_engine"
      ],
      "raises": [],
      "line_number": 534
    },
    {
      "id": "src.pokertool.input_validation",
      "type": "module",
      "path": "src/pokertool/input_validation.py",
      "docstring": "Input Validation and Sanitization Layer\n========================================\n\nComprehensive input validation and sanitization to prevent errors\nand improve reliability.\n\nFeatures:\n- Poker card validation\n- Bet amount validation and sanitization\n- Player data validation\n- Table state validation\n- Automatic type coercion\n- Range checking\n- Format normalization\n\nVersion: 69.0.0\nAuthor: PokerTool Development Team",
      "version": null,
      "author": null,
      "complexity": 84,
      "loc": 657,
      "dependencies": [
        "logging",
        "__future__",
        "typing",
        "dataclasses",
        "re",
        "enum"
      ]
    },
    {
      "id": "src.pokertool.input_validation.ValidationResult",
      "type": "class",
      "name": "ValidationResult",
      "module": "src.pokertool.input_validation",
      "docstring": "Result of validation operation.",
      "bases": [],
      "methods": [
        "__post_init__"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 40
    },
    {
      "id": "src.pokertool.input_validation.CardValidator",
      "type": "class",
      "name": "CardValidator",
      "module": "src.pokertool.input_validation",
      "docstring": "Validate and normalize poker cards.\n\nExamples:\n    \"As\" -> \"As\" (Ace of spades)\n    \"10h\" -> \"Th\" (Ten of hearts)\n    \"KD\" -> \"Kd\" (King of diamonds, normalized to lowercase suit)",
      "bases": [],
      "methods": [
        "validate",
        "validate_hand"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 12,
      "line_number": 56
    },
    {
      "id": "src.pokertool.input_validation.BetValidator",
      "type": "class",
      "name": "BetValidator",
      "module": "src.pokertool.input_validation",
      "docstring": "Validate and sanitize bet amounts.",
      "bases": [],
      "methods": [
        "validate"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 11,
      "line_number": 172
    },
    {
      "id": "src.pokertool.input_validation.PlayerValidator",
      "type": "class",
      "name": "PlayerValidator",
      "module": "src.pokertool.input_validation",
      "docstring": "Validate player data.",
      "bases": [],
      "methods": [
        "validate_name",
        "validate_seat",
        "validate_player_data"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 26,
      "line_number": 268
    },
    {
      "id": "src.pokertool.input_validation.TableValidator",
      "type": "class",
      "name": "TableValidator",
      "module": "src.pokertool.input_validation",
      "docstring": "Validate table state data.",
      "bases": [],
      "methods": [
        "validate_stage",
        "validate_table_data"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 29,
      "line_number": 430
    },
    {
      "id": "src.pokertool.input_validation.validate_card",
      "type": "function",
      "name": "validate_card",
      "module": "src.pokertool.input_validation",
      "signature": "def validate_card(card: str) -> Tuple[bool, Optional[str], Optional[str]]",
      "docstring": "Simple card validation helper.\n\nArgs:\n    card: Card string\n\nReturns:\n    (valid, normalized_card, error_message)",
      "parameters": [
        {
          "name": "card",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Tuple[bool, Optional[str], Optional[str]]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "CardValidator.validate"
      ],
      "raises": [],
      "line_number": 557
    },
    {
      "id": "src.pokertool.input_validation.validate_bet",
      "type": "function",
      "name": "validate_bet",
      "module": "src.pokertool.input_validation",
      "signature": "def validate_bet(amount: Union[int, float, str]) -> Tuple[bool, Optional[float], Optional[str]]",
      "docstring": "Simple bet validation helper.\n\nArgs:\n    amount: Bet amount\n\nReturns:\n    (valid, normalized_amount, error_message)",
      "parameters": [
        {
          "name": "amount",
          "annotation": "Union[int, float, str]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Tuple[bool, Optional[float], Optional[str]]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "BetValidator.validate"
      ],
      "raises": [],
      "line_number": 571
    },
    {
      "id": "src.pokertool.input_validation.sanitize_table_data",
      "type": "function",
      "name": "sanitize_table_data",
      "module": "src.pokertool.input_validation",
      "signature": "def sanitize_table_data(table_data: Dict[str, Any]) -> Dict[str, Any]",
      "docstring": "Sanitize table data and return clean version.\n\nArgs:\n    table_data: Raw table data\n\nReturns:\n    Sanitized table data",
      "parameters": [
        {
          "name": "table_data",
          "annotation": "Dict[str, Any]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Dict[str, Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "TableValidator.validate_table_data",
        "logger.warning",
        "join"
      ],
      "raises": [],
      "line_number": 585
    },
    {
      "id": "src.pokertool.enhanced_gui",
      "type": "module",
      "path": "src/pokertool/enhanced_gui.py",
      "docstring": null,
      "version": "'20.1.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 249,
      "loc": 1770,
      "dependencies": [
        "webbrowser",
        "sys",
        "pathlib",
        "time",
        "__future__",
        "enhanced_gui_components",
        "typing",
        "subprocess",
        "json",
        "datetime",
        "os",
        "threading",
        "tkinter"
      ]
    },
    {
      "id": "src.pokertool.enhanced_gui.IntegratedPokerAssistant",
      "type": "class",
      "name": "IntegratedPokerAssistant",
      "module": "src.pokertool.enhanced_gui",
      "docstring": "Integrated Poker Assistant with prominent Autopilot functionality.",
      "bases": [
        "tk.Tk"
      ],
      "methods": [
        "__init__",
        "_init_modules",
        "_setup_styles",
        "_register_widget_translation",
        "_update_widget_translation_key",
        "_register_tab_title",
        "_apply_widget_translation",
        "_apply_translations",
        "_refresh_progress_summary",
        "_build_ui",
        "_build_autopilot_tab",
        "_build_manual_play_tab",
        "_build_analysis_tab",
        "_build_coaching_tab",
        "_build_settings_tab",
        "_build_analytics_tab",
        "_record_sample_event",
        "_record_sample_session",
        "_refresh_analytics_metrics",
        "_ensure_gamification_state",
        "_build_gamification_tab",
        "_log_gamification_activity",
        "_award_marathon_badge",
        "_refresh_gamification_view",
        "_build_community_tab",
        "_create_community_post",
        "_reply_to_selected_post",
        "_join_selected_challenge",
        "_refresh_community_views",
        "_handle_autopilot_toggle",
        "_handle_autopilot_settings",
        "_update_manual_autopilot_status",
        "_start_autopilot",
        "_stop_autopilot",
        "_autopilot_loop",
        "_process_table_state",
        "_detect_tables",
        "_test_screenshot",
        "_run_gto_analysis",
        "_open_web_interface",
        "_open_manual_gui",
        "_brighten_color",
        "_update_table_status",
        "_init_database",
        "_start_background_services",
        "_start_enhanced_screen_scraper",
        "_stop_enhanced_screen_scraper",
        "_toggle_screen_scraper",
        "_update_scraper_indicator",
        "_start_screen_update_loop",
        "_stop_screen_update_loop",
        "_handle_app_exit"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 240,
      "line_number": 182
    },
    {
      "id": "src.pokertool.enhanced_gui._ensure_scraper_dependencies",
      "type": "function",
      "name": "_ensure_scraper_dependencies",
      "module": "src.pokertool.enhanced_gui",
      "signature": "def _ensure_scraper_dependencies()",
      "docstring": "Ensure screen scraper dependencies are installed before module imports.",
      "parameters": [],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 7,
      "calls": [
        "critical_deps.append",
        "__import__",
        "missing.append",
        "print",
        "print",
        "print",
        "print",
        "subprocess.check_call",
        "print",
        "print",
        "print"
      ],
      "raises": [],
      "line_number": 52
    },
    {
      "id": "src.pokertool.enhanced_gui.main",
      "type": "function",
      "name": "main",
      "module": "src.pokertool.enhanced_gui",
      "signature": "def main()",
      "docstring": "Launch the enhanced poker assistant.",
      "parameters": [],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "IntegratedPokerAssistant",
        "app.mainloop",
        "print"
      ],
      "raises": [],
      "line_number": 1757
    },
    {
      "id": "src.pokertool.preflop_charts",
      "type": "module",
      "path": "src/pokertool/preflop_charts.py",
      "docstring": "Solver-Based Preflop Charts (PREFLOP-001)\n\nComprehensive solver-approved preflop ranges for various situations.\nProvides easy access to GTO ranges with multiple adjustment options.\n\nID: PREFLOP-001\nPriority: MEDIUM\nExpected Accuracy Gain: 8-10% improvement in preflop play",
      "version": null,
      "author": null,
      "complexity": 46,
      "loc": 413,
      "dependencies": [
        "typing",
        "dataclasses",
        "range_generator",
        "json"
      ]
    },
    {
      "id": "src.pokertool.preflop_charts.ChartRecommendation",
      "type": "class",
      "name": "ChartRecommendation",
      "module": "src.pokertool.preflop_charts",
      "docstring": "Recommendation for a specific situation",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 26
    },
    {
      "id": "src.pokertool.preflop_charts.PreflopChartManager",
      "type": "class",
      "name": "PreflopChartManager",
      "module": "src.pokertool.preflop_charts",
      "docstring": "Manage preflop charts and provide recommendations",
      "bases": [],
      "methods": [
        "__init__",
        "get_chart",
        "_create_cache_key",
        "get_recommendation",
        "_generate_reasoning",
        "_calculate_confidence",
        "should_play_hand",
        "export_all_charts",
        "compare_ranges"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 29,
      "line_number": 35
    },
    {
      "id": "src.pokertool.preflop_charts.QuickCharts",
      "type": "class",
      "name": "QuickCharts",
      "module": "src.pokertool.preflop_charts",
      "docstring": "Quick access to common preflop charts",
      "bases": [],
      "methods": [
        "__init__",
        "utg_open_100bb",
        "btn_open_100bb",
        "co_open_100bb",
        "sb_open_100bb",
        "btn_open_with_ante",
        "utg_open_with_straddle",
        "btn_open_bubble"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 8,
      "line_number": 220
    },
    {
      "id": "src.pokertool.preflop_charts.PreflopAnalyzer",
      "type": "class",
      "name": "PreflopAnalyzer",
      "module": "src.pokertool.preflop_charts",
      "docstring": "Analyze preflop situations",
      "bases": [],
      "methods": [
        "__init__",
        "analyze_situation",
        "get_position_ranges",
        "calculate_range_width_trend"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 9,
      "line_number": 332
    },
    {
      "id": "src.pokertool.csrf_protection",
      "type": "module",
      "path": "src/pokertool/csrf_protection.py",
      "docstring": "CSRF Protection Middleware\n===========================\n\nProvides Cross-Site Request Forgery (CSRF) protection for state-changing operations.\n\nCSRF attacks trick authenticated users into performing unwanted actions on web applications.\nThis module implements token-based CSRF protection following OWASP best practices.\n\nModule: pokertool.csrf_protection\nVersion: 1.0.0",
      "version": null,
      "author": null,
      "complexity": 26,
      "loc": 308,
      "dependencies": [
        "starlette",
        "fastapi",
        "hashlib",
        "time",
        "typing",
        "hmac",
        "secrets"
      ]
    },
    {
      "id": "src.pokertool.csrf_protection.CSRFProtection",
      "type": "class",
      "name": "CSRFProtection",
      "module": "src.pokertool.csrf_protection",
      "docstring": "CSRF protection implementation with token generation and validation.\n\nFeatures:\n- Secure token generation using secrets module\n- HMAC-based token validation\n- Configurable token expiration\n- Support for SameSite cookie attribute\n- Double-submit cookie pattern",
      "bases": [],
      "methods": [
        "__init__",
        "generate_token",
        "validate_token",
        "set_token_cookie"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 10,
      "line_number": 28
    },
    {
      "id": "src.pokertool.csrf_protection.CSRFMiddleware",
      "type": "class",
      "name": "CSRFMiddleware",
      "module": "src.pokertool.csrf_protection",
      "docstring": "FastAPI middleware for CSRF protection.\n\nProtects state-changing operations (POST, PUT, DELETE, PATCH) with CSRF tokens.\nSafe methods (GET, HEAD, OPTIONS) are not protected.",
      "bases": [
        "BaseHTTPMiddleware"
      ],
      "methods": [
        "__init__",
        "is_path_exempt",
        "dispatch"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 12,
      "line_number": 161
    },
    {
      "id": "src.pokertool.csrf_protection.get_csrf_token",
      "type": "function",
      "name": "get_csrf_token",
      "module": "src.pokertool.csrf_protection",
      "signature": "def get_csrf_token(request: Request, csrf: CSRFProtection) -> str",
      "docstring": "Dependency to get or generate CSRF token for route.\n\nUsage:\n    @app.get(\"/form\")\n    def get_form(csrf_token: str = Depends(get_csrf_token)):\n        return {\"csrf_token\": csrf_token}\n\nArgs:\n    request: Current request\n    csrf: CSRFProtection instance\n\nReturns:\n    CSRF token string",
      "parameters": [
        {
          "name": "request",
          "annotation": "Request",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "csrf",
          "annotation": "CSRFProtection",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "request.cookies.get",
        "csrf.validate_token",
        "csrf.generate_token"
      ],
      "raises": [],
      "line_number": 262
    },
    {
      "id": "src.pokertool.csrf_protection.create_csrf_protection",
      "type": "function",
      "name": "create_csrf_protection",
      "module": "src.pokertool.csrf_protection",
      "signature": "def create_csrf_protection(secret_key: str) -> CSRFProtection",
      "docstring": "Create configured CSRF protection instance.\n\nArgs:\n    secret_key: Secret key from environment\n\nReturns:\n    Configured CSRFProtection instance",
      "parameters": [
        {
          "name": "secret_key",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "CSRFProtection",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "CSRFProtection"
      ],
      "raises": [],
      "line_number": 289
    },
    {
      "id": "src.pokertool.concurrency",
      "type": "module",
      "path": "src/pokertool/concurrency.py",
      "docstring": "PokerTool Advanced Threading Module\n====================================\n\nSophisticated thread and process pool management for concurrent operations.\nImplements priority queuing, task scheduling, and resource management for\noptimal performance in multi-core environments.\n\nModule: pokertool.concurrency\nVersion: 20.0.0\nLast Modified: 2025-09-29\nAuthor: PokerTool Development Team\nLicense: MIT\n\nDependencies:\n    - concurrent.futures: Thread and process pools\n    - asyncio: Asynchronous I/O support\n    - threading: Low-level threading primitives\n    - multiprocessing: Process-based parallelism\n\nThreading Features:\n    - Dynamic thread pool sizing\n    - Priority-based task queuing\n    - Deadlock detection\n    - Resource limiting\n    - Task cancellation\n    - Performance metrics\n    - Graceful shutdown\n\nTask Priorities:\n    - CRITICAL: Immediate execution\n    - HIGH: Priority execution\n    - NORMAL: Standard priority\n    - LOW: Background tasks\n\nChange Log:\n    - v28.0.0 (2025-09-29): Enhanced documentation, added metrics\n    - v19.0.0 (2025-09-18): Priority queue implementation\n    - v18.0.0 (2025-09-15): Initial threading support",
      "version": "'20.0.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 123,
      "loc": 787,
      "dependencies": [
        "logging",
        "multiprocessing",
        "functools",
        "atexit",
        "weakref",
        "threading",
        "time",
        "typing",
        "dataclasses",
        "enum",
        "concurrent",
        "contextlib",
        "asyncio",
        "queue"
      ]
    },
    {
      "id": "src.pokertool.concurrency.TaskPriority",
      "type": "class",
      "name": "TaskPriority",
      "module": "src.pokertool.concurrency",
      "docstring": "Task priority levels for the thread pool.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 71
    },
    {
      "id": "src.pokertool.concurrency.TaskResult",
      "type": "class",
      "name": "TaskResult",
      "module": "src.pokertool.concurrency",
      "docstring": "Result container for threaded tasks.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 79
    },
    {
      "id": "src.pokertool.concurrency.ThreadPoolConfig",
      "type": "class",
      "name": "ThreadPoolConfig",
      "module": "src.pokertool.concurrency",
      "docstring": "Configuration for thread pool management.",
      "bases": [],
      "methods": [
        "__post_init__"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 3,
      "line_number": 88
    },
    {
      "id": "src.pokertool.concurrency.ThreadSafeCounter",
      "type": "class",
      "name": "ThreadSafeCounter",
      "module": "src.pokertool.concurrency",
      "docstring": "Thread-safe counter for monitoring.",
      "bases": [],
      "methods": [
        "__init__",
        "increment",
        "decrement",
        "value"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 7,
      "line_number": 100
    },
    {
      "id": "src.pokertool.concurrency.ThreadSafeDict",
      "type": "class",
      "name": "ThreadSafeDict",
      "module": "src.pokertool.concurrency",
      "docstring": "Thread-safe dictionary implementation.",
      "bases": [
        "Generic"
      ],
      "methods": [
        "__init__",
        "get",
        "set",
        "delete",
        "keys",
        "values",
        "items",
        "clear",
        "__len__"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 18,
      "line_number": 125
    },
    {
      "id": "src.pokertool.concurrency.TaskQueue",
      "type": "class",
      "name": "TaskQueue",
      "module": "src.pokertool.concurrency",
      "docstring": "Priority-based task queue for threading operations.",
      "bases": [],
      "methods": [
        "__init__",
        "put",
        "get",
        "qsize",
        "empty"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 12,
      "line_number": 174
    },
    {
      "id": "src.pokertool.concurrency.PokerThreadPool",
      "type": "class",
      "name": "PokerThreadPool",
      "module": "src.pokertool.concurrency",
      "docstring": "Advanced thread pool manager for poker tool operations.\nSupports priority queuing, monitoring, and resource management.",
      "bases": [],
      "methods": [
        "__init__",
        "_initialize_pools",
        "_priority_worker",
        "_monitor_worker",
        "submit_priority_task",
        "submit_thread_task",
        "submit_process_task",
        "get_task_result",
        "get_stats",
        "shutdown"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 28,
      "line_number": 225
    },
    {
      "id": "src.pokertool.concurrency.AsyncManager",
      "type": "class",
      "name": "AsyncManager",
      "module": "src.pokertool.concurrency",
      "docstring": "Manager for async I/O operations in poker tool.",
      "bases": [],
      "methods": [
        "__init__",
        "initialize",
        "run_in_executor",
        "concurrent_database_ops",
        "concurrent_api_calls",
        "batch_process",
        "close"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 11,
      "line_number": 449
    },
    {
      "id": "src.pokertool.concurrency.PokerConcurrencyManager",
      "type": "class",
      "name": "PokerConcurrencyManager",
      "module": "src.pokertool.concurrency",
      "docstring": "Specialized concurrency manager for poker operations.",
      "bases": [],
      "methods": [
        "__init__",
        "parallel_equity_calculation",
        "concurrent_hand_analysis",
        "parallel_opponent_modeling",
        "concurrent_database_operations",
        "parallel_gto_solving"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 24,
      "line_number": 515
    },
    {
      "id": "src.pokertool.concurrency._shutdown_global_thread_pool",
      "type": "function",
      "name": "_shutdown_global_thread_pool",
      "module": "src.pokertool.concurrency",
      "signature": "def _shutdown_global_thread_pool()",
      "docstring": "Shuts down the global thread pool if it exists.",
      "parameters": [],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "logger.info",
        "_global_thread_pool.shutdown"
      ],
      "raises": [],
      "line_number": 411
    },
    {
      "id": "src.pokertool.concurrency.get_thread_pool",
      "type": "function",
      "name": "get_thread_pool",
      "module": "src.pokertool.concurrency",
      "signature": "def get_thread_pool() -> PokerThreadPool",
      "docstring": "Get the global thread pool instance.",
      "parameters": [],
      "return_type": "PokerThreadPool",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "PokerThreadPool",
        "atexit.register"
      ],
      "raises": [],
      "line_number": 419
    },
    {
      "id": "src.pokertool.concurrency.threaded",
      "type": "function",
      "name": "threaded",
      "module": "src.pokertool.concurrency",
      "signature": "def threaded(priority: TaskPriority)",
      "docstring": "Decorator to run function in thread pool with priority.",
      "parameters": [
        {
          "name": "priority",
          "annotation": "TaskPriority",
          "default": "TaskPriority.NORMAL",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_thread_pool",
        "thread_pool.submit_priority_task",
        "thread_pool.get_task_result",
        "functools.wraps"
      ],
      "raises": [],
      "line_number": 428
    },
    {
      "id": "src.pokertool.concurrency.cpu_intensive",
      "type": "function",
      "name": "cpu_intensive",
      "module": "src.pokertool.concurrency",
      "signature": "def cpu_intensive(func: Callable) -> Callable",
      "docstring": "Decorator for CPU-intensive functions to use process pool.",
      "parameters": [
        {
          "name": "func",
          "annotation": "Callable",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Callable",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_thread_pool",
        "thread_pool.submit_process_task",
        "future.result",
        "functools.wraps"
      ],
      "raises": [],
      "line_number": 439
    },
    {
      "id": "src.pokertool.concurrency.get_async_manager",
      "type": "function",
      "name": "get_async_manager",
      "module": "src.pokertool.concurrency",
      "signature": "def get_async_manager() -> AsyncManager",
      "docstring": "Get the global async manager instance.",
      "parameters": [],
      "return_type": "AsyncManager",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "AsyncManager"
      ],
      "raises": [],
      "line_number": 671
    },
    {
      "id": "src.pokertool.concurrency.get_poker_concurrency_manager",
      "type": "function",
      "name": "get_poker_concurrency_manager",
      "module": "src.pokertool.concurrency",
      "signature": "def get_poker_concurrency_manager() -> PokerConcurrencyManager",
      "docstring": "Get the global poker concurrency manager instance.",
      "parameters": [],
      "return_type": "PokerConcurrencyManager",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "PokerConcurrencyManager"
      ],
      "raises": [],
      "line_number": 678
    },
    {
      "id": "src.pokertool.concurrency.managed_thread_pool",
      "type": "function",
      "name": "managed_thread_pool",
      "module": "src.pokertool.concurrency",
      "signature": "def managed_thread_pool(config: Optional[ThreadPoolConfig])",
      "docstring": "Context manager for thread pool with automatic cleanup.",
      "parameters": [
        {
          "name": "config",
          "annotation": "Optional[ThreadPoolConfig]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [
        "contextmanager"
      ],
      "is_async": false,
      "is_generator": true,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "PokerThreadPool",
        "pool.shutdown"
      ],
      "raises": [],
      "line_number": 687
    },
    {
      "id": "src.pokertool.concurrency.async_context",
      "type": "function",
      "name": "async_context",
      "module": "src.pokertool.concurrency",
      "signature": "def async_context()",
      "docstring": "Context manager for async operations.",
      "parameters": [],
      "return_type": null,
      "decorators": [
        "contextmanager"
      ],
      "is_async": false,
      "is_generator": true,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_async_manager",
        "manager.close"
      ],
      "raises": [],
      "line_number": 696
    },
    {
      "id": "src.pokertool.concurrency.run_concurrent_tasks",
      "type": "function",
      "name": "run_concurrent_tasks",
      "module": "src.pokertool.concurrency",
      "signature": "def run_concurrent_tasks(tasks: List[Awaitable[T]], max_concurrent: int) -> List[T]",
      "docstring": "Run multiple async tasks with concurrency limit.",
      "parameters": [
        {
          "name": "tasks",
          "annotation": "List[Awaitable[T]]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "max_concurrent",
          "annotation": "int",
          "default": "10",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "List[T]",
      "decorators": [],
      "is_async": true,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "asyncio.Semaphore",
        "_limited_task",
        "asyncio.gather"
      ],
      "raises": [],
      "line_number": 705
    },
    {
      "id": "src.pokertool.concurrency.parallel_map",
      "type": "function",
      "name": "parallel_map",
      "module": "src.pokertool.concurrency",
      "signature": "def parallel_map(func: Callable, items: List[Any], max_workers: int) -> List[Any]",
      "docstring": "Parallel map function using thread pool.",
      "parameters": [
        {
          "name": "func",
          "annotation": "Callable",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "items",
          "annotation": "List[Any]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "max_workers",
          "annotation": "int",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "List[Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 4,
      "calls": [
        "get_thread_pool",
        "thread_pool.submit_thread_task",
        "futures.append",
        "as_completed",
        "future.result",
        "results.append",
        "logger.error",
        "results.append"
      ],
      "raises": [],
      "line_number": 716
    },
    {
      "id": "src.pokertool.concurrency.monitor_performance",
      "type": "function",
      "name": "monitor_performance",
      "module": "src.pokertool.concurrency",
      "signature": "def monitor_performance(func: Callable) -> Callable",
      "docstring": "Decorator to monitor function performance.",
      "parameters": [
        {
          "name": "func",
          "annotation": "Callable",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Callable",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "time.time",
        "func",
        "time.time",
        "logger.info",
        "time.time",
        "logger.error",
        "functools.wraps"
      ],
      "raises": [],
      "line_number": 737
    },
    {
      "id": "src.pokertool.model_calibration",
      "type": "module",
      "path": "src/pokertool/model_calibration.py",
      "docstring": "Real-Time Model Calibration and Drift Correction for PokerTool\n================================================================\n\nMonitors prediction quality, detects model drift, and automatically\napplies calibration updates to maintain accurate win probability\nand EV predictions as opponent pools evolve.\n\nFeatures:\n- Online prediction monitoring and outcome tracking\n- Population Stability Index (PSI) drift detection\n- KL divergence for distribution shift detection\n- Online Platt scaling and isotonic regression calibration\n- Automatic retraining triggers\n- Stake-level tracking and alerting\n\nVersion: 1.0.0",
      "version": null,
      "author": null,
      "complexity": 62,
      "loc": 656,
      "dependencies": [
        "logging",
        "numpy",
        "pathlib",
        "time",
        "__future__",
        "typing",
        "dataclasses",
        "collections",
        "json",
        "enum",
        "datetime"
      ]
    },
    {
      "id": "src.pokertool.model_calibration.DriftStatus",
      "type": "class",
      "name": "DriftStatus",
      "module": "src.pokertool.model_calibration",
      "docstring": "Model drift status levels.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 39
    },
    {
      "id": "src.pokertool.model_calibration.CalibrationMethod",
      "type": "class",
      "name": "CalibrationMethod",
      "module": "src.pokertool.model_calibration",
      "docstring": "Available calibration methods.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 47
    },
    {
      "id": "src.pokertool.model_calibration.PredictionRecord",
      "type": "class",
      "name": "PredictionRecord",
      "module": "src.pokertool.model_calibration",
      "docstring": "Record of a single prediction and its outcome.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 55
    },
    {
      "id": "src.pokertool.model_calibration.CalibrationMetrics",
      "type": "class",
      "name": "CalibrationMetrics",
      "module": "src.pokertool.model_calibration",
      "docstring": "Metrics for calibration quality assessment.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 66
    },
    {
      "id": "src.pokertool.model_calibration.DriftMetrics",
      "type": "class",
      "name": "DriftMetrics",
      "module": "src.pokertool.model_calibration",
      "docstring": "Metrics for drift detection.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 76
    },
    {
      "id": "src.pokertool.model_calibration.OnlineCalibrator",
      "type": "class",
      "name": "OnlineCalibrator",
      "module": "src.pokertool.model_calibration",
      "docstring": "Online calibration module using Platt scaling or isotonic regression.\n\nMaintains calibration parameters that can be updated incrementally\nas new prediction-outcome pairs arrive.",
      "bases": [],
      "methods": [
        "__init__",
        "add_prediction",
        "calibrate",
        "_platt_calibrate",
        "_isotonic_calibrate",
        "update_calibration",
        "_update_platt_scaling",
        "_update_isotonic"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 20,
      "line_number": 86
    },
    {
      "id": "src.pokertool.model_calibration.DriftDetector",
      "type": "class",
      "name": "DriftDetector",
      "module": "src.pokertool.model_calibration",
      "docstring": "Drift detection using PSI and KL divergence.\n\nMonitors distribution shifts in predictions and features to detect\nwhen the model's assumptions are no longer valid.",
      "bases": [],
      "methods": [
        "__init__",
        "set_reference_distribution",
        "add_prediction",
        "detect_drift",
        "_compute_histogram",
        "_compute_psi",
        "_compute_kl_divergence"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 16,
      "line_number": 254
    },
    {
      "id": "src.pokertool.model_calibration.ModelCalibrationSystem",
      "type": "class",
      "name": "ModelCalibrationSystem",
      "module": "src.pokertool.model_calibration",
      "docstring": "Complete model calibration and drift correction system.\n\nIntegrates prediction monitoring, drift detection, online calibration,\nand automatic retraining triggers.",
      "bases": [],
      "methods": [
        "__init__",
        "log_prediction",
        "get_calibrated_probability",
        "_check_and_update",
        "_compute_calibration_metrics",
        "_compute_ece",
        "get_stats",
        "save_state",
        "load_state"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 24,
      "line_number": 386
    },
    {
      "id": "src.pokertool.model_calibration.get_calibration_system",
      "type": "function",
      "name": "get_calibration_system",
      "module": "src.pokertool.model_calibration",
      "signature": "def get_calibration_system() -> ModelCalibrationSystem",
      "docstring": "Get the global calibration system instance.",
      "parameters": [],
      "return_type": "ModelCalibrationSystem",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "ModelCalibrationSystem"
      ],
      "raises": [],
      "line_number": 618
    },
    {
      "id": "src.pokertool.node_locker",
      "type": "module",
      "path": "src/pokertool/node_locker.py",
      "docstring": "Node locking utilities for Game Theory Optimal (GTO) deviation workflows.\n\nProvides helpers for clamping action frequencies when solving with\nnode-locking constraints. Designed to be used by the GTO deviation\nengine to enforce exploitative or equilibrium-preserving adjustments.\n\nID: GTO-DEV-001\nStatus: INTEGRATED\nPriority: MEDIUM",
      "version": null,
      "author": null,
      "complexity": 26,
      "loc": 215,
      "dependencies": [
        "typing",
        "dataclasses",
        "__future__"
      ]
    },
    {
      "id": "src.pokertool.node_locker.NodeLock",
      "type": "class",
      "name": "NodeLock",
      "module": "src.pokertool.node_locker",
      "docstring": "Represents a single node locking constraint for an action.",
      "bases": [],
      "methods": [
        "clamp",
        "to_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 20
    },
    {
      "id": "src.pokertool.node_locker.NodeLocker",
      "type": "class",
      "name": "NodeLocker",
      "module": "src.pokertool.node_locker",
      "docstring": "Manages node locking constraints and applies them to action strategies.\n\nThe locker stores per-node constraints allowing the deviation engine to\nrestrict solver outputs (e.g. fix frequencies, enforce bluffs/value ratios,\nor mimic population tendencies).",
      "bases": [],
      "methods": [
        "__init__",
        "lock_action",
        "unlock_action",
        "get_locks",
        "apply",
        "_normalise",
        "export",
        "clear"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 24,
      "line_number": 41
    },
    {
      "id": "src.pokertool.meta_game",
      "type": "module",
      "path": "src/pokertool/meta_game.py",
      "docstring": "Meta-Game Optimizer\n\nMeta-game theory optimal adjustments for poker strategy.\nHandles leveling wars, dynamic strategy switching, exploitation vs protection balance,\nhistory-dependent strategies, and reputation modeling.\n\nID: META-001\nPriority: MEDIUM\nExpected Accuracy Gain: 7-10% in regular games",
      "version": null,
      "author": null,
      "complexity": 66,
      "loc": 435,
      "dependencies": [
        "typing",
        "dataclasses",
        "json",
        "enum"
      ]
    },
    {
      "id": "src.pokertool.meta_game.StrategyLevel",
      "type": "class",
      "name": "StrategyLevel",
      "module": "src.pokertool.meta_game",
      "docstring": "Levels of strategic thinking",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 19
    },
    {
      "id": "src.pokertool.meta_game.PlayerReputation",
      "type": "class",
      "name": "PlayerReputation",
      "module": "src.pokertool.meta_game",
      "docstring": "Player reputation types",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 28
    },
    {
      "id": "src.pokertool.meta_game.MetaGameState",
      "type": "class",
      "name": "MetaGameState",
      "module": "src.pokertool.meta_game",
      "docstring": "Current state of the meta-game",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 41
    },
    {
      "id": "src.pokertool.meta_game.StrategyAdjustment",
      "type": "class",
      "name": "StrategyAdjustment",
      "module": "src.pokertool.meta_game",
      "docstring": "Recommended strategy adjustment",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 51
    },
    {
      "id": "src.pokertool.meta_game.LevelingWarSimulator",
      "type": "class",
      "name": "LevelingWarSimulator",
      "module": "src.pokertool.meta_game",
      "docstring": "Simulate leveling wars between players",
      "bases": [],
      "methods": [
        "__init__",
        "_initialize_matchups",
        "simulate_matchup",
        "find_optimal_level",
        "estimate_villain_level"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 18,
      "line_number": 60
    },
    {
      "id": "src.pokertool.meta_game.DynamicStrategySwitcher",
      "type": "class",
      "name": "DynamicStrategySwitcher",
      "module": "src.pokertool.meta_game",
      "docstring": "Dynamically switch between strategies",
      "bases": [],
      "methods": [
        "__init__",
        "select_strategy",
        "_select_exploitative_strategy",
        "update_performance",
        "get_best_performing_strategy"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 12,
      "line_number": 128
    },
    {
      "id": "src.pokertool.meta_game.ExploitationProtectionBalancer",
      "type": "class",
      "name": "ExploitationProtectionBalancer",
      "module": "src.pokertool.meta_game",
      "docstring": "Balance between exploitation and protection",
      "bases": [],
      "methods": [
        "__init__",
        "calculate_balance_score",
        "recommend_adjustment",
        "assess_vulnerability"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 11,
      "line_number": 184
    },
    {
      "id": "src.pokertool.meta_game.HistoryDependentStrategy",
      "type": "class",
      "name": "HistoryDependentStrategy",
      "module": "src.pokertool.meta_game",
      "docstring": "Implement history-dependent strategic adjustments",
      "bases": [],
      "methods": [
        "__init__",
        "record_interaction",
        "get_situational_strategy"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 9,
      "line_number": 249
    },
    {
      "id": "src.pokertool.meta_game.ReputationModel",
      "type": "class",
      "name": "ReputationModel",
      "module": "src.pokertool.meta_game",
      "docstring": "Model and track player reputations",
      "bases": [],
      "methods": [
        "__init__",
        "build_reputation",
        "get_reputation",
        "get_exploitative_adjustments"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 12,
      "line_number": 303
    },
    {
      "id": "src.pokertool.meta_game.MetaGameOptimizer",
      "type": "class",
      "name": "MetaGameOptimizer",
      "module": "src.pokertool.meta_game",
      "docstring": "Main meta-game optimization engine",
      "bases": [],
      "methods": [
        "__init__",
        "optimize_strategy",
        "export_analysis"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 4,
      "line_number": 375
    },
    {
      "id": "src.pokertool.session_management",
      "type": "module",
      "path": "src/pokertool/session_management.py",
      "docstring": "Advanced session tracking, goals, and analytics utilities.",
      "version": null,
      "author": null,
      "complexity": 49,
      "loc": 309,
      "dependencies": [
        "uuid",
        "pathlib",
        "time",
        "__future__",
        "typing",
        "dataclasses",
        "json",
        "statistics"
      ]
    },
    {
      "id": "src.pokertool.session_management.SessionGoal",
      "type": "class",
      "name": "SessionGoal",
      "module": "src.pokertool.session_management",
      "docstring": "Defines objectives and guardrails for a playing session.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 22
    },
    {
      "id": "src.pokertool.session_management.SessionMetrics",
      "type": "class",
      "name": "SessionMetrics",
      "module": "src.pokertool.session_management",
      "docstring": "Aggregated metrics captured during a session.",
      "bases": [],
      "methods": [
        "winrate_per_100",
        "hourly_rate"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 4,
      "line_number": 33
    },
    {
      "id": "src.pokertool.session_management.SessionReview",
      "type": "class",
      "name": "SessionReview",
      "module": "src.pokertool.session_management",
      "docstring": "Structured review generated when a session ends.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 59
    },
    {
      "id": "src.pokertool.session_management.SessionRecord",
      "type": "class",
      "name": "SessionRecord",
      "module": "src.pokertool.session_management",
      "docstring": "Complete session payload persisted to disk.",
      "bases": [],
      "methods": [
        "to_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 72
    },
    {
      "id": "src.pokertool.session_management.SessionStorage",
      "type": "class",
      "name": "SessionStorage",
      "module": "src.pokertool.session_management",
      "docstring": "Persistence helper for session records.",
      "bases": [],
      "methods": [
        "__init__",
        "load",
        "save"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 6,
      "line_number": 99
    },
    {
      "id": "src.pokertool.session_management.SessionManager",
      "type": "class",
      "name": "SessionManager",
      "module": "src.pokertool.session_management",
      "docstring": "High-level coordinator for poker session tracking.",
      "bases": [],
      "methods": [
        "__init__",
        "start_session",
        "record_hand",
        "record_break",
        "complete_session",
        "should_take_break",
        "detect_tilt",
        "get_session_analytics",
        "get_active_sessions",
        "_build_review",
        "_get_session",
        "_time_since_break",
        "_persist"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 37,
      "line_number": 139
    },
    {
      "id": "src.pokertool.session_management._now",
      "type": "function",
      "name": "_now",
      "module": "src.pokertool.session_management",
      "signature": "def _now() -> float",
      "docstring": null,
      "parameters": [],
      "return_type": "float",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "time.time"
      ],
      "raises": [],
      "line_number": 17
    },
    {
      "id": "src.pokertool.rate_limiter",
      "type": "module",
      "path": "src/pokertool/rate_limiter.py",
      "docstring": "Rate Limiting Module\n====================\n\nComprehensive rate limiting for API endpoints to prevent abuse and ensure\nfair resource allocation.\n\nModule: pokertool.rate_limiter\nVersion: 1.0.0",
      "version": null,
      "author": null,
      "complexity": 32,
      "loc": 247,
      "dependencies": [
        "time",
        "typing",
        "dataclasses",
        "collections",
        "datetime",
        "threading"
      ]
    },
    {
      "id": "src.pokertool.rate_limiter.RateLimitConfig",
      "type": "class",
      "name": "RateLimitConfig",
      "module": "src.pokertool.rate_limiter",
      "docstring": "Configuration for rate limiting",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 24
    },
    {
      "id": "src.pokertool.rate_limiter.RateLimitRecord",
      "type": "class",
      "name": "RateLimitRecord",
      "module": "src.pokertool.rate_limiter",
      "docstring": "Record of rate limit tracking",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 32
    },
    {
      "id": "src.pokertool.rate_limiter.RateLimiter",
      "type": "class",
      "name": "RateLimiter",
      "module": "src.pokertool.rate_limiter",
      "docstring": "Token bucket rate limiter with configurable limits",
      "bases": [],
      "methods": [
        "__init__",
        "configure",
        "check_limit",
        "get_stats",
        "reset"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 22,
      "line_number": 39
    },
    {
      "id": "src.pokertool.rate_limiter.AdaptiveRateLimiter",
      "type": "class",
      "name": "AdaptiveRateLimiter",
      "module": "src.pokertool.rate_limiter",
      "docstring": "Adaptive rate limiter that adjusts limits based on system load",
      "bases": [],
      "methods": [
        "__init__",
        "set_system_load",
        "check_limit"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 4,
      "line_number": 161
    },
    {
      "id": "src.pokertool.rate_limiter.configure_rate_limit",
      "type": "function",
      "name": "configure_rate_limit",
      "module": "src.pokertool.rate_limiter",
      "signature": "def configure_rate_limit(endpoint: str, max_requests: int, window_seconds: int, block_duration: int)",
      "docstring": "Configure global rate limit",
      "parameters": [
        {
          "name": "endpoint",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "max_requests",
          "annotation": "int",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "window_seconds",
          "annotation": "int",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "block_duration",
          "annotation": "int",
          "default": "300",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "_global_rate_limiter.configure"
      ],
      "raises": [],
      "line_number": 208
    },
    {
      "id": "src.pokertool.rate_limiter.check_rate_limit",
      "type": "function",
      "name": "check_rate_limit",
      "module": "src.pokertool.rate_limiter",
      "signature": "def check_rate_limit(endpoint: str, identifier: str) -> Tuple[bool, Optional[str]]",
      "docstring": "Check against global rate limiter",
      "parameters": [
        {
          "name": "endpoint",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "identifier",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Tuple[bool, Optional[str]]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "_global_rate_limiter.check_limit"
      ],
      "raises": [],
      "line_number": 213
    },
    {
      "id": "src.pokertool.rate_limiter.get_rate_limit_stats",
      "type": "function",
      "name": "get_rate_limit_stats",
      "module": "src.pokertool.rate_limiter",
      "signature": "def get_rate_limit_stats(endpoint: Optional[str]) -> Dict",
      "docstring": "Get rate limit statistics",
      "parameters": [
        {
          "name": "endpoint",
          "annotation": "Optional[str]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Dict",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "_global_rate_limiter.get_stats"
      ],
      "raises": [],
      "line_number": 218
    },
    {
      "id": "src.pokertool.rate_limiter.reset_rate_limits",
      "type": "function",
      "name": "reset_rate_limits",
      "module": "src.pokertool.rate_limiter",
      "signature": "def reset_rate_limits(endpoint: Optional[str], identifier: Optional[str])",
      "docstring": "Reset rate limits",
      "parameters": [
        {
          "name": "endpoint",
          "annotation": "Optional[str]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "identifier",
          "annotation": "Optional[str]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "_global_rate_limiter.reset"
      ],
      "raises": [],
      "line_number": 223
    },
    {
      "id": "src.pokertool.rate_limiter.setup_default_rate_limits",
      "type": "function",
      "name": "setup_default_rate_limits",
      "module": "src.pokertool.rate_limiter",
      "signature": "def setup_default_rate_limits()",
      "docstring": "Setup default rate limits",
      "parameters": [],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "RATE_LIMITS.items",
        "configure_rate_limit"
      ],
      "raises": [],
      "line_number": 239
    },
    {
      "id": "src.pokertool.rbac",
      "type": "module",
      "path": "src/pokertool/rbac.py",
      "docstring": "Role-Based Access Control (RBAC) System\n========================================\n\nProvides comprehensive role-based access control for feature authorization.\n\nRBAC allows flexible permission management through roles and permissions,\nmaking it easy to control access to features, API endpoints, and resources.\n\nModule: pokertool.rbac\nVersion: 1.0.0",
      "version": null,
      "author": null,
      "complexity": 32,
      "loc": 451,
      "dependencies": [
        "functools",
        "logging",
        "fastapi",
        "typing",
        "dataclasses",
        "enum"
      ]
    },
    {
      "id": "src.pokertool.rbac.Permission",
      "type": "class",
      "name": "Permission",
      "module": "src.pokertool.rbac",
      "docstring": "System permissions for fine-grained access control.",
      "bases": [
        "str",
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 27
    },
    {
      "id": "src.pokertool.rbac.Role",
      "type": "class",
      "name": "Role",
      "module": "src.pokertool.rbac",
      "docstring": "User roles with predefined permission sets.",
      "bases": [
        "str",
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 67
    },
    {
      "id": "src.pokertool.rbac.RoleDefinition",
      "type": "class",
      "name": "RoleDefinition",
      "module": "src.pokertool.rbac",
      "docstring": "Definition of a role with its permissions.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 88
    },
    {
      "id": "src.pokertool.rbac.RBACSystem",
      "type": "class",
      "name": "RBACSystem",
      "module": "src.pokertool.rbac",
      "docstring": "Role-Based Access Control system implementation.\n\nFeatures:\n- Role hierarchy with permission inheritance\n- Fine-grained permission checking\n- Dynamic role assignment\n- Permission caching for performance",
      "bases": [],
      "methods": [
        "__init__",
        "_initialize_default_roles",
        "define_role",
        "get_role_permissions",
        "assign_role",
        "revoke_role",
        "get_user_permissions",
        "has_permission",
        "has_any_permission",
        "has_all_permissions",
        "has_role"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 20,
      "line_number": 96
    },
    {
      "id": "src.pokertool.rbac.get_rbac_system",
      "type": "function",
      "name": "get_rbac_system",
      "module": "src.pokertool.rbac",
      "signature": "def get_rbac_system() -> RBACSystem",
      "docstring": "Get or create global RBAC system instance.",
      "parameters": [],
      "return_type": "RBACSystem",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "RBACSystem"
      ],
      "raises": [],
      "line_number": 340
    },
    {
      "id": "src.pokertool.rbac.require_permission",
      "type": "function",
      "name": "require_permission",
      "module": "src.pokertool.rbac",
      "signature": "def require_permission(permission: Permission)",
      "docstring": "FastAPI dependency to require specific permission.\n\nUsage:\n    @app.get(\"/admin\", dependencies=[Depends(require_permission(Permission.MANAGE_SYSTEM))])\n    def admin_endpoint():\n        return {\"message\": \"Admin access granted\"}\n\nArgs:\n    permission: Required permission\n\nReturns:\n    Dependency function",
      "parameters": [
        {
          "name": "permission",
          "annotation": "Permission",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "getattr",
        "HTTPException",
        "get_rbac_system",
        "rbac.has_permission",
        "HTTPException"
      ],
      "raises": [
        "HTTPException",
        "HTTPException"
      ],
      "line_number": 349
    },
    {
      "id": "src.pokertool.rbac.require_role",
      "type": "function",
      "name": "require_role",
      "module": "src.pokertool.rbac",
      "signature": "def require_role(role: str)",
      "docstring": "FastAPI dependency to require specific role.\n\nUsage:\n    @app.get(\"/admin\", dependencies=[Depends(require_role(Role.ADMIN))])\n    def admin_endpoint():\n        return {\"message\": \"Admin access granted\"}\n\nArgs:\n    role: Required role\n\nReturns:\n    Dependency function",
      "parameters": [
        {
          "name": "role",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "getattr",
        "HTTPException",
        "get_rbac_system",
        "rbac.has_role",
        "HTTPException"
      ],
      "raises": [
        "HTTPException",
        "HTTPException"
      ],
      "line_number": 384
    },
    {
      "id": "src.pokertool.rbac.requires_permission",
      "type": "function",
      "name": "requires_permission",
      "module": "src.pokertool.rbac",
      "signature": "def requires_permission(permission: Permission)",
      "docstring": "Decorator to check permission for a function.\n\nUsage:\n    @requires_permission(Permission.ANALYZE_HAND)\n    def analyze_hand(user_id: str, hand_data: dict):\n        # Function implementation\n        pass\n\nArgs:\n    permission: Required permission\n\nReturns:\n    Decorated function",
      "parameters": [
        {
          "name": "permission",
          "annotation": "Permission",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 4,
      "calls": [
        "kwargs.get",
        "ValueError",
        "get_rbac_system",
        "rbac.has_permission",
        "PermissionError",
        "func",
        "wraps"
      ],
      "raises": [
        "ValueError",
        "PermissionError"
      ],
      "line_number": 419
    },
    {
      "id": "src.pokertool",
      "type": "module",
      "path": "src/pokertool/__init__.py",
      "docstring": "PokerTool   Init   Module\n===========================\n\nThis module provides functionality for   init   operations\nwithin the PokerTool application ecosystem.\n\nModule: pokertool.__init__\nVersion: 20.0.0\nLast Modified: 2025-09-29\nAuthor: PokerTool Development Team\nLicense: MIT\n\nDependencies:\n    - See module imports for specific dependencies\n    - Python 3.10+ required\n\nChange Log:\n    - v28.0.0 (2025-09-29): Enhanced documentation\n    - v19.0.0 (2025-09-18): Bug fixes and improvements\n    - v18.0.0 (2025-09-15): Initial implementation",
      "version": "'28.0.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 0,
      "loc": 54,
      "dependencies": []
    },
    {
      "id": "src.pokertool.confidence_decision_api",
      "type": "module",
      "path": "src/pokertool/confidence_decision_api.py",
      "docstring": "Confidence-Aware Decision API\n==============================\n\nProvides calibrated confidence intervals and recommendation strength for poker decisions.\nThis module extends inference services to output predictive distributions, compute credible\nintervals, and propagate uncertainty into decision heuristics and risk controls.\n\nModule: pokertool.confidence_decision_api\nVersion: 35.0.0\nAuthor: PokerTool Development Team\nLicense: MIT",
      "version": null,
      "author": null,
      "complexity": 37,
      "loc": 499,
      "dependencies": [
        "logging",
        "numpy",
        "__future__",
        "typing",
        "dataclasses",
        "enum"
      ]
    },
    {
      "id": "src.pokertool.confidence_decision_api.ConfidenceBand",
      "type": "class",
      "name": "ConfidenceBand",
      "module": "src.pokertool.confidence_decision_api",
      "docstring": "Confidence bands for decision strength.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 29
    },
    {
      "id": "src.pokertool.confidence_decision_api.RiskLevel",
      "type": "class",
      "name": "RiskLevel",
      "module": "src.pokertool.confidence_decision_api",
      "docstring": "Risk levels for bankroll management.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 38
    },
    {
      "id": "src.pokertool.confidence_decision_api.ConfidenceInterval",
      "type": "class",
      "name": "ConfidenceInterval",
      "module": "src.pokertool.confidence_decision_api",
      "docstring": "Represents a confidence interval for a prediction.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 47
    },
    {
      "id": "src.pokertool.confidence_decision_api.DecisionRecommendation",
      "type": "class",
      "name": "DecisionRecommendation",
      "module": "src.pokertool.confidence_decision_api",
      "docstring": "A poker decision with calibrated confidence metrics.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 57
    },
    {
      "id": "src.pokertool.confidence_decision_api.PredictiveDistribution",
      "type": "class",
      "name": "PredictiveDistribution",
      "module": "src.pokertool.confidence_decision_api",
      "docstring": "Represents a full predictive distribution for uncertainty quantification.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 74
    },
    {
      "id": "src.pokertool.confidence_decision_api.ConfidenceAwareDecisionAPI",
      "type": "class",
      "name": "ConfidenceAwareDecisionAPI",
      "module": "src.pokertool.confidence_decision_api",
      "docstring": "Main API for confidence-aware poker decision making.\n\nProvides methods to:\n- Compute predictive distributions with uncertainty estimates\n- Calculate credible intervals for EV and win probability\n- Determine confidence bands and risk levels\n- Adjust recommendations based on bankroll and risk tolerance",
      "bases": [],
      "methods": [
        "__init__",
        "compute_predictive_distribution",
        "compute_confidence_interval",
        "determine_confidence_band",
        "determine_risk_level",
        "recommend_decision",
        "format_recommendation"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 36,
      "line_number": 83
    },
    {
      "id": "src.pokertool.confidence_decision_api.get_confidence_decision_api",
      "type": "function",
      "name": "get_confidence_decision_api",
      "module": "src.pokertool.confidence_decision_api",
      "signature": "def get_confidence_decision_api(n_bootstrap_samples: int, bankroll: Optional[float]) -> ConfidenceAwareDecisionAPI",
      "docstring": "Factory function to create a ConfidenceAwareDecisionAPI instance.\n\nArgs:\n    n_bootstrap_samples: Number of bootstrap samples for uncertainty estimation\n    bankroll: Current bankroll for risk management\n\nReturns:\n    Configured ConfidenceAwareDecisionAPI instance",
      "parameters": [
        {
          "name": "n_bootstrap_samples",
          "annotation": "int",
          "default": "1000",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "bankroll",
          "annotation": "Optional[float]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "ConfidenceAwareDecisionAPI",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "ConfidenceAwareDecisionAPI"
      ],
      "raises": [],
      "line_number": 465
    },
    {
      "id": "src.pokertool.feature_flags",
      "type": "module",
      "path": "src/pokertool/feature_flags.py",
      "docstring": "Feature Flags System for PokerTool\n\nThis module provides a centralized feature flag management system that allows\nruntime toggling of features without code changes. Feature flags are controlled\nvia environment variables and can be used for:\n- Gradual feature rollouts\n- A/B testing\n- Beta features\n- Emergency feature disabling\n- Environment-specific features\n\nUsage:\n    from pokertool.feature_flags import FeatureFlags\n\n    flags = FeatureFlags()\n\n    if flags.is_enabled('betfair_accuracy'):\n        # Use new Betfair accuracy improvements\n        pass\n\n    if flags.is_enabled('multi_table', user_id='user123'):\n        # Enable multi-table for specific user\n        pass",
      "version": null,
      "author": null,
      "complexity": 42,
      "loc": 490,
      "dependencies": [
        "logging",
        "typing",
        "dataclasses",
        "json",
        "enum",
        "os"
      ]
    },
    {
      "id": "src.pokertool.feature_flags.FeatureState",
      "type": "class",
      "name": "FeatureState",
      "module": "src.pokertool.feature_flags",
      "docstring": "Feature flag states.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 38
    },
    {
      "id": "src.pokertool.feature_flags.Feature",
      "type": "class",
      "name": "Feature",
      "module": "src.pokertool.feature_flags",
      "docstring": "Represents a single feature flag.\n\nAttributes:\n    name: Unique feature identifier (snake_case)\n    enabled: Whether the feature is enabled\n    description: Human-readable description\n    state: Current state of the feature\n    rollout_percentage: Percentage of users who see this feature (0-100)\n    allowed_users: Set of user IDs allowed to use this feature\n    allowed_environments: Environments where this feature is available\n    dependencies: Other features this feature depends on",
      "bases": [],
      "methods": [
        "is_available_for_user",
        "is_available_in_environment"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 6,
      "line_number": 47
    },
    {
      "id": "src.pokertool.feature_flags.FeatureFlags",
      "type": "class",
      "name": "FeatureFlags",
      "module": "src.pokertool.feature_flags",
      "docstring": "Central feature flag management system.\n\nReads feature flags from environment variables with the pattern:\nFEATURE_{FEATURE_NAME}=true|false\n\nExample environment variables:\n    FEATURE_BETFAIR_ACCURACY=true\n    FEATURE_MULTI_TABLE=false\n    FEATURE_VOICE_COMMANDS=beta",
      "bases": [],
      "methods": [
        "__init__",
        "_detect_environment",
        "_load_features",
        "_parse_bool",
        "_log_feature_status",
        "is_enabled",
        "get_feature",
        "get_all_features",
        "get_enabled_features",
        "get_disabled_features",
        "enable_feature",
        "disable_feature",
        "register_feature",
        "to_dict",
        "to_json"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 30,
      "line_number": 94
    },
    {
      "id": "src.pokertool.feature_flags.get_feature_flags",
      "type": "function",
      "name": "get_feature_flags",
      "module": "src.pokertool.feature_flags",
      "signature": "def get_feature_flags() -> FeatureFlags",
      "docstring": "Get the global FeatureFlags instance (singleton pattern).\n\nReturns:\n    Global FeatureFlags instance\n\nExample:\n    from pokertool.feature_flags import get_feature_flags\n\n    flags = get_feature_flags()\n    if flags.is_enabled('betfair_accuracy'):\n        use_new_module()",
      "parameters": [],
      "return_type": "FeatureFlags",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "FeatureFlags"
      ],
      "raises": [],
      "line_number": 381
    },
    {
      "id": "src.pokertool.feature_flags.reset_feature_flags",
      "type": "function",
      "name": "reset_feature_flags",
      "module": "src.pokertool.feature_flags",
      "signature": "def reset_feature_flags() -> None",
      "docstring": "Reset the global feature flags instance (mainly for testing).",
      "parameters": [],
      "return_type": "None",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [],
      "raises": [],
      "line_number": 403
    },
    {
      "id": "src.pokertool.feature_flags.is_feature_enabled",
      "type": "function",
      "name": "is_feature_enabled",
      "module": "src.pokertool.feature_flags",
      "signature": "def is_feature_enabled(feature_name: str, user_id: Optional[str], default: bool) -> bool",
      "docstring": "Convenience function to check if a feature is enabled.\n\nThis is a shortcut for get_feature_flags().is_enabled(...)\n\nArgs:\n    feature_name: Name of the feature\n    user_id: Optional user ID\n    default: Default value if feature not found\n\nReturns:\n    True if feature is enabled, False otherwise\n\nExample:\n    from pokertool.feature_flags import is_feature_enabled\n\n    if is_feature_enabled('betfair_accuracy'):\n        use_new_accuracy_module()",
      "parameters": [
        {
          "name": "feature_name",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "user_id",
          "annotation": "Optional[str]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "default",
          "annotation": "bool",
          "default": "False",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "bool",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "is_enabled",
        "get_feature_flags"
      ],
      "raises": [],
      "line_number": 409
    },
    {
      "id": "src.pokertool.feature_flags.requires_feature",
      "type": "function",
      "name": "requires_feature",
      "module": "src.pokertool.feature_flags",
      "signature": "def requires_feature(feature_name: str, default_return)",
      "docstring": "Decorator that only executes function if feature is enabled.\n\nArgs:\n    feature_name: Name of the required feature\n    default_return: Value to return if feature is disabled\n\nExample:\n    @requires_feature('voice_commands')\n    def process_voice_command(text: str) -> str:\n        return parse_voice_command(text)",
      "parameters": [
        {
          "name": "feature_name",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "default_return",
          "annotation": null,
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "is_feature_enabled",
        "func",
        "logger.debug"
      ],
      "raises": [],
      "line_number": 433
    },
    {
      "id": "src.pokertool.production_database",
      "type": "module",
      "path": "src/pokertool/production_database.py",
      "docstring": "PokerTool Production Database Module\n======================================\n\nThis module provides functionality for production database operations\nwithin the PokerTool application ecosystem.\n\nModule: pokertool.production_database\nVersion: 20.0.0\nLast Modified: 2025-09-29\nAuthor: PokerTool Development Team\nLicense: MIT\n\nDependencies:\n    - See module imports for specific dependencies\n    - Python 3.10+ required\n\nChange Log:\n    - v28.0.0 (2025-09-29): Enhanced documentation\n    - v19.0.0 (2025-09-18): Bug fixes and improvements\n    - v18.0.0 (2025-09-15): Initial implementation",
      "version": "'20.0.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 92,
      "loc": 942,
      "dependencies": [
        "logging",
        "sqlite3",
        "pathlib",
        "time",
        "typing",
        "dataclasses",
        "json",
        "datetime",
        "os"
      ]
    },
    {
      "id": "src.pokertool.production_database.DatabaseConfig",
      "type": "class",
      "name": "DatabaseConfig",
      "module": "src.pokertool.production_database",
      "docstring": "Configuration for production database.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 94
    },
    {
      "id": "src.pokertool.production_database.MigrationStats",
      "type": "class",
      "name": "MigrationStats",
      "module": "src.pokertool.production_database",
      "docstring": "Statistics for database migration.",
      "bases": [],
      "methods": [
        "add_error",
        "get_duration",
        "get_success_rate"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 124
    },
    {
      "id": "src.pokertool.production_database.ProductionDatabase",
      "type": "class",
      "name": "ProductionDatabase",
      "module": "src.pokertool.production_database",
      "docstring": "Production PostgreSQL database manager with connection pooling and monitoring.",
      "bases": [],
      "methods": [
        "__init__",
        "_initialize_connection_pool",
        "_initialize_sqlalchemy",
        "get_connection",
        "return_connection",
        "execute_query",
        "create_production_schema",
        "migrate_from_sqlite",
        "_migrate_hand_analyses",
        "_migrate_sessions",
        "_migrate_opponent_profiles",
        "_migrate_scraper_data",
        "_insert_hand_analyses_batch",
        "_insert_opponent_profiles_batch",
        "_insert_scraper_data_batch",
        "_verify_migration",
        "create_backup",
        "_cleanup_old_backups",
        "get_monitoring_stats",
        "close"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 77,
      "line_number": 147
    },
    {
      "id": "src.pokertool.production_database.get_production_db",
      "type": "function",
      "name": "get_production_db",
      "module": "src.pokertool.production_database",
      "signature": "def get_production_db() -> ProductionDatabase",
      "docstring": "Get the global production database instance.",
      "parameters": [],
      "return_type": "ProductionDatabase",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "RuntimeError"
      ],
      "raises": [
        "RuntimeError"
      ],
      "line_number": 825
    },
    {
      "id": "src.pokertool.production_database.initialize_production_db",
      "type": "function",
      "name": "initialize_production_db",
      "module": "src.pokertool.production_database",
      "signature": "def initialize_production_db(config: DatabaseConfig) -> bool",
      "docstring": "Initialize the production database system.",
      "parameters": [
        {
          "name": "config",
          "annotation": "DatabaseConfig",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "bool",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "ProductionDatabase",
        "logger.info",
        "logger.error"
      ],
      "raises": [],
      "line_number": 832
    },
    {
      "id": "src.pokertool.production_database.migrate_to_production",
      "type": "function",
      "name": "migrate_to_production",
      "module": "src.pokertool.production_database",
      "signature": "def migrate_to_production(sqlite_path: str) -> bool",
      "docstring": "Migrate from SQLite to PostgreSQL production database.\n\nArgs:\n    sqlite_path: Path to SQLite database file\n\nReturns:\n    True if migration successful",
      "parameters": [
        {
          "name": "sqlite_path",
          "annotation": "str",
          "default": "'poker_decisions.db'",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "bool",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 6,
      "calls": [
        "DatabaseConfig",
        "os.getenv",
        "int",
        "os.getenv",
        "os.getenv",
        "os.getenv",
        "os.getenv",
        "os.getenv",
        "initialize_production_db",
        "get_production_db",
        "logger.info",
        "prod_db.create_production_schema",
        "logger.info",
        "prod_db.migrate_from_sqlite",
        "migration_stats.get_success_rate",
        "logger.info",
        "migration_stats.get_success_rate",
        "logger.info",
        "prod_db.create_backup",
        "logger.error",
        "migration_stats.get_success_rate",
        "logger.error",
        "logger.error"
      ],
      "raises": [],
      "line_number": 844
    },
    {
      "id": "src.pokertool.frame_differencing_engine",
      "type": "module",
      "path": "src/pokertool/frame_differencing_engine.py",
      "docstring": "SCRAPE-016: Frame Differencing Engine\n=====================================\n\nSkip entire frame processing if screen is unchanged (<5% pixel difference).\nExpected improvement: 5-10x faster during idle periods (waiting for action).\n\nModule: pokertool.frame_differencing_engine\nVersion: 1.0.0\nCreated: 2025-10-15\nAuthor: PokerTool Development Team\nLicense: MIT",
      "version": "'1.0.0'",
      "author": null,
      "complexity": 27,
      "loc": 331,
      "dependencies": [
        "logging",
        "time",
        "typing",
        "dataclasses",
        "numpy"
      ]
    },
    {
      "id": "src.pokertool.frame_differencing_engine.FrameDifferenceMetrics",
      "type": "class",
      "name": "FrameDifferenceMetrics",
      "module": "src.pokertool.frame_differencing_engine",
      "docstring": "Metrics for frame differencing engine.",
      "bases": [],
      "methods": [
        "update"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 31
    },
    {
      "id": "src.pokertool.frame_differencing_engine.FrameDifferencingEngine",
      "type": "class",
      "name": "FrameDifferencingEngine",
      "module": "src.pokertool.frame_differencing_engine",
      "docstring": "Skip entire frame processing if screen is unchanged.\n\nUses fast structural similarity (SSIM) computation between frames\nto detect when the screen is idle.",
      "bases": [],
      "methods": [
        "__init__",
        "_downsample_frame",
        "_compute_ssim_fast",
        "_compute_pixel_difference",
        "should_process_frame",
        "reset",
        "get_metrics"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 18,
      "line_number": 75
    },
    {
      "id": "src.pokertool.frame_differencing_engine.get_frame_diff_engine",
      "type": "function",
      "name": "get_frame_diff_engine",
      "module": "src.pokertool.frame_differencing_engine",
      "signature": "def get_frame_diff_engine(similarity_threshold: float) -> FrameDifferencingEngine",
      "docstring": "Get global frame differencing engine instance.",
      "parameters": [
        {
          "name": "similarity_threshold",
          "annotation": "float",
          "default": "0.95",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "FrameDifferencingEngine",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "FrameDifferencingEngine"
      ],
      "raises": [],
      "line_number": 281
    },
    {
      "id": "src.pokertool.frame_differencing_engine.reset_frame_diff_engine",
      "type": "function",
      "name": "reset_frame_diff_engine",
      "module": "src.pokertool.frame_differencing_engine",
      "signature": "def reset_frame_diff_engine()",
      "docstring": "Reset global frame differencing engine.",
      "parameters": [],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "_frame_diff_engine.reset"
      ],
      "raises": [],
      "line_number": 289
    },
    {
      "id": "src.pokertool.nash_solver",
      "type": "module",
      "path": "src/pokertool/nash_solver.py",
      "docstring": "Advanced Nash equilibrium solver with game tree abstraction for PokerTool.\n\nThis module provides Nash equilibrium computation using CFR++ with support for:\n- Heads-up zero-sum games\n- Multi-way pot approximations\n- Real-time strategy refinement\n- Game tree abstraction for large games\n- Information set bucketing\n\nModule: nash_solver\nVersion: 2.0.0\nLast Updated: 2025-10-05\nTask: NASH-001\nDependencies: cfr_plus\nTest Coverage: tests/system/test_nash_solver.py",
      "version": null,
      "author": null,
      "complexity": 45,
      "loc": 444,
      "dependencies": [
        "typing",
        "dataclasses",
        "cfr_plus",
        "__future__"
      ]
    },
    {
      "id": "src.pokertool.nash_solver.NashResult",
      "type": "class",
      "name": "NashResult",
      "module": "src.pokertool.nash_solver",
      "docstring": "Represents the outcome of a Nash equilibrium computation.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 27
    },
    {
      "id": "src.pokertool.nash_solver.AdvancedNashSolver",
      "type": "class",
      "name": "AdvancedNashSolver",
      "module": "src.pokertool.nash_solver",
      "docstring": "Facade combining CFR++ with helper routines for PokerTool.",
      "bases": [],
      "methods": [
        "__init__",
        "solve_headsup",
        "solve_multiway",
        "approximate_realtime_update",
        "_build_result",
        "_map_result",
        "_average_vectors"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 12,
      "line_number": 36
    },
    {
      "id": "src.pokertool.nash_solver.InformationSet",
      "type": "class",
      "name": "InformationSet",
      "module": "src.pokertool.nash_solver",
      "docstring": "Represents an information set in the game tree.\n\nAn information set groups together game states that are indistinguishable\nto the acting player based on available information.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 149
    },
    {
      "id": "src.pokertool.nash_solver.AbstractedNode",
      "type": "class",
      "name": "AbstractedNode",
      "module": "src.pokertool.nash_solver",
      "docstring": "A node in the abstracted game tree.",
      "bases": [],
      "methods": [
        "__post_init__"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 163
    },
    {
      "id": "src.pokertool.nash_solver.GameTreeAbstractor",
      "type": "class",
      "name": "GameTreeAbstractor",
      "module": "src.pokertool.nash_solver",
      "docstring": "Abstracts large game trees into manageable sizes for CFR++.\n\nUses bucketing and information set grouping to reduce the complexity\nof large poker games while preserving strategic structure.",
      "bases": [],
      "methods": [
        "__init__",
        "create_node",
        "create_information_set",
        "_assign_bucket",
        "assign_information_set",
        "get_abstracted_strategy_space",
        "get_information_set_by_bucket"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 13,
      "line_number": 178
    },
    {
      "id": "src.pokertool.nash_solver.HistogramAbstractor",
      "type": "class",
      "name": "HistogramAbstractor",
      "module": "src.pokertool.nash_solver",
      "docstring": "Creates card abstractions using hand strength histograms.\n\nThis technique groups hands with similar equity distributions\ninto buckets, dramatically reducing the game tree size.",
      "bases": [],
      "methods": [
        "__init__",
        "create_histogram",
        "compute_histogram_distance",
        "cluster_hands"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 18,
      "line_number": 307
    },
    {
      "id": "src.pokertool.correlation_id_middleware",
      "type": "module",
      "path": "src/pokertool/correlation_id_middleware.py",
      "docstring": "Correlation ID Middleware\n==========================\n\nProvides correlation ID generation and propagation for request tracing across services.\n\nCorrelation IDs allow tracking a single request across multiple services, microservices,\nand asynchronous operations, making debugging and performance analysis much easier.\n\nModule: pokertool.correlation_id_middleware\nVersion: 1.0.0",
      "version": null,
      "author": null,
      "complexity": 16,
      "loc": 253,
      "dependencies": [
        "starlette",
        "logging",
        "fastapi",
        "uuid",
        "contextvars",
        "typing"
      ]
    },
    {
      "id": "src.pokertool.correlation_id_middleware.CorrelationIdMiddleware",
      "type": "class",
      "name": "CorrelationIdMiddleware",
      "module": "src.pokertool.correlation_id_middleware",
      "docstring": "Middleware to handle correlation IDs for request tracing.\n\nFeatures:\n- Accepts correlation ID from incoming requests (X-Correlation-ID header)\n- Generates new correlation ID if not provided\n- Adds correlation ID to response headers\n- Stores correlation ID in context for access throughout request lifecycle\n- Automatically includes correlation ID in structured logs",
      "bases": [
        "BaseHTTPMiddleware"
      ],
      "methods": [
        "__init__",
        "_default_generator",
        "dispatch"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 32
    },
    {
      "id": "src.pokertool.correlation_id_middleware.CorrelationIdFilter",
      "type": "class",
      "name": "CorrelationIdFilter",
      "module": "src.pokertool.correlation_id_middleware",
      "docstring": "Logging filter that adds correlation ID to log records.\n\nUsage:\n    logger = logging.getLogger()\n    logger.addFilter(CorrelationIdFilter())",
      "bases": [
        "logging.Filter"
      ],
      "methods": [
        "filter"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 120
    },
    {
      "id": "src.pokertool.correlation_id_middleware.CorrelationIdPropagator",
      "type": "class",
      "name": "CorrelationIdPropagator",
      "module": "src.pokertool.correlation_id_middleware",
      "docstring": "Helper class for propagating correlation ID to external services.\n\nUsage:\n    headers = CorrelationIdPropagator.get_headers()\n    response = requests.get(url, headers=headers)",
      "bases": [],
      "methods": [
        "get_headers",
        "call_service"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 4,
      "line_number": 172
    },
    {
      "id": "src.pokertool.correlation_id_middleware.DatabaseQueryTracer",
      "type": "class",
      "name": "DatabaseQueryTracer",
      "module": "src.pokertool.correlation_id_middleware",
      "docstring": "Example helper for tracing database queries with correlation ID.",
      "bases": [],
      "methods": [
        "trace_query"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 231
    },
    {
      "id": "src.pokertool.correlation_id_middleware.get_correlation_id",
      "type": "function",
      "name": "get_correlation_id",
      "module": "src.pokertool.correlation_id_middleware",
      "signature": "def get_correlation_id() -> Optional[str]",
      "docstring": "Get the current correlation ID from context.\n\nReturns:\n    Current correlation ID or None if not set",
      "parameters": [],
      "return_type": "Optional[str]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "correlation_id_context.get"
      ],
      "raises": [],
      "line_number": 100
    },
    {
      "id": "src.pokertool.correlation_id_middleware.set_correlation_id",
      "type": "function",
      "name": "set_correlation_id",
      "module": "src.pokertool.correlation_id_middleware",
      "signature": "def set_correlation_id(correlation_id: str) -> None",
      "docstring": "Set the correlation ID in context (for testing or manual use).\n\nArgs:\n    correlation_id: Correlation ID to set",
      "parameters": [
        {
          "name": "correlation_id",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "None",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "correlation_id_context.set"
      ],
      "raises": [],
      "line_number": 110
    },
    {
      "id": "src.pokertool.correlation_id_middleware.with_correlation_id",
      "type": "function",
      "name": "with_correlation_id",
      "module": "src.pokertool.correlation_id_middleware",
      "signature": "def with_correlation_id(func: Callable) -> Callable",
      "docstring": "Decorator to ensure function has access to current correlation ID.\n\nUsage:\n    @with_correlation_id\n    async def process_data():\n        corr_id = get_correlation_id()\n        # Use correlation ID...",
      "parameters": [
        {
          "name": "func",
          "annotation": "Callable",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Callable",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "func"
      ],
      "raises": [],
      "line_number": 136
    },
    {
      "id": "src.pokertool.correlation_id_middleware.get_logger_with_correlation_id",
      "type": "function",
      "name": "get_logger_with_correlation_id",
      "module": "src.pokertool.correlation_id_middleware",
      "signature": "def get_logger_with_correlation_id(name: str) -> logging.Logger",
      "docstring": "Get a logger that automatically includes correlation ID in logs.\n\nArgs:\n    name: Logger name\n\nReturns:\n    Configured logger with correlation ID filter",
      "parameters": [
        {
          "name": "name",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "logging.Logger",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "logging.getLogger",
        "logger.addFilter",
        "CorrelationIdFilter"
      ],
      "raises": [],
      "line_number": 156
    },
    {
      "id": "src.pokertool.db_performance_monitor",
      "type": "module",
      "path": "src/pokertool/db_performance_monitor.py",
      "docstring": "Database Query Performance Monitoring\n======================================\n\nMonitors and logs database query performance to identify slow queries,\noptimize database operations, and track performance trends over time.\n\nFeatures:\n- Query execution time tracking\n- Slow query detection and logging\n- Query pattern analysis\n- Performance metrics collection\n- Automatic query optimization suggestions\n\nVersion: 86.5.0\nAuthor: PokerTool Development Team",
      "version": null,
      "author": null,
      "complexity": 43,
      "loc": 538,
      "dependencies": [
        "logging",
        "functools",
        "time",
        "__future__",
        "typing",
        "dataclasses",
        "collections",
        "datetime",
        "statistics",
        "threading"
      ]
    },
    {
      "id": "src.pokertool.db_performance_monitor.PerformanceConfig",
      "type": "class",
      "name": "PerformanceConfig",
      "module": "src.pokertool.db_performance_monitor",
      "docstring": "Configuration for database performance monitoring.",
      "bases": [],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 40
    },
    {
      "id": "src.pokertool.db_performance_monitor.QueryMetrics",
      "type": "class",
      "name": "QueryMetrics",
      "module": "src.pokertool.db_performance_monitor",
      "docstring": "Metrics for a single query execution.",
      "bases": [],
      "methods": [
        "is_slow",
        "is_very_slow"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 67
    },
    {
      "id": "src.pokertool.db_performance_monitor.QueryStats",
      "type": "class",
      "name": "QueryStats",
      "module": "src.pokertool.db_performance_monitor",
      "docstring": "Aggregated statistics for a query pattern.",
      "bases": [],
      "methods": [
        "update",
        "_calculate_stats"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 7,
      "line_number": 92
    },
    {
      "id": "src.pokertool.db_performance_monitor.DatabasePerformanceMonitor",
      "type": "class",
      "name": "DatabasePerformanceMonitor",
      "module": "src.pokertool.db_performance_monitor",
      "docstring": "Monitors database query performance and provides insights.\n\nUsage:\n    monitor = DatabasePerformanceMonitor()\n\n    # Decorate database methods\n    @monitor.track_query(\"SELECT\")\n    def execute_query(query):\n        ...\n\n    # Or use context manager\n    with monitor.track(\"SELECT\", \"get_user_by_id\"):\n        result = db.execute(query)\n\n    # Get performance report\n    report = monitor.get_performance_report()",
      "bases": [],
      "methods": [
        "__init__",
        "track_query",
        "track",
        "_get_next_id",
        "_record_metrics",
        "get_performance_report",
        "get_query_stats",
        "get_all_stats",
        "reset_stats",
        "cleanup_old_stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 28,
      "line_number": 151
    },
    {
      "id": "src.pokertool.db_performance_monitor._QueryTracker",
      "type": "class",
      "name": "_QueryTracker",
      "module": "src.pokertool.db_performance_monitor",
      "docstring": "Context manager for tracking individual queries.",
      "bases": [],
      "methods": [
        "__init__",
        "__enter__",
        "__exit__"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 3,
      "line_number": 421
    },
    {
      "id": "src.pokertool.db_performance_monitor.get_performance_report",
      "type": "function",
      "name": "get_performance_report",
      "module": "src.pokertool.db_performance_monitor",
      "signature": "def get_performance_report() -> Dict[str, Any]",
      "docstring": "Get performance report from global monitor.",
      "parameters": [],
      "return_type": "Dict[str, Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "performance_monitor.get_performance_report"
      ],
      "raises": [],
      "line_number": 475
    },
    {
      "id": "src.pokertool.db_performance_monitor.reset_performance_stats",
      "type": "function",
      "name": "reset_performance_stats",
      "module": "src.pokertool.db_performance_monitor",
      "signature": "def reset_performance_stats()",
      "docstring": "Reset global performance statistics.",
      "parameters": [],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "performance_monitor.reset_stats"
      ],
      "raises": [],
      "line_number": 480
    },
    {
      "id": "src.pokertool.db_performance_monitor.cleanup_old_performance_data",
      "type": "function",
      "name": "cleanup_old_performance_data",
      "module": "src.pokertool.db_performance_monitor",
      "signature": "def cleanup_old_performance_data(hours: int)",
      "docstring": "Clean up old performance data.",
      "parameters": [
        {
          "name": "hours",
          "annotation": "int",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "performance_monitor.cleanup_old_stats"
      ],
      "raises": [],
      "line_number": 485
    },
    {
      "id": "src.pokertool.leveling_war",
      "type": "module",
      "path": "src/pokertool/leveling_war.py",
      "docstring": "Leveling War Module\n\nAdvanced leveling war analysis and simulation for poker meta-game.\nAnalyzes iterative strategic thinking between players.\n\nPart of META-001: Meta-Game Optimizer",
      "version": null,
      "author": null,
      "complexity": 44,
      "loc": 327,
      "dependencies": [
        "typing",
        "dataclasses",
        "json",
        "enum"
      ]
    },
    {
      "id": "src.pokertool.leveling_war.ThinkingLevel",
      "type": "class",
      "name": "ThinkingLevel",
      "module": "src.pokertool.leveling_war",
      "docstring": "Levels of iterative thinking",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 16
    },
    {
      "id": "src.pokertool.leveling_war.LevelingOutcome",
      "type": "class",
      "name": "LevelingOutcome",
      "module": "src.pokertool.leveling_war",
      "docstring": "Outcome of a leveling war analysis",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 26
    },
    {
      "id": "src.pokertool.leveling_war.LevelEstimator",
      "type": "class",
      "name": "LevelEstimator",
      "module": "src.pokertool.leveling_war",
      "docstring": "Estimate opponent's thinking level",
      "bases": [],
      "methods": [
        "__init__",
        "_initialize_indicators",
        "estimate_level"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 8,
      "line_number": 35
    },
    {
      "id": "src.pokertool.leveling_war.StrategyEvolution",
      "type": "class",
      "name": "StrategyEvolution",
      "module": "src.pokertool.leveling_war",
      "docstring": "Track evolution of strategies in leveling war",
      "bases": [],
      "methods": [
        "__init__",
        "record_interaction",
        "detect_pattern",
        "suggest_evolution"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 9,
      "line_number": 81
    },
    {
      "id": "src.pokertool.leveling_war.CounterStrategyGenerator",
      "type": "class",
      "name": "CounterStrategyGenerator",
      "module": "src.pokertool.leveling_war",
      "docstring": "Generate counter-strategies for each level",
      "bases": [],
      "methods": [
        "generate_counters",
        "assess_counter_risk"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 4,
      "line_number": 130
    },
    {
      "id": "src.pokertool.leveling_war.LevelingWarSimulator",
      "type": "class",
      "name": "LevelingWarSimulator",
      "module": "src.pokertool.leveling_war",
      "docstring": "Simulate multi-iteration leveling wars",
      "bases": [],
      "methods": [
        "__init__",
        "analyze_situation",
        "simulate_iterations",
        "_calculate_matchup_ev",
        "_should_adapt"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 12,
      "line_number": 177
    },
    {
      "id": "src.pokertool.leveling_war.MetaGameTracker",
      "type": "class",
      "name": "MetaGameTracker",
      "module": "src.pokertool.leveling_war",
      "docstring": "Track meta-game developments over time",
      "bases": [],
      "methods": [
        "__init__",
        "record_game",
        "detect_meta_shift",
        "get_optimal_strategy"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 10,
      "line_number": 258
    },
    {
      "id": "src.pokertool.leveling_war.analyze_leveling_war",
      "type": "function",
      "name": "analyze_leveling_war",
      "module": "src.pokertool.leveling_war",
      "signature": "def analyze_leveling_war(hero_observations: List[str], villain_observations: List[str], stats: Dict) -> Dict",
      "docstring": "Quick analysis of leveling war situation",
      "parameters": [
        {
          "name": "hero_observations",
          "annotation": "List[str]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "villain_observations",
          "annotation": "List[str]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "stats",
          "annotation": "Dict",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Dict",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "LevelingWarSimulator",
        "simulator.analyze_situation"
      ],
      "raises": [],
      "line_number": 309
    },
    {
      "id": "src.pokertool.range_generator",
      "type": "module",
      "path": "src/pokertool/range_generator.py",
      "docstring": "Range Generator for Solver-Based Preflop Charts\n\nGenerates optimal preflop ranges for various situations using GTO solver principles.\nSupports 100bb deep ranges, ante adjustments, straddle adaptations, ICM adjustments,\nand multi-way pot ranges.\n\nPart of PREFLOP-001",
      "version": null,
      "author": null,
      "complexity": 53,
      "loc": 430,
      "dependencies": [
        "typing",
        "dataclasses",
        "json",
        "enum"
      ]
    },
    {
      "id": "src.pokertool.range_generator.Position",
      "type": "class",
      "name": "Position",
      "module": "src.pokertool.range_generator",
      "docstring": "Player positions",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 17
    },
    {
      "id": "src.pokertool.range_generator.Action",
      "type": "class",
      "name": "Action",
      "module": "src.pokertool.range_generator",
      "docstring": "Preflop actions",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 33
    },
    {
      "id": "src.pokertool.range_generator.RangeParameters",
      "type": "class",
      "name": "RangeParameters",
      "module": "src.pokertool.range_generator",
      "docstring": "Parameters for range generation",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 45
    },
    {
      "id": "src.pokertool.range_generator.HandRange",
      "type": "class",
      "name": "HandRange",
      "module": "src.pokertool.range_generator",
      "docstring": "Represents a hand range",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 59
    },
    {
      "id": "src.pokertool.range_generator.HandParser",
      "type": "class",
      "name": "HandParser",
      "module": "src.pokertool.range_generator",
      "docstring": "Parse and manipulate poker hand notations",
      "bases": [],
      "methods": [
        "expand_notation",
        "count_combos"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 22,
      "line_number": 67
    },
    {
      "id": "src.pokertool.range_generator.AnteAdjuster",
      "type": "class",
      "name": "AnteAdjuster",
      "module": "src.pokertool.range_generator",
      "docstring": "Adjust ranges based on ante",
      "bases": [],
      "methods": [
        "calculate_pot_odds_adjustment",
        "adjust_range"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 3,
      "line_number": 135
    },
    {
      "id": "src.pokertool.range_generator.StraddleAdapter",
      "type": "class",
      "name": "StraddleAdapter",
      "module": "src.pokertool.range_generator",
      "docstring": "Adapt ranges for straddle situations",
      "bases": [],
      "methods": [
        "adjust_for_straddle"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 172
    },
    {
      "id": "src.pokertool.range_generator.ICMAdjuster",
      "type": "class",
      "name": "ICMAdjuster",
      "module": "src.pokertool.range_generator",
      "docstring": "Adjust ranges based on ICM pressure",
      "bases": [],
      "methods": [
        "calculate_icm_adjustment",
        "adjust_range"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 4,
      "line_number": 195
    },
    {
      "id": "src.pokertool.range_generator.MultiWayAdjuster",
      "type": "class",
      "name": "MultiWayAdjuster",
      "module": "src.pokertool.range_generator",
      "docstring": "Adjust ranges for multi-way pots",
      "bases": [],
      "methods": [
        "calculate_multiway_adjustment",
        "adjust_range"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 240
    },
    {
      "id": "src.pokertool.range_generator.BaseRangeGenerator",
      "type": "class",
      "name": "BaseRangeGenerator",
      "module": "src.pokertool.range_generator",
      "docstring": "Generate base GTO ranges for 100bb",
      "bases": [],
      "methods": [
        "__init__",
        "_initialize_base_ranges",
        "_create_range",
        "get_base_range"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 6,
      "line_number": 274
    },
    {
      "id": "src.pokertool.range_generator.RangeGenerator",
      "type": "class",
      "name": "RangeGenerator",
      "module": "src.pokertool.range_generator",
      "docstring": "Main range generator with all adjustments",
      "bases": [],
      "methods": [
        "__init__",
        "generate_range",
        "export_range",
        "import_range"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 11,
      "line_number": 362
    },
    {
      "id": "src.pokertool.async_scraper_executor",
      "type": "module",
      "path": "src/pokertool/async_scraper_executor.py",
      "docstring": "Asynchronous Scraper Executor for PokerTool\n============================================\n\nEliminates GUI freezing by offloading heavy CV/OCR operations to background threads.\n\nFeatures:\n- Thread pool executor for parallel scraping operations\n- Non-blocking result retrieval with queue\n- Performance monitoring and metrics\n- Automatic frame skipping if queue backs up\n- Thread-safe operation with proper synchronization\n\nVersion: 1.0.0",
      "version": null,
      "author": null,
      "complexity": 31,
      "loc": 401,
      "dependencies": [
        "logging",
        "numpy",
        "time",
        "__future__",
        "queue",
        "typing",
        "dataclasses",
        "concurrent",
        "datetime",
        "threading"
      ]
    },
    {
      "id": "src.pokertool.async_scraper_executor.PerformanceMetrics",
      "type": "class",
      "name": "PerformanceMetrics",
      "module": "src.pokertool.async_scraper_executor",
      "docstring": "Performance metrics for scraper execution.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 36
    },
    {
      "id": "src.pokertool.async_scraper_executor.ScrapeResult",
      "type": "class",
      "name": "ScrapeResult",
      "module": "src.pokertool.async_scraper_executor",
      "docstring": "Result of a scraping operation.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 54
    },
    {
      "id": "src.pokertool.async_scraper_executor.AsyncScraperExecutor",
      "type": "class",
      "name": "AsyncScraperExecutor",
      "module": "src.pokertool.async_scraper_executor",
      "docstring": "Asynchronous executor for heavy scraping operations.\n\nOffloads analyze_table() and other CV/OCR operations to background threads\nto prevent GUI freezing.",
      "bases": [],
      "methods": [
        "__init__",
        "submit_analyze_table",
        "_execute_analyze_table",
        "get_result",
        "_update_metrics",
        "get_metrics",
        "reset_metrics",
        "shutdown",
        "__enter__",
        "__exit__"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 27,
      "line_number": 63
    },
    {
      "id": "src.pokertool.async_scraper_executor.get_async_executor",
      "type": "function",
      "name": "get_async_executor",
      "module": "src.pokertool.async_scraper_executor",
      "signature": "def get_async_executor(max_workers: int, max_queue_size: int) -> AsyncScraperExecutor",
      "docstring": "Get the global async scraper executor instance.",
      "parameters": [
        {
          "name": "max_workers",
          "annotation": "int",
          "default": "4",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "max_queue_size",
          "annotation": "int",
          "default": "3",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "AsyncScraperExecutor",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "AsyncScraperExecutor"
      ],
      "raises": [],
      "line_number": 334
    },
    {
      "id": "src.pokertool.async_scraper_executor.shutdown_async_executor",
      "type": "function",
      "name": "shutdown_async_executor",
      "module": "src.pokertool.async_scraper_executor",
      "signature": "def shutdown_async_executor()",
      "docstring": "Shutdown the global async executor.",
      "parameters": [],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "_executor.shutdown"
      ],
      "raises": [],
      "line_number": 348
    },
    {
      "id": "src.pokertool.multi_table_support",
      "type": "module",
      "path": "src/pokertool/multi_table_support.py",
      "docstring": "PokerTool Multi Table Support Module\n======================================\n\nThis module provides functionality for multi table support operations\nwithin the PokerTool application ecosystem.\n\nModule: pokertool.multi_table_support\nVersion: 20.0.0\nLast Modified: 2025-09-29\nAuthor: PokerTool Development Team\nLicense: MIT\n\nDependencies:\n    - See module imports for specific dependencies\n    - Python 3.10+ required\n\nChange Log:\n    - v28.0.0 (2025-09-29): Enhanced documentation\n    - v19.0.0 (2025-09-18): Bug fixes and improvements\n    - v18.0.0 (2025-09-15): Initial implementation",
      "version": "'20.0.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 180,
      "loc": 1225,
      "dependencies": [
        "logging",
        "pathlib",
        "time",
        "typing",
        "dataclasses",
        "collections",
        "json",
        "enum",
        "os",
        "threading"
      ]
    },
    {
      "id": "src.pokertool.multi_table_support.TableLayout",
      "type": "class",
      "name": "TableLayout",
      "module": "src.pokertool.multi_table_support",
      "docstring": "Predefined table layout configurations.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 140
    },
    {
      "id": "src.pokertool.multi_table_support.TableState",
      "type": "class",
      "name": "TableState",
      "module": "src.pokertool.multi_table_support",
      "docstring": "State of a poker table.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 150
    },
    {
      "id": "src.pokertool.multi_table_support.TablePriority",
      "type": "class",
      "name": "TablePriority",
      "module": "src.pokertool.multi_table_support",
      "docstring": "Priority levels for table actions.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 159
    },
    {
      "id": "src.pokertool.multi_table_support.TableWindow",
      "type": "class",
      "name": "TableWindow",
      "module": "src.pokertool.multi_table_support",
      "docstring": "Represents a single poker table window.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 168
    },
    {
      "id": "src.pokertool.multi_table_support.HotkeyAction",
      "type": "class",
      "name": "HotkeyAction",
      "module": "src.pokertool.multi_table_support",
      "docstring": "Represents a hotkey action.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 200
    },
    {
      "id": "src.pokertool.multi_table_support.TableManager",
      "type": "class",
      "name": "TableManager",
      "module": "src.pokertool.multi_table_support",
      "docstring": "Central manager for multi-table poker sessions.\nHandles table tracking, focus management, and coordination.",
      "bases": [],
      "methods": [
        "__init__",
        "_load_config",
        "_setup_default_hotkeys",
        "start",
        "stop",
        "_update_loop",
        "add_table",
        "remove_table",
        "_update_table",
        "_update_table_priorities",
        "_handle_auto_focus",
        "_check_action_timeouts",
        "focus_table",
        "focus_next_table",
        "focus_previous_table",
        "focus_table_by_index",
        "arrange_tables",
        "tile_all_tables",
        "_tile_tables",
        "_cascade_tables",
        "_stack_tables",
        "_apply_custom_layout",
        "_set_window_position",
        "_update_table_statistics",
        "_extract_big_blind",
        "register_hotkey",
        "_handle_hotkey",
        "_enable_hotkeys",
        "_disable_hotkeys",
        "execute_action_current_table",
        "execute_action_all_tables",
        "sit_out_all_tables",
        "toggle_auto_focus",
        "get_table_settings",
        "set_table_settings",
        "save_layout",
        "load_layout",
        "get_session_statistics",
        "_count_tables_by_state",
        "_count_tables_by_priority",
        "export_hotkeys",
        "import_hotkeys"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 164,
      "line_number": 210
    },
    {
      "id": "src.pokertool.multi_table_support.get_table_manager",
      "type": "function",
      "name": "get_table_manager",
      "module": "src.pokertool.multi_table_support",
      "signature": "def get_table_manager() -> TableManager",
      "docstring": "Get the global table manager instance.",
      "parameters": [],
      "return_type": "TableManager",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "TableManager"
      ],
      "raises": [],
      "line_number": 1075
    },
    {
      "id": "src.pokertool.multi_table_support.add_poker_table",
      "type": "function",
      "name": "add_poker_table",
      "module": "src.pokertool.multi_table_support",
      "signature": "def add_poker_table(window_handle: Any, site_name: str, table_name: str, game_type: str, stakes: str) -> str",
      "docstring": "Convenience function to add a poker table.",
      "parameters": [
        {
          "name": "window_handle",
          "annotation": "Any",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "site_name",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "table_name",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "game_type",
          "annotation": "str",
          "default": "'cash'",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "stakes",
          "annotation": "str",
          "default": "''",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_table_manager",
        "manager.add_table"
      ],
      "raises": [],
      "line_number": 1083
    },
    {
      "id": "src.pokertool.multi_table_support.remove_poker_table",
      "type": "function",
      "name": "remove_poker_table",
      "module": "src.pokertool.multi_table_support",
      "signature": "def remove_poker_table(table_id: str)",
      "docstring": "Convenience function to remove a poker table.",
      "parameters": [
        {
          "name": "table_id",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_table_manager",
        "manager.remove_table"
      ],
      "raises": [],
      "line_number": 1089
    },
    {
      "id": "src.pokertool.multi_table_support.tile_tables",
      "type": "function",
      "name": "tile_tables",
      "module": "src.pokertool.multi_table_support",
      "signature": "def tile_tables()",
      "docstring": "Convenience function to tile all tables.",
      "parameters": [],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_table_manager",
        "manager.tile_all_tables"
      ],
      "raises": [],
      "line_number": 1094
    },
    {
      "id": "src.pokertool.multi_table_support.focus_next",
      "type": "function",
      "name": "focus_next",
      "module": "src.pokertool.multi_table_support",
      "signature": "def focus_next()",
      "docstring": "Convenience function to focus next table.",
      "parameters": [],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_table_manager",
        "manager.focus_next_table"
      ],
      "raises": [],
      "line_number": 1099
    },
    {
      "id": "src.pokertool.multi_table_support.get_active_tables",
      "type": "function",
      "name": "get_active_tables",
      "module": "src.pokertool.multi_table_support",
      "signature": "def get_active_tables() -> List[TableWindow]",
      "docstring": "Get all active tables.",
      "parameters": [],
      "return_type": "List[TableWindow]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_table_manager",
        "manager.tables.values"
      ],
      "raises": [],
      "line_number": 1104
    },
    {
      "id": "src.pokertool.multi_table_support.get_tables_needing_action",
      "type": "function",
      "name": "get_tables_needing_action",
      "module": "src.pokertool.multi_table_support",
      "signature": "def get_tables_needing_action() -> List[TableWindow]",
      "docstring": "Get tables that need action.",
      "parameters": [],
      "return_type": "List[TableWindow]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_table_manager",
        "sorted",
        "manager.tables.values"
      ],
      "raises": [],
      "line_number": 1110
    },
    {
      "id": "src.pokertool.multi_table_support.setup_custom_hotkey",
      "type": "function",
      "name": "setup_custom_hotkey",
      "module": "src.pokertool.multi_table_support",
      "signature": "def setup_custom_hotkey(name: str, key_combination: str, callback: Callable, description: str, cooldown: float)",
      "docstring": "Setup a custom hotkey.",
      "parameters": [
        {
          "name": "name",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "key_combination",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "callback",
          "annotation": "Callable",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "description",
          "annotation": "str",
          "default": "''",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "cooldown",
          "annotation": "float",
          "default": "0.0",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_table_manager",
        "HotkeyAction",
        "manager.register_hotkey"
      ],
      "raises": [],
      "line_number": 1118
    },
    {
      "id": "src.pokertool.multi_table_support.save_table_session",
      "type": "function",
      "name": "save_table_session",
      "module": "src.pokertool.multi_table_support",
      "signature": "def save_table_session(filename: str) -> bool",
      "docstring": "Save complete table session data.",
      "parameters": [
        {
          "name": "filename",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "bool",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 4,
      "calls": [
        "get_table_manager",
        "time.time",
        "manager.get_session_statistics",
        "manager.tables.items",
        "open",
        "json.dump",
        "logger.info",
        "logger.error"
      ],
      "raises": [],
      "line_number": 1131
    },
    {
      "id": "src.pokertool.multi_table_support.load_table_session",
      "type": "function",
      "name": "load_table_session",
      "module": "src.pokertool.multi_table_support",
      "signature": "def load_table_session(filename: str) -> bool",
      "docstring": "Load table session data.",
      "parameters": [
        {
          "name": "filename",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "bool",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "get_table_manager",
        "open",
        "json.load",
        "manager.settings.update",
        "session_data.get",
        "TableLayout",
        "session_data.get",
        "logger.info",
        "logger.error"
      ],
      "raises": [],
      "line_number": 1165
    },
    {
      "id": "src.pokertool.blocker_effects",
      "type": "module",
      "path": "src/pokertool/blocker_effects.py",
      "docstring": "Blocker Effects Analysis Module\n\nAdvanced blocker effects calculation for poker decision-making,\nincluding card removal analysis, equity adjustments, and bluffing opportunities.\n\nPart of MERGE-001: Advanced Range Merging Algorithm",
      "version": null,
      "author": null,
      "complexity": 69,
      "loc": 366,
      "dependencies": [
        "typing",
        "dataclasses",
        "enum"
      ]
    },
    {
      "id": "src.pokertool.blocker_effects.BlockerType",
      "type": "class",
      "name": "BlockerType",
      "module": "src.pokertool.blocker_effects",
      "docstring": "Types of blocker effects",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 15
    },
    {
      "id": "src.pokertool.blocker_effects.BlockerStrength",
      "type": "class",
      "name": "BlockerStrength",
      "module": "src.pokertool.blocker_effects",
      "docstring": "Quantifies blocker strength for a hand",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 26
    },
    {
      "id": "src.pokertool.blocker_effects.BoardTextureAnalyzer",
      "type": "class",
      "name": "BoardTextureAnalyzer",
      "module": "src.pokertool.blocker_effects",
      "docstring": "Analyze board texture for blocker potential",
      "bases": [],
      "methods": [
        "__init__",
        "parse_board",
        "get_flush_draw_present",
        "get_straight_draw_present",
        "identify_potential_nuts"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 22,
      "line_number": 37
    },
    {
      "id": "src.pokertool.blocker_effects.EquityAdjuster",
      "type": "class",
      "name": "EquityAdjuster",
      "module": "src.pokertool.blocker_effects",
      "docstring": "Adjust equity calculations based on blocker effects",
      "bases": [],
      "methods": [
        "__init__",
        "calculate_equity_adjustment",
        "calculate_implied_odds_adjustment"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 6,
      "line_number": 120
    },
    {
      "id": "src.pokertool.blocker_effects.BluffSelector",
      "type": "class",
      "name": "BluffSelector",
      "module": "src.pokertool.blocker_effects",
      "docstring": "Select optimal bluffing candidates based on blockers",
      "bases": [],
      "methods": [
        "__init__",
        "evaluate_bluff_candidate",
        "rank_bluff_candidates",
        "select_optimal_bluffs"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 30,
      "line_number": 159
    },
    {
      "id": "src.pokertool.blocker_effects.RangeBlockerAnalysis",
      "type": "class",
      "name": "RangeBlockerAnalysis",
      "module": "src.pokertool.blocker_effects",
      "docstring": "Analyze how a range blocks opponent's range",
      "bases": [],
      "methods": [
        "__init__",
        "analyze_range_blockers",
        "compare_blocker_strategies"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 8,
      "line_number": 281
    },
    {
      "id": "src.pokertool.blocker_effects.quick_blocker_eval",
      "type": "function",
      "name": "quick_blocker_eval",
      "module": "src.pokertool.blocker_effects",
      "signature": "def quick_blocker_eval(hand: str, board: str, villain_value_hands: List[str]) -> float",
      "docstring": "Quick blocker evaluation (0-1 score)",
      "parameters": [
        {
          "name": "hand",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "board",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "villain_value_hands",
          "annotation": "List[str]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "float",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "BluffSelector",
        "selector.evaluate_bluff_candidate"
      ],
      "raises": [],
      "line_number": 345
    },
    {
      "id": "src.pokertool.blocker_effects.get_best_bluff_combos",
      "type": "function",
      "name": "get_best_bluff_combos",
      "module": "src.pokertool.blocker_effects",
      "signature": "def get_best_bluff_combos(candidate_hands: List[str], board: str, villain_range: List[str], count: int) -> List[str]",
      "docstring": "Get the best bluff combos from a list of candidates",
      "parameters": [
        {
          "name": "candidate_hands",
          "annotation": "List[str]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "board",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "villain_range",
          "annotation": "List[str]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "count",
          "annotation": "int",
          "default": "5",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "List[str]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "BluffSelector",
        "selector.select_optimal_bluffs"
      ],
      "raises": [],
      "line_number": 352
    },
    {
      "id": "src.pokertool.blocker_effects.calculate_blocker_equity_boost",
      "type": "function",
      "name": "calculate_blocker_equity_boost",
      "module": "src.pokertool.blocker_effects",
      "signature": "def calculate_blocker_equity_boost(hand: str, board: str, base_equity: float) -> float",
      "docstring": "Calculate equity boost from blockers",
      "parameters": [
        {
          "name": "hand",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "board",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "base_equity",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "float",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "BluffSelector",
        "EquityAdjuster",
        "selector.evaluate_bluff_candidate",
        "adjuster.calculate_equity_adjustment"
      ],
      "raises": [],
      "line_number": 359
    },
    {
      "id": "src.pokertool.hand_history_db",
      "type": "module",
      "path": "src/pokertool/hand_history_db.py",
      "docstring": "Hand History Database for PokerTool\n====================================\n\nCaptures and stores complete hand histories including:\n- Players and positions\n- Actions and betting\n- Board cards and hole cards\n- Results and winners\n- Pot sizes and stack sizes\n\nVersion: 1.0.0",
      "version": null,
      "author": null,
      "complexity": 56,
      "loc": 554,
      "dependencies": [
        "logging",
        "sqlite3",
        "pathlib",
        "__future__",
        "typing",
        "dataclasses",
        "json",
        "enum",
        "datetime"
      ]
    },
    {
      "id": "src.pokertool.hand_history_db.GameStage",
      "type": "class",
      "name": "GameStage",
      "module": "src.pokertool.hand_history_db",
      "docstring": "Stages of a poker hand.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 32
    },
    {
      "id": "src.pokertool.hand_history_db.ActionType",
      "type": "class",
      "name": "ActionType",
      "module": "src.pokertool.hand_history_db",
      "docstring": "Types of player actions.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 41
    },
    {
      "id": "src.pokertool.hand_history_db.PlayerInfo",
      "type": "class",
      "name": "PlayerInfo",
      "module": "src.pokertool.hand_history_db",
      "docstring": "Information about a player in a hand.",
      "bases": [],
      "methods": [
        "to_dict",
        "from_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 52
    },
    {
      "id": "src.pokertool.hand_history_db.PlayerAction",
      "type": "class",
      "name": "PlayerAction",
      "module": "src.pokertool.hand_history_db",
      "docstring": "A single action by a player.",
      "bases": [],
      "methods": [
        "to_dict",
        "from_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 72
    },
    {
      "id": "src.pokertool.hand_history_db.HandHistory",
      "type": "class",
      "name": "HandHistory",
      "module": "src.pokertool.hand_history_db",
      "docstring": "Complete history of a single poker hand.",
      "bases": [],
      "methods": [
        "to_dict",
        "from_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 101
    },
    {
      "id": "src.pokertool.hand_history_db.HandHistoryDatabase",
      "type": "class",
      "name": "HandHistoryDatabase",
      "module": "src.pokertool.hand_history_db",
      "docstring": "SQLite database for storing hand histories.",
      "bases": [],
      "methods": [
        "__init__",
        "_init_database",
        "save_hand",
        "get_hand",
        "get_recent_hands",
        "get_statistics",
        "get_hands_by_date_range",
        "delete_hand",
        "clear_all_hands"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 48,
      "line_number": 177
    },
    {
      "id": "src.pokertool.hand_history_db.get_hand_history_db",
      "type": "function",
      "name": "get_hand_history_db",
      "module": "src.pokertool.hand_history_db",
      "signature": "def get_hand_history_db() -> HandHistoryDatabase",
      "docstring": "Get the global hand history database instance.",
      "parameters": [],
      "return_type": "HandHistoryDatabase",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "HandHistoryDatabase"
      ],
      "raises": [],
      "line_number": 503
    },
    {
      "id": "src.pokertool.threading",
      "type": "module",
      "path": "src/pokertool/threading.py",
      "docstring": "Threading utilities for PokerTool.\nProvides thread-safe utilities and helpers for concurrent operations.",
      "version": null,
      "author": null,
      "complexity": 56,
      "loc": 250,
      "dependencies": [
        "logging",
        "functools",
        "weakref",
        "time",
        "typing",
        "concurrent",
        "enum",
        "threading"
      ]
    },
    {
      "id": "src.pokertool.threading.ThreadSafeDict",
      "type": "class",
      "name": "ThreadSafeDict",
      "module": "src.pokertool.threading",
      "docstring": "A thread-safe dictionary implementation.",
      "bases": [],
      "methods": [
        "__init__",
        "__getitem__",
        "__setitem__",
        "__delitem__",
        "__contains__",
        "get",
        "keys",
        "values",
        "items",
        "clear"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 19,
      "line_number": 25
    },
    {
      "id": "src.pokertool.threading.ThreadSafeCounter",
      "type": "class",
      "name": "ThreadSafeCounter",
      "module": "src.pokertool.threading",
      "docstring": "A thread-safe counter.",
      "bases": [],
      "methods": [
        "__init__",
        "increment",
        "decrement",
        "value"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 7,
      "line_number": 68
    },
    {
      "id": "src.pokertool.threading.TaskPriority",
      "type": "class",
      "name": "TaskPriority",
      "module": "src.pokertool.threading",
      "docstring": "Task priority levels for the thread pool.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 91
    },
    {
      "id": "src.pokertool.threading.AsyncCallback",
      "type": "class",
      "name": "AsyncCallback",
      "module": "src.pokertool.threading",
      "docstring": "Manages asynchronous callbacks.",
      "bases": [],
      "methods": [
        "__init__",
        "register",
        "unregister",
        "trigger"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 10,
      "line_number": 170
    },
    {
      "id": "src.pokertool.threading.get_thread_pool",
      "type": "function",
      "name": "get_thread_pool",
      "module": "src.pokertool.threading",
      "signature": "def get_thread_pool(max_workers: int) -> ThreadPoolExecutor",
      "docstring": "Get or create the global thread pool.",
      "parameters": [
        {
          "name": "max_workers",
          "annotation": "int",
          "default": "4",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "ThreadPoolExecutor",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "ThreadPoolExecutor",
        "logger.debug"
      ],
      "raises": [],
      "line_number": 99
    },
    {
      "id": "src.pokertool.threading.shutdown_thread_pool",
      "type": "function",
      "name": "shutdown_thread_pool",
      "module": "src.pokertool.threading",
      "signature": "def shutdown_thread_pool(wait: bool) -> None",
      "docstring": "Shutdown the global thread pool.",
      "parameters": [
        {
          "name": "wait",
          "annotation": "bool",
          "default": "True",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "None",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "_thread_pool.shutdown",
        "logger.debug"
      ],
      "raises": [],
      "line_number": 113
    },
    {
      "id": "src.pokertool.threading.run_in_thread",
      "type": "function",
      "name": "run_in_thread",
      "module": "src.pokertool.threading",
      "signature": "def run_in_thread(func: Callable, args, kwargs) -> Future",
      "docstring": "Run a function in the thread pool.",
      "parameters": [
        {
          "name": "func",
          "annotation": "Callable",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "args",
          "annotation": null,
          "default": null,
          "kind": "VAR_POSITIONAL"
        },
        {
          "name": "kwargs",
          "annotation": null,
          "default": null,
          "kind": "VAR_KEYWORD"
        }
      ],
      "return_type": "Future",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_thread_pool",
        "pool.submit"
      ],
      "raises": [],
      "line_number": 123
    },
    {
      "id": "src.pokertool.threading.thread_safe",
      "type": "function",
      "name": "thread_safe",
      "module": "src.pokertool.threading",
      "signature": "def thread_safe(func: Callable) -> Callable",
      "docstring": "Decorator to make a function thread-safe using a lock.",
      "parameters": [
        {
          "name": "func",
          "annotation": "Callable",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Callable",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "threading.RLock",
        "func",
        "functools.wraps"
      ],
      "raises": [],
      "line_number": 128
    },
    {
      "id": "src.pokertool.threading.with_timeout",
      "type": "function",
      "name": "with_timeout",
      "module": "src.pokertool.threading",
      "signature": "def with_timeout(timeout: float)",
      "docstring": "Decorator to add timeout to a function.",
      "parameters": [
        {
          "name": "timeout",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 4,
      "calls": [
        "func",
        "threading.Thread",
        "thread.start",
        "thread.join",
        "thread.is_alive",
        "logger.warning",
        "TimeoutError",
        "functools.wraps"
      ],
      "raises": [
        "TimeoutError"
      ],
      "line_number": 139
    },
    {
      "id": "src.pokertool.threading.register_callback",
      "type": "function",
      "name": "register_callback",
      "module": "src.pokertool.threading",
      "signature": "def register_callback(event: str, callback: Callable) -> None",
      "docstring": "Register a global callback.",
      "parameters": [
        {
          "name": "event",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "callback",
          "annotation": "Callable",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "None",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "_callback_manager.register"
      ],
      "raises": [],
      "line_number": 205
    },
    {
      "id": "src.pokertool.threading.trigger_callbacks",
      "type": "function",
      "name": "trigger_callbacks",
      "module": "src.pokertool.threading",
      "signature": "def trigger_callbacks(event: str, args, kwargs) -> List[Future]",
      "docstring": "Trigger global callbacks.",
      "parameters": [
        {
          "name": "event",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "args",
          "annotation": null,
          "default": null,
          "kind": "VAR_POSITIONAL"
        },
        {
          "name": "kwargs",
          "annotation": null,
          "default": null,
          "kind": "VAR_KEYWORD"
        }
      ],
      "return_type": "List[Future]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "_callback_manager.trigger"
      ],
      "raises": [],
      "line_number": 209
    },
    {
      "id": "src.pokertool.threading.get_thread_local",
      "type": "function",
      "name": "get_thread_local",
      "module": "src.pokertool.threading",
      "signature": "def get_thread_local(key: str, default: Any) -> Any",
      "docstring": "Get a value from thread-local storage.",
      "parameters": [
        {
          "name": "key",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "default",
          "annotation": "Any",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Any",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "getattr"
      ],
      "raises": [],
      "line_number": 214
    },
    {
      "id": "src.pokertool.threading.set_thread_local",
      "type": "function",
      "name": "set_thread_local",
      "module": "src.pokertool.threading",
      "signature": "def set_thread_local(key: str, value: Any) -> None",
      "docstring": "Set a value in thread-local storage.",
      "parameters": [
        {
          "name": "key",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "value",
          "annotation": "Any",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "None",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "setattr"
      ],
      "raises": [],
      "line_number": 218
    },
    {
      "id": "src.pokertool.threading.clear_thread_local",
      "type": "function",
      "name": "clear_thread_local",
      "module": "src.pokertool.threading",
      "signature": "def clear_thread_local() -> None",
      "docstring": "Clear all thread-local storage.",
      "parameters": [],
      "return_type": "None",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "list",
        "keys",
        "vars",
        "delattr"
      ],
      "raises": [],
      "line_number": 222
    },
    {
      "id": "src.pokertool.threading.cleanup_threading",
      "type": "function",
      "name": "cleanup_threading",
      "module": "src.pokertool.threading",
      "signature": "def cleanup_threading() -> None",
      "docstring": "Clean up threading resources.",
      "parameters": [],
      "return_type": "None",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "shutdown_thread_pool",
        "clear_thread_local"
      ],
      "raises": [],
      "line_number": 228
    },
    {
      "id": "src.pokertool.error_handling",
      "type": "module",
      "path": "src/pokertool/error_handling.py",
      "docstring": null,
      "version": "'20.0.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 25,
      "loc": 284,
      "dependencies": [
        "logging",
        "functools",
        "sys",
        "time",
        "__future__",
        "typing",
        "contextlib"
      ]
    },
    {
      "id": "src.pokertool.error_handling.SecurityError",
      "type": "class",
      "name": "SecurityError",
      "module": "src.pokertool.error_handling",
      "docstring": "Raised when a security violation is detected.",
      "bases": [
        "Exception"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 113
    },
    {
      "id": "src.pokertool.error_handling.CircuitBreaker",
      "type": "class",
      "name": "CircuitBreaker",
      "module": "src.pokertool.error_handling",
      "docstring": "Circuit breaker pattern implementation for handling repeated failures.",
      "bases": [],
      "methods": [
        "__init__",
        "call",
        "reset"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 8,
      "line_number": 242
    },
    {
      "id": "src.pokertool.error_handling.sanitize_input",
      "type": "function",
      "name": "sanitize_input",
      "module": "src.pokertool.error_handling",
      "signature": "def sanitize_input(input_str: str, max_length: int, allowed_chars: str) -> str",
      "docstring": "Sanitize user input to prevent injection attacks.\n\nArgs:\n    input_str: The input string to sanitize\n    max_length: Maximum allowed length\n    allowed_chars: String of allowed characters (None for basic alphanumeric + spaces)\n\nReturns:\n    Sanitized string\n\nRaises:\n    ValueError: If input is invalid or too long",
      "parameters": [
        {
          "name": "input_str",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "max_length",
          "annotation": "int",
          "default": "1000",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "allowed_chars",
          "annotation": "str",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 7,
      "calls": [
        "isinstance",
        "ValueError",
        "len",
        "ValueError",
        "len",
        "sanitized.replace",
        "pattern.upper",
        "sanitized.replace",
        "pattern.lower",
        "sanitized.replace",
        "set",
        "join",
        "set",
        "set",
        "log.warning",
        "char_filtered.strip"
      ],
      "raises": [
        "ValueError",
        "ValueError"
      ],
      "line_number": 117
    },
    {
      "id": "src.pokertool.error_handling.retry_on_failure",
      "type": "function",
      "name": "retry_on_failure",
      "module": "src.pokertool.error_handling",
      "signature": "def retry_on_failure(max_retries: int, delay: float, backoff: float)",
      "docstring": "Decorator to retry function calls on failure with exponential backoff.\n\nArgs:\n    max_retries: Maximum number of retry attempts\n    delay: Initial delay between retries in seconds\n    backoff: Multiplier for delay after each retry",
      "parameters": [
        {
          "name": "max_retries",
          "annotation": "int",
          "default": "3",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "delay",
          "annotation": "float",
          "default": "1.0",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "backoff",
          "annotation": "float",
          "default": "2.0",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 4,
      "calls": [
        "range",
        "func",
        "log.warning",
        "time.sleep",
        "log.error",
        "wraps"
      ],
      "raises": [
        "last_exception"
      ],
      "line_number": 170
    },
    {
      "id": "src.pokertool.error_handling.run_safely",
      "type": "function",
      "name": "run_safely",
      "module": "src.pokertool.error_handling",
      "signature": "def run_safely(fn: Callable, args, kwargs) -> int",
      "docstring": "Run a callable and catch all exceptions, logging a concise error.\nReturn process exit code (0 on success, 1 on failure).",
      "parameters": [
        {
          "name": "fn",
          "annotation": "Callable",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "args",
          "annotation": null,
          "default": null,
          "kind": "VAR_POSITIONAL"
        },
        {
          "name": "kwargs",
          "annotation": null,
          "default": null,
          "kind": "VAR_KEYWORD"
        }
      ],
      "return_type": "int",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 4,
      "calls": [
        "fn",
        "isinstance",
        "int",
        "isinstance",
        "int",
        "log_exception",
        "log.exception",
        "print"
      ],
      "raises": [],
      "line_number": 206
    },
    {
      "id": "src.pokertool.error_handling.db_guard",
      "type": "function",
      "name": "db_guard",
      "module": "src.pokertool.error_handling",
      "signature": "def db_guard(desc: str) -> Iterator[None]",
      "docstring": "Wrap short DB operations with error handling and logging.\n\nExample:\n    with db_guard('saving decision'):\n        storage.save_decision(...)",
      "parameters": [
        {
          "name": "desc",
          "annotation": "str",
          "default": "'DB operation'",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Iterator[None]",
      "decorators": [
        "contextmanager"
      ],
      "is_async": false,
      "is_generator": true,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "log.exception"
      ],
      "raises": [],
      "line_number": 228
    },
    {
      "id": "src.pokertool.structured_logger",
      "type": "module",
      "path": "src/pokertool/structured_logger.py",
      "docstring": "Structured Logging Module\n==========================\n\nJSON-based structured logging for better log parsing, analysis, and monitoring.\n\nModule: pokertool.structured_logger\nVersion: 1.0.0",
      "version": null,
      "author": null,
      "complexity": 28,
      "loc": 340,
      "dependencies": [
        "logging",
        "sys",
        "traceback",
        "typing",
        "json",
        "enum",
        "datetime",
        "os"
      ]
    },
    {
      "id": "src.pokertool.structured_logger.LogLevel",
      "type": "class",
      "name": "LogLevel",
      "module": "src.pokertool.structured_logger",
      "docstring": "Log levels",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 24
    },
    {
      "id": "src.pokertool.structured_logger.JSONFormatter",
      "type": "class",
      "name": "JSONFormatter",
      "module": "src.pokertool.structured_logger",
      "docstring": "Custom JSON formatter for structured logging",
      "bases": [
        "logging.Formatter"
      ],
      "methods": [
        "__init__",
        "format"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 7,
      "line_number": 33
    },
    {
      "id": "src.pokertool.structured_logger.StructuredLogger",
      "type": "class",
      "name": "StructuredLogger",
      "module": "src.pokertool.structured_logger",
      "docstring": "Structured logger with JSON output and contextual information",
      "bases": [],
      "methods": [
        "__init__",
        "add_context",
        "clear_context",
        "_log_with_context",
        "debug",
        "info",
        "warning",
        "error",
        "critical",
        "log_event",
        "log_metric",
        "log_duration"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 15,
      "line_number": 86
    },
    {
      "id": "src.pokertool.structured_logger.get_logger",
      "type": "function",
      "name": "get_logger",
      "module": "src.pokertool.structured_logger",
      "signature": "def get_logger(name: str, service_name: str, level: LogLevel) -> StructuredLogger",
      "docstring": "Get or create structured logger",
      "parameters": [
        {
          "name": "name",
          "annotation": "str",
          "default": "'pokertool'",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "service_name",
          "annotation": "str",
          "default": "'pokertool'",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "level",
          "annotation": "LogLevel",
          "default": "LogLevel.INFO",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "StructuredLogger",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "os.makedirs",
        "os.path.join",
        "StructuredLogger"
      ],
      "raises": [],
      "line_number": 242
    },
    {
      "id": "src.pokertool.structured_logger.setup_logging",
      "type": "function",
      "name": "setup_logging",
      "module": "src.pokertool.structured_logger",
      "signature": "def setup_logging(service_name: str, level: LogLevel, log_file: Optional[str])",
      "docstring": "Setup global structured logging\n\nArgs:\n    service_name: Name of the service\n    level: Default log level\n    log_file: Optional log file path",
      "parameters": [
        {
          "name": "service_name",
          "annotation": "str",
          "default": "'pokertool'",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "level",
          "annotation": "LogLevel",
          "default": "LogLevel.INFO",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "log_file",
          "annotation": "Optional[str]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "StructuredLogger"
      ],
      "raises": [],
      "line_number": 267
    },
    {
      "id": "src.pokertool.structured_logger.log_api_request",
      "type": "function",
      "name": "log_api_request",
      "module": "src.pokertool.structured_logger",
      "signature": "def log_api_request(endpoint: str, method: str, status_code: int, duration_ms: float, kwargs)",
      "docstring": "Log API request",
      "parameters": [
        {
          "name": "endpoint",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "method",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "status_code",
          "annotation": "int",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "duration_ms",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "kwargs",
          "annotation": null,
          "default": null,
          "kind": "VAR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_logger",
        "logger.log_event"
      ],
      "raises": [],
      "line_number": 293
    },
    {
      "id": "src.pokertool.structured_logger.log_ml_prediction",
      "type": "function",
      "name": "log_ml_prediction",
      "module": "src.pokertool.structured_logger",
      "signature": "def log_ml_prediction(model_name: str, prediction_time_ms: float, confidence: float, kwargs)",
      "docstring": "Log ML prediction",
      "parameters": [
        {
          "name": "model_name",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "prediction_time_ms",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "confidence",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "kwargs",
          "annotation": null,
          "default": null,
          "kind": "VAR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_logger",
        "logger.log_event"
      ],
      "raises": [],
      "line_number": 313
    },
    {
      "id": "src.pokertool.structured_logger.log_error",
      "type": "function",
      "name": "log_error",
      "module": "src.pokertool.structured_logger",
      "signature": "def log_error(message: str, error: Exception, kwargs)",
      "docstring": "Log error with exception info",
      "parameters": [
        {
          "name": "message",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "error",
          "annotation": "Exception",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "kwargs",
          "annotation": null,
          "default": null,
          "kind": "VAR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_logger",
        "logger.error",
        "type",
        "str"
      ],
      "raises": [],
      "line_number": 331
    },
    {
      "id": "src.pokertool.api",
      "type": "module",
      "path": "src/pokertool/api.py",
      "docstring": "PokerTool RESTful API Module\n=============================\n\nThis module provides a comprehensive RESTful API for external integration\nwith the PokerTool application. It includes endpoints for hand analysis,\ndatabase operations, real-time updates via WebSocket, and secure authentication.\n\nModule: pokertool.api\nVersion: 20.0.0\nLast Modified: 2025-09-29\nAuthor: PokerTool Development Team\nLicense: MIT\n\nDependencies:\n    - FastAPI >= 0.104.0: Web framework for building APIs\n    - Uvicorn >= 0.24.0: ASGI server implementation\n    - PyJWT >= 2.8.0: JWT token handling\n    - Redis >= 5.0.0: Caching and session management\n    - SlowAPI >= 0.1.9: Rate limiting middleware\n    - Pydantic >= 2.5.0: Data validation\n    - BCrypt: Password hashing\n\nAPI Endpoints:\n    - POST /analyze: Analyze poker hand\n    - GET /health: Health check endpoint\n    - POST /auth/login: User authentication\n    - POST /auth/refresh: Token refresh\n    - WS /ws: WebSocket for real-time updates\n\nSecurity Features:\n    - JWT-based authentication\n    - Rate limiting per IP/user\n    - Input validation and sanitization\n    - CORS configuration\n    - Circuit breaker pattern\n\nChange Log:\n    - v28.0.0 (2025-09-29): Enhanced documentation, improved security\n    - v19.0.0 (2025-09-18): Fixed JWT import issue\n    - v18.0.0 (2025-09-15): Initial API implementation",
      "version": "'20.0.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 161,
      "loc": 1897,
      "dependencies": [
        "logging",
        "hashlib",
        "time",
        "json",
        "os",
        "community_features",
        "typing",
        "production_database",
        "error_handling",
        "asyncio",
        "thread_utils",
        "functools",
        "gamification",
        "scrape",
        "datetime",
        "dataclasses",
        "analytics_dashboard",
        "secrets",
        "enum"
      ]
    },
    {
      "id": "src.pokertool.api.UserRole",
      "type": "class",
      "name": "UserRole",
      "module": "src.pokertool.api",
      "docstring": "User roles for API access.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 141
    },
    {
      "id": "src.pokertool.api.APIUser",
      "type": "class",
      "name": "APIUser",
      "module": "src.pokertool.api",
      "docstring": "API user representation.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 258
    },
    {
      "id": "src.pokertool.api.AuthenticationService",
      "type": "class",
      "name": "AuthenticationService",
      "module": "src.pokertool.api",
      "docstring": "Authentication and user management service.",
      "bases": [],
      "methods": [
        "__init__",
        "_setup_default_users",
        "create_user",
        "create_access_token",
        "verify_token",
        "get_user_by_credentials"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 21,
      "line_number": 269
    },
    {
      "id": "src.pokertool.api.ConnectionManager",
      "type": "class",
      "name": "ConnectionManager",
      "module": "src.pokertool.api",
      "docstring": "WebSocket connection manager with optimized cleanup.",
      "bases": [],
      "methods": [
        "__init__",
        "connect",
        "disconnect",
        "send_personal_message",
        "send_to_user",
        "broadcast",
        "cleanup_inactive",
        "_cleanup_connection"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 30,
      "line_number": 388
    },
    {
      "id": "src.pokertool.api.DetectionWebSocketManager",
      "type": "class",
      "name": "DetectionWebSocketManager",
      "module": "src.pokertool.api",
      "docstring": "Manages WebSocket connections for real-time detection events (no authentication).",
      "bases": [],
      "methods": [
        "__init__",
        "connect",
        "disconnect",
        "broadcast_detection"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 12,
      "line_number": 486
    },
    {
      "id": "src.pokertool.api.APIServices",
      "type": "class",
      "name": "APIServices",
      "module": "src.pokertool.api",
      "docstring": "Container for API services with dependency injection.",
      "bases": [],
      "methods": [
        "__init__",
        "get_cached_user",
        "cleanup_cache"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 14,
      "line_number": 558
    },
    {
      "id": "src.pokertool.api.PokerToolAPI",
      "type": "class",
      "name": "PokerToolAPI",
      "module": "src.pokertool.api",
      "docstring": "Main API application with optimized architecture.",
      "bases": [],
      "methods": [
        "__init__",
        "_setup_background_tasks",
        "_periodic_cleanup",
        "_setup_middleware",
        "_setup_routes"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 69,
      "line_number": 665
    },
    {
      "id": "src.pokertool.api.get_detection_ws_manager",
      "type": "function",
      "name": "get_detection_ws_manager",
      "module": "src.pokertool.api",
      "signature": "def get_detection_ws_manager() -> DetectionWebSocketManager",
      "docstring": "Get the global detection WebSocket manager.",
      "parameters": [],
      "return_type": "DetectionWebSocketManager",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "DetectionWebSocketManager"
      ],
      "raises": [],
      "line_number": 531
    },
    {
      "id": "src.pokertool.api.broadcast_detection_event",
      "type": "function",
      "name": "broadcast_detection_event",
      "module": "src.pokertool.api",
      "signature": "def broadcast_detection_event(event_type: str, severity: str, message: str, data: Dict[str, Any])",
      "docstring": "Broadcast a detection event to all connected WebSocket clients.\n\nArgs:\n    event_type: Type of detection (player, card, pot, action, system, error)\n    severity: Severity level (info, success, warning, error)\n    message: Human-readable message describing the detection\n    data: Optional additional data about the detection",
      "parameters": [
        {
          "name": "event_type",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "severity",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "message",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "data",
          "annotation": "Dict[str, Any]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": true,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "get_detection_ws_manager",
        "isoformat",
        "datetime.utcnow",
        "manager.broadcast_detection"
      ],
      "raises": [],
      "line_number": 538
    },
    {
      "id": "src.pokertool.api.get_api",
      "type": "function",
      "name": "get_api",
      "module": "src.pokertool.api",
      "signature": "def get_api() -> PokerToolAPI",
      "docstring": "Get the global API instance.",
      "parameters": [],
      "return_type": "PokerToolAPI",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "PokerToolAPI"
      ],
      "raises": [],
      "line_number": 1818
    },
    {
      "id": "src.pokertool.api.create_app",
      "type": "function",
      "name": "create_app",
      "module": "src.pokertool.api",
      "signature": "def create_app() -> FastAPI",
      "docstring": "Create FastAPI application.",
      "parameters": [],
      "return_type": "FastAPI",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "RuntimeError",
        "get_api"
      ],
      "raises": [
        "RuntimeError"
      ],
      "line_number": 1825
    },
    {
      "id": "src.pokertool.api.run_api_server",
      "type": "function",
      "name": "run_api_server",
      "module": "src.pokertool.api",
      "signature": "def run_api_server(host: str, port: int, reload: bool)",
      "docstring": "Run the API server.",
      "parameters": [
        {
          "name": "host",
          "annotation": "str",
          "default": "'127.0.0.1'",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "port",
          "annotation": "int",
          "default": "8000",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "reload",
          "annotation": "bool",
          "default": "False",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 4,
      "calls": [
        "logger.error",
        "RuntimeError",
        "logger.error",
        "os.getenv",
        "create_app",
        "logger.info",
        "uvicorn.Config",
        "uvicorn.Server",
        "server.run"
      ],
      "raises": [
        "RuntimeError"
      ],
      "line_number": 1834
    },
    {
      "id": "src.pokertool.api.main",
      "type": "function",
      "name": "main",
      "module": "src.pokertool.api",
      "signature": "def main(argv: Optional[List[str]]) -> int",
      "docstring": "Entry point used by the CLI to start the API server.",
      "parameters": [
        {
          "name": "argv",
          "annotation": "Optional[List[str]]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "int",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "os.getenv",
        "int",
        "os.getenv",
        "lower",
        "os.getenv",
        "run_api_server",
        "logger.exception"
      ],
      "raises": [],
      "line_number": 1876
    },
    {
      "id": "src.pokertool.network_analysis",
      "type": "module",
      "path": "src/pokertool/network_analysis.py",
      "docstring": "Player network analysis with relationship mapping and collusion heuristics.",
      "version": null,
      "author": null,
      "complexity": 23,
      "loc": 164,
      "dependencies": [
        "math",
        "time",
        "__future__",
        "typing",
        "collections",
        "dataclasses",
        "itertools",
        "statistics"
      ]
    },
    {
      "id": "src.pokertool.network_analysis.Interaction",
      "type": "class",
      "name": "Interaction",
      "module": "src.pokertool.network_analysis",
      "docstring": "Represents a player interaction at the table.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 15
    },
    {
      "id": "src.pokertool.network_analysis.PlayerNode",
      "type": "class",
      "name": "PlayerNode",
      "module": "src.pokertool.network_analysis",
      "docstring": "Node metadata for visualization.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 28
    },
    {
      "id": "src.pokertool.network_analysis.EdgeMetrics",
      "type": "class",
      "name": "EdgeMetrics",
      "module": "src.pokertool.network_analysis",
      "docstring": "Relationship metrics between two players.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 38
    },
    {
      "id": "src.pokertool.network_analysis.NetworkAnalysis",
      "type": "class",
      "name": "NetworkAnalysis",
      "module": "src.pokertool.network_analysis",
      "docstring": "Builds a relationship graph and surfaces collusion warnings.",
      "bases": [],
      "methods": [
        "__init__",
        "register_player",
        "add_interaction",
        "build_relationships",
        "collusion_warnings",
        "visualization_payload",
        "network_metrics",
        "_calculate_edge",
        "_normalize_key"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 23,
      "line_number": 47
    },
    {
      "id": "src.pokertool.qaoa_solver",
      "type": "module",
      "path": "src/pokertool/qaoa_solver.py",
      "docstring": "Quantum Approximate Optimization Algorithm (QAOA) Solver\n\nImplements QAOA for combinatorial optimization problems in poker strategy.\nPart of QUANTUM-001: Quantum-Inspired Optimization\n\nQAOA is particularly effective for:\n- Range optimization with complex constraints\n- Multi-player game tree optimization\n- Tournament ICM decision optimization",
      "version": null,
      "author": null,
      "complexity": 63,
      "loc": 464,
      "dependencies": [
        "typing",
        "numpy",
        "json",
        "dataclasses"
      ]
    },
    {
      "id": "src.pokertool.qaoa_solver.QAOAParameters",
      "type": "class",
      "name": "QAOAParameters",
      "module": "src.pokertool.qaoa_solver",
      "docstring": "Parameters for QAOA algorithm",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 20
    },
    {
      "id": "src.pokertool.qaoa_solver.QAOAResult",
      "type": "class",
      "name": "QAOAResult",
      "module": "src.pokertool.qaoa_solver",
      "docstring": "Result from QAOA optimization",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 30
    },
    {
      "id": "src.pokertool.qaoa_solver.QAOAProblemHamiltonian",
      "type": "class",
      "name": "QAOAProblemHamiltonian",
      "module": "src.pokertool.qaoa_solver",
      "docstring": "Defines the problem Hamiltonian for QAOA",
      "bases": [],
      "methods": [
        "__init__",
        "evaluate",
        "apply_cost_operator"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 41
    },
    {
      "id": "src.pokertool.qaoa_solver.QAOAMixingHamiltonian",
      "type": "class",
      "name": "QAOAMixingHamiltonian",
      "module": "src.pokertool.qaoa_solver",
      "docstring": "Defines the mixing Hamiltonian for QAOA",
      "bases": [],
      "methods": [
        "__init__",
        "apply_mixing_operator",
        "_apply_x_rotation"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 78
    },
    {
      "id": "src.pokertool.qaoa_solver.QAOASolver",
      "type": "class",
      "name": "QAOASolver",
      "module": "src.pokertool.qaoa_solver",
      "docstring": "Main QAOA solver implementation",
      "bases": [],
      "methods": [
        "__init__",
        "initialize_state",
        "apply_qaoa_layer",
        "compute_expectation",
        "optimize_parameters",
        "solve",
        "sample_solution"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 29,
      "line_number": 122
    },
    {
      "id": "src.pokertool.qaoa_solver.PokerQAOASolver",
      "type": "class",
      "name": "PokerQAOASolver",
      "module": "src.pokertool.qaoa_solver",
      "docstring": "QAOA solver specialized for poker problems",
      "bases": [],
      "methods": [
        "__init__",
        "optimize_poker_range",
        "optimize_multiway_action",
        "export_result"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 15,
      "line_number": 306
    },
    {
      "id": "src.pokertool.qaoa_solver.solve_maxcut_qaoa",
      "type": "function",
      "name": "solve_maxcut_qaoa",
      "module": "src.pokertool.qaoa_solver",
      "signature": "def solve_maxcut_qaoa(graph: Dict[Tuple[int, int], float], num_layers: int) -> Tuple[str, float]",
      "docstring": "Solve MaxCut problem using QAOA (useful for game tree analysis)",
      "parameters": [
        {
          "name": "graph",
          "annotation": "Dict[Tuple[int, int], float]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "num_layers",
          "annotation": "int",
          "default": "2",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Tuple[str, float]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "max",
        "max",
        "graph.keys",
        "graph.items",
        "QAOASolver",
        "QAOAParameters",
        "solver.solve"
      ],
      "raises": [],
      "line_number": 421
    },
    {
      "id": "src.pokertool.qaoa_solver.optimize_portfolio_qaoa",
      "type": "function",
      "name": "optimize_portfolio_qaoa",
      "module": "src.pokertool.qaoa_solver",
      "signature": "def optimize_portfolio_qaoa(asset_values: List[float], correlations: np.ndarray, budget: int) -> List[int]",
      "docstring": "Optimize portfolio selection (useful for bankroll allocation)",
      "parameters": [
        {
          "name": "asset_values",
          "annotation": "List[float]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "correlations",
          "annotation": "np.ndarray",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "budget",
          "annotation": "int",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "List[int]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 6,
      "calls": [
        "len",
        "np.sum",
        "np.dot",
        "range",
        "range",
        "QAOASolver",
        "solver.solve",
        "enumerate"
      ],
      "raises": [],
      "line_number": 440
    },
    {
      "id": "src.pokertool.hud_overlay",
      "type": "module",
      "path": "src/pokertool/hud_overlay.py",
      "docstring": "PokerTool Hud Overlay Module\n==============================\n\nThis module provides functionality for hud overlay operations\nwithin the PokerTool application ecosystem.\n\nModule: pokertool.hud_overlay\nVersion: 20.0.0\nLast Modified: 2025-09-29\nAuthor: PokerTool Development Team\nLicense: MIT\n\nDependencies:\n    - See module imports for specific dependencies\n    - Python 3.10+ required\n\nChange Log:\n    - v28.0.0 (2025-09-29): Enhanced documentation\n    - v19.0.0 (2025-09-18): Bug fixes and improvements\n    - v18.0.0 (2025-09-15): Initial implementation",
      "version": "'20.0.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 137,
      "loc": 918,
      "dependencies": [
        "logging",
        "ml_opponent_modeling",
        "storage",
        "pathlib",
        "time",
        "typing",
        "dataclasses",
        "core",
        "json",
        "hud_designer",
        "hud_profiles",
        "threading",
        "gto_solver"
      ]
    },
    {
      "id": "src.pokertool.hud_overlay.HUDConfig",
      "type": "class",
      "name": "HUDConfig",
      "module": "src.pokertool.hud_overlay",
      "docstring": "Configuration for HUD display.",
      "bases": [],
      "methods": [
        "to_dict",
        "from_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 3,
      "line_number": 64
    },
    {
      "id": "src.pokertool.hud_overlay.PlayerHUDStats",
      "type": "class",
      "name": "PlayerHUDStats",
      "module": "src.pokertool.hud_overlay",
      "docstring": "HUD statistics for a player.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 111
    },
    {
      "id": "src.pokertool.hud_overlay.HUDOverlay",
      "type": "class",
      "name": "HUDOverlay",
      "module": "src.pokertool.hud_overlay",
      "docstring": "Real-time HUD overlay window that displays poker statistics and advice.",
      "bases": [],
      "methods": [
        "__init__",
        "initialize",
        "_configure_theme",
        "_create_widgets",
        "_rebuild_widgets",
        "start",
        "_run_gui",
        "_update_loop",
        "_update_display",
        "_update_hand_analysis",
        "_update_gto_advice",
        "_get_quick_gto_advice",
        "_update_opponent_stats",
        "_extract_stat_value",
        "_resolve_stat_color",
        "_match_condition",
        "_handle_opponent_popup",
        "_show_popup",
        "_on_profile_selected",
        "_open_designer",
        "_save_current_profile",
        "update_game_state",
        "register_state_callback",
        "stop",
        "save_config",
        "load_config"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 121,
      "line_number": 121
    },
    {
      "id": "src.pokertool.hud_overlay.get_hud_overlay",
      "type": "function",
      "name": "get_hud_overlay",
      "module": "src.pokertool.hud_overlay",
      "signature": "def get_hud_overlay() -> Optional[HUDOverlay]",
      "docstring": "Get the global HUD overlay instance.",
      "parameters": [],
      "return_type": "Optional[HUDOverlay]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [],
      "raises": [],
      "line_number": 832
    },
    {
      "id": "src.pokertool.hud_overlay.start_hud_overlay",
      "type": "function",
      "name": "start_hud_overlay",
      "module": "src.pokertool.hud_overlay",
      "signature": "def start_hud_overlay(config: HUDConfig) -> bool",
      "docstring": "Start the HUD overlay system.",
      "parameters": [
        {
          "name": "config",
          "annotation": "HUDConfig",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "bool",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 5,
      "calls": [
        "logger.error",
        "logger.warning",
        "HUDOverlay",
        "_hud_overlay.start",
        "logger.error"
      ],
      "raises": [],
      "line_number": 836
    },
    {
      "id": "src.pokertool.hud_overlay.stop_hud_overlay",
      "type": "function",
      "name": "stop_hud_overlay",
      "module": "src.pokertool.hud_overlay",
      "signature": "def stop_hud_overlay()",
      "docstring": "Stop the HUD overlay system.",
      "parameters": [],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "_hud_overlay.stop"
      ],
      "raises": [],
      "line_number": 855
    },
    {
      "id": "src.pokertool.hud_overlay.update_hud_state",
      "type": "function",
      "name": "update_hud_state",
      "module": "src.pokertool.hud_overlay",
      "signature": "def update_hud_state(state: Dict[str, Any])",
      "docstring": "Update HUD with new game state.",
      "parameters": [
        {
          "name": "state",
          "annotation": "Dict[str, Any]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "_hud_overlay.update_game_state"
      ],
      "raises": [],
      "line_number": 863
    },
    {
      "id": "src.pokertool.hud_overlay.is_hud_running",
      "type": "function",
      "name": "is_hud_running",
      "module": "src.pokertool.hud_overlay",
      "signature": "def is_hud_running() -> bool",
      "docstring": "Check if HUD overlay is currently running.",
      "parameters": [],
      "return_type": "bool",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [],
      "raises": [],
      "line_number": 870
    },
    {
      "id": "src.pokertool.pattern_detector",
      "type": "module",
      "path": "src/pokertool/pattern_detector.py",
      "docstring": "Pattern Detector Module\n\nDetects and analyzes patterns in player behavior, particularly focusing on\ntiming patterns, betting patterns, and behavioral consistency.\n\nPart of TIMING-001: Timing Tell Analyzer",
      "version": null,
      "author": null,
      "complexity": 73,
      "loc": 421,
      "dependencies": [
        "typing",
        "collections",
        "dataclasses",
        "numpy",
        "statistics"
      ]
    },
    {
      "id": "src.pokertool.pattern_detector.Pattern",
      "type": "class",
      "name": "Pattern",
      "module": "src.pokertool.pattern_detector",
      "docstring": "Represents a detected behavioral pattern",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 18
    },
    {
      "id": "src.pokertool.pattern_detector.TimeSeriesAnalyzer",
      "type": "class",
      "name": "TimeSeriesAnalyzer",
      "module": "src.pokertool.pattern_detector",
      "docstring": "Analyze time series data for patterns",
      "bases": [],
      "methods": [
        "__init__",
        "detect_trend",
        "detect_cycles",
        "_calculate_similarity",
        "detect_outliers"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 19,
      "line_number": 27
    },
    {
      "id": "src.pokertool.pattern_detector.BehavioralPatternDetector",
      "type": "class",
      "name": "BehavioralPatternDetector",
      "module": "src.pokertool.pattern_detector",
      "docstring": "Detect patterns in player behavior",
      "bases": [],
      "methods": [
        "__init__",
        "detect_timing_consistency",
        "detect_action_speed_pattern",
        "detect_escalation_pattern",
        "detect_session_fatigue",
        "_record_pattern",
        "get_player_patterns"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 26,
      "line_number": 112
    },
    {
      "id": "src.pokertool.pattern_detector.SequencePatternMatcher",
      "type": "class",
      "name": "SequencePatternMatcher",
      "module": "src.pokertool.pattern_detector",
      "docstring": "Match and identify common sequences",
      "bases": [],
      "methods": [
        "__init__",
        "match_sequence",
        "find_partial_matches",
        "_is_subsequence"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 10,
      "line_number": 278
    },
    {
      "id": "src.pokertool.pattern_detector.AnomalyDetector",
      "type": "class",
      "name": "AnomalyDetector",
      "module": "src.pokertool.pattern_detector",
      "docstring": "Detect anomalous patterns in timing and behavior",
      "bases": [],
      "methods": [
        "__init__",
        "establish_baseline",
        "detect_anomaly",
        "update_baseline"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 9,
      "line_number": 337
    },
    {
      "id": "src.pokertool.pattern_detector.calculate_pattern_strength",
      "type": "function",
      "name": "calculate_pattern_strength",
      "module": "src.pokertool.pattern_detector",
      "signature": "def calculate_pattern_strength(confidence: float, occurrences: int, min_occurrences: int) -> str",
      "docstring": "Calculate overall pattern strength",
      "parameters": [
        {
          "name": "confidence",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "occurrences",
          "annotation": "int",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "min_occurrences",
          "annotation": "int",
          "default": "5",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 6,
      "calls": [],
      "raises": [],
      "line_number": 391
    },
    {
      "id": "src.pokertool.pattern_detector.combine_pattern_scores",
      "type": "function",
      "name": "combine_pattern_scores",
      "module": "src.pokertool.pattern_detector",
      "signature": "def combine_pattern_scores(patterns: List[Pattern]) -> float",
      "docstring": "Combine multiple pattern scores into overall confidence",
      "parameters": [
        {
          "name": "patterns",
          "annotation": "List[Pattern]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "float",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "strength_weights.get"
      ],
      "raises": [],
      "line_number": 405
    },
    {
      "id": "src.pokertool.smart_ocr_cache",
      "type": "module",
      "path": "src/pokertool/smart_ocr_cache.py",
      "docstring": "SCRAPE-017: Smart OCR Result Caching\n====================================\n\nCache OCR results and invalidate only when region changes.\nExpected improvement: 2-3x faster for stable elements (player names, blinds).\n\nModule: pokertool.smart_ocr_cache\nVersion: 1.0.0\nCreated: 2025-10-15\nAuthor: PokerTool Development Team\nLicense: MIT",
      "version": "'1.0.0'",
      "author": null,
      "complexity": 29,
      "loc": 330,
      "dependencies": [
        "logging",
        "hashlib",
        "time",
        "typing",
        "dataclasses",
        "collections",
        "numpy"
      ]
    },
    {
      "id": "src.pokertool.smart_ocr_cache.CachedResult",
      "type": "class",
      "name": "CachedResult",
      "module": "src.pokertool.smart_ocr_cache",
      "docstring": "Cached OCR result.",
      "bases": [],
      "methods": [
        "is_expired"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 33
    },
    {
      "id": "src.pokertool.smart_ocr_cache.CacheMetrics",
      "type": "class",
      "name": "CacheMetrics",
      "module": "src.pokertool.smart_ocr_cache",
      "docstring": "Metrics for OCR cache.",
      "bases": [],
      "methods": [
        "update_hit",
        "update_miss",
        "update_invalidation",
        "_update_hit_rate"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 46
    },
    {
      "id": "src.pokertool.smart_ocr_cache.SmartOCRCache",
      "type": "class",
      "name": "SmartOCRCache",
      "module": "src.pokertool.smart_ocr_cache",
      "docstring": "LRU cache for OCR results with hash-based invalidation.\n\nCaches OCR results keyed by (region_hash, extraction_type).\nInvalidates when region pixels change.",
      "bases": [],
      "methods": [
        "__init__",
        "_compute_region_hash",
        "get",
        "invalidate",
        "cleanup_expired",
        "get_metrics",
        "reset"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 19,
      "line_number": 77
    },
    {
      "id": "src.pokertool.smart_ocr_cache.get_ocr_cache",
      "type": "function",
      "name": "get_ocr_cache",
      "module": "src.pokertool.smart_ocr_cache",
      "signature": "def get_ocr_cache(max_entries: int, ttl_seconds: float) -> SmartOCRCache",
      "docstring": "Get global OCR cache instance.",
      "parameters": [
        {
          "name": "max_entries",
          "annotation": "int",
          "default": "1000",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "ttl_seconds",
          "annotation": "float",
          "default": "300.0",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "SmartOCRCache",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "SmartOCRCache"
      ],
      "raises": [],
      "line_number": 275
    },
    {
      "id": "src.pokertool.smart_ocr_cache.reset_ocr_cache",
      "type": "function",
      "name": "reset_ocr_cache",
      "module": "src.pokertool.smart_ocr_cache",
      "signature": "def reset_ocr_cache()",
      "docstring": "Reset global OCR cache.",
      "parameters": [],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "_ocr_cache.reset"
      ],
      "raises": [],
      "line_number": 283
    },
    {
      "id": "src.pokertool.cli",
      "type": "module",
      "path": "src/pokertool/cli.py",
      "docstring": null,
      "version": "'21.0.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 14,
      "loc": 149,
      "dependencies": [
        "logging",
        "sys",
        "argparse",
        "__future__",
        "typing"
      ]
    },
    {
      "id": "src.pokertool.cli.main",
      "type": "function",
      "name": "main",
      "module": "src.pokertool.cli",
      "signature": "def main(argv)",
      "docstring": "Main CLI entry point.",
      "parameters": [
        {
          "name": "argv",
          "annotation": null,
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 10,
      "calls": [
        "argparse.ArgumentParser",
        "parser.add_subparsers",
        "sub.add_parser",
        "sub.add_parser",
        "sub.add_parser",
        "parser.parse_args",
        "logger.info",
        "hasattr",
        "api.main",
        "hasattr",
        "api.run",
        "logger.error",
        "logger.info",
        "logger.error",
        "logger.error",
        "logger.info",
        "logger.error",
        "traceback.print_exc",
        "scrape.run_screen_scraper",
        "logger.info",
        "logger.error",
        "run_test_mode"
      ],
      "raises": [],
      "line_number": 51
    },
    {
      "id": "src.pokertool.cli.run_test_mode",
      "type": "function",
      "name": "run_test_mode",
      "module": "src.pokertool.cli",
      "signature": "def run_test_mode()",
      "docstring": "Run basic functionality tests without GUI.",
      "parameters": [],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 4,
      "calls": [
        "logger.info",
        "logger.info",
        "logger.info",
        "logger.info",
        "logger.error",
        "logger.info",
        "sqlite3.connect",
        "conn.execute",
        "conn.close",
        "logger.info",
        "logger.error",
        "logger.info",
        "parse_card",
        "parse_card",
        "analyse_hand",
        "logger.info",
        "type",
        "logger.error",
        "logger.info",
        "logger.info",
        "logger.info"
      ],
      "raises": [],
      "line_number": 107
    },
    {
      "id": "src.pokertool.circuit_breaker",
      "type": "module",
      "path": "src/pokertool/circuit_breaker.py",
      "docstring": "PokerTool Circuit Breaker Pattern Implementation\n=================================================\n\nImplements the circuit breaker pattern for fault tolerance and graceful degradation\nwhen calling external services or unreliable dependencies.\n\nModule: pokertool.circuit_breaker\nVersion: 1.0.0\nAuthor: PokerTool Development Team\nLicense: MIT\n\nFeatures:\n    - Automatic circuit breaking on repeated failures\n    - Configurable failure thresholds\n    - Exponential backoff for recovery attempts\n    - Health check support\n    - Metrics collection\n    - Thread-safe implementation\n\nStates:\n    - CLOSED: Normal operation, requests pass through\n    - OPEN: Failures exceeded threshold, requests fail fast\n    - HALF_OPEN: Testing if service recovered",
      "version": null,
      "author": null,
      "complexity": 29,
      "loc": 296,
      "dependencies": [
        "logging",
        "functools",
        "time",
        "typing",
        "datetime",
        "dataclasses",
        "enum",
        "threading"
      ]
    },
    {
      "id": "src.pokertool.circuit_breaker.CircuitState",
      "type": "class",
      "name": "CircuitState",
      "module": "src.pokertool.circuit_breaker",
      "docstring": "Circuit breaker states.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 42
    },
    {
      "id": "src.pokertool.circuit_breaker.CircuitBreakerConfig",
      "type": "class",
      "name": "CircuitBreakerConfig",
      "module": "src.pokertool.circuit_breaker",
      "docstring": "Configuration for circuit breaker.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 50
    },
    {
      "id": "src.pokertool.circuit_breaker.CircuitBreakerMetrics",
      "type": "class",
      "name": "CircuitBreakerMetrics",
      "module": "src.pokertool.circuit_breaker",
      "docstring": "Metrics for circuit breaker monitoring.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 59
    },
    {
      "id": "src.pokertool.circuit_breaker.CircuitBreaker",
      "type": "class",
      "name": "CircuitBreaker",
      "module": "src.pokertool.circuit_breaker",
      "docstring": "Circuit breaker implementation for fault tolerance.\n\nUsage:\n    breaker = CircuitBreaker(\n        failure_threshold=5,\n        timeout=60,\n        name=\"external_api\"\n    )\n    \n    @breaker\n    def call_external_api():\n        # Your API call here\n        pass",
      "bases": [],
      "methods": [
        "__init__",
        "__call__",
        "call",
        "_on_success",
        "_on_failure",
        "_should_attempt_reset",
        "reset",
        "get_state",
        "get_metrics",
        "is_healthy"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 21,
      "line_number": 71
    },
    {
      "id": "src.pokertool.circuit_breaker.CircuitBreakerOpenError",
      "type": "class",
      "name": "CircuitBreakerOpenError",
      "module": "src.pokertool.circuit_breaker",
      "docstring": "Exception raised when circuit breaker is open.",
      "bases": [
        "Exception"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 224
    },
    {
      "id": "src.pokertool.circuit_breaker.get_circuit_breaker",
      "type": "function",
      "name": "get_circuit_breaker",
      "module": "src.pokertool.circuit_breaker",
      "signature": "def get_circuit_breaker(name: str, failure_threshold: int, timeout: float, expected_exception: type) -> CircuitBreaker",
      "docstring": "Get or create a circuit breaker by name.\n\nArgs:\n    name: Circuit breaker name\n    failure_threshold: Number of failures before opening\n    timeout: Seconds before attempting half-open\n    expected_exception: Exception type to catch\n    \nReturns:\n    CircuitBreaker instance",
      "parameters": [
        {
          "name": "name",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "failure_threshold",
          "annotation": "int",
          "default": "5",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "timeout",
          "annotation": "float",
          "default": "60.0",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "expected_exception",
          "annotation": "type",
          "default": "Exception",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "CircuitBreaker",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "CircuitBreaker"
      ],
      "raises": [],
      "line_number": 234
    },
    {
      "id": "src.pokertool.circuit_breaker.get_all_circuit_breakers",
      "type": "function",
      "name": "get_all_circuit_breakers",
      "module": "src.pokertool.circuit_breaker",
      "signature": "def get_all_circuit_breakers() -> dict[str, CircuitBreaker]",
      "docstring": "Get all registered circuit breakers.",
      "parameters": [],
      "return_type": "dict[str, CircuitBreaker]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "_circuit_breakers.copy"
      ],
      "raises": [],
      "line_number": 263
    },
    {
      "id": "src.pokertool.circuit_breaker.reset_all_circuit_breakers",
      "type": "function",
      "name": "reset_all_circuit_breakers",
      "module": "src.pokertool.circuit_breaker",
      "signature": "def reset_all_circuit_breakers()",
      "docstring": "Reset all circuit breakers to closed state.",
      "parameters": [],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "_circuit_breakers.values",
        "breaker.reset",
        "logger.info",
        "len"
      ],
      "raises": [],
      "line_number": 269
    },
    {
      "id": "src.pokertool.user_config",
      "type": "module",
      "path": "src/pokertool/user_config.py",
      "docstring": "User Configuration Management for PokerTool\n============================================\n\nStores and manages user-specific settings like poker handle, preferences, etc.",
      "version": null,
      "author": null,
      "complexity": 32,
      "loc": 247,
      "dependencies": [
        "logging",
        "pathlib",
        "__future__",
        "typing",
        "dataclasses",
        "json"
      ]
    },
    {
      "id": "src.pokertool.user_config.UserConfig",
      "type": "class",
      "name": "UserConfig",
      "module": "src.pokertool.user_config",
      "docstring": "User configuration settings.",
      "bases": [],
      "methods": [
        "to_dict",
        "from_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 23
    },
    {
      "id": "src.pokertool.user_config.ConfigManager",
      "type": "class",
      "name": "ConfigManager",
      "module": "src.pokertool.user_config",
      "docstring": "Manages user configuration persistence.",
      "bases": [],
      "methods": [
        "__init__",
        "load",
        "save",
        "get_poker_handle",
        "set_poker_handle",
        "has_poker_handle",
        "reset"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 17,
      "line_number": 54
    },
    {
      "id": "src.pokertool.user_config.get_config_manager",
      "type": "function",
      "name": "get_config_manager",
      "module": "src.pokertool.user_config",
      "signature": "def get_config_manager() -> ConfigManager",
      "docstring": "Get the global config manager instance.",
      "parameters": [],
      "return_type": "ConfigManager",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "ConfigManager"
      ],
      "raises": [],
      "line_number": 150
    },
    {
      "id": "src.pokertool.user_config.get_poker_handle",
      "type": "function",
      "name": "get_poker_handle",
      "module": "src.pokertool.user_config",
      "signature": "def get_poker_handle() -> Optional[str]",
      "docstring": "Convenience function to get poker handle.",
      "parameters": [],
      "return_type": "Optional[str]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_poker_handle",
        "get_config_manager"
      ],
      "raises": [],
      "line_number": 158
    },
    {
      "id": "src.pokertool.user_config.set_poker_handle",
      "type": "function",
      "name": "set_poker_handle",
      "module": "src.pokertool.user_config",
      "signature": "def set_poker_handle(handle: str) -> None",
      "docstring": "Convenience function to set poker handle.",
      "parameters": [
        {
          "name": "handle",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "None",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "set_poker_handle",
        "get_config_manager"
      ],
      "raises": [],
      "line_number": 163
    },
    {
      "id": "src.pokertool.user_config.has_poker_handle",
      "type": "function",
      "name": "has_poker_handle",
      "module": "src.pokertool.user_config",
      "signature": "def has_poker_handle() -> bool",
      "docstring": "Convenience function to check if handle is configured.",
      "parameters": [],
      "return_type": "bool",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "has_poker_handle",
        "get_config_manager"
      ],
      "raises": [],
      "line_number": 168
    },
    {
      "id": "src.pokertool.user_config.prompt_for_poker_handle",
      "type": "function",
      "name": "prompt_for_poker_handle",
      "module": "src.pokertool.user_config",
      "signature": "def prompt_for_poker_handle() -> Optional[str]",
      "docstring": "Prompt user for their poker handle if not configured.\n\nReturns:\n    The poker handle, or None if cancelled",
      "parameters": [],
      "return_type": "Optional[str]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 8,
      "calls": [
        "get_config_manager",
        "manager.has_poker_handle",
        "manager.get_poker_handle",
        "print",
        "lower",
        "strip",
        "input",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "strip",
        "input",
        "handle.lower",
        "print",
        "print",
        "print",
        "len",
        "print",
        "print",
        "lower",
        "strip",
        "input",
        "manager.set_poker_handle",
        "print",
        "print"
      ],
      "raises": [],
      "line_number": 173
    },
    {
      "id": "src.pokertool.ocr_recognition",
      "type": "module",
      "path": "src/pokertool/ocr_recognition.py",
      "docstring": "PokerTool Ocr Recognition Module\n==================================\n\nThis module provides functionality for ocr recognition operations\nwithin the PokerTool application ecosystem.\n\nModule: pokertool.ocr_recognition\nVersion: 20.0.0\nLast Modified: 2025-09-29\nAuthor: PokerTool Development Team\nLicense: MIT\n\nDependencies:\n    - See module imports for specific dependencies\n    - Python 3.10+ required\n\nChange Log:\n    - v28.0.0 (2025-09-29): Enhanced documentation\n    - v19.0.0 (2025-09-18): Bug fixes and improvements\n    - v18.0.0 (2025-09-15): Initial implementation",
      "version": "'20.0.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 104,
      "loc": 698,
      "dependencies": [
        "logging",
        "numpy",
        "pathlib",
        "typing",
        "dataclasses",
        "re",
        "core",
        "error_handling",
        "enum",
        "os"
      ]
    },
    {
      "id": "src.pokertool.ocr_recognition.RecognitionMethod",
      "type": "class",
      "name": "RecognitionMethod",
      "module": "src.pokertool.ocr_recognition",
      "docstring": "OCR recognition methods available.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 66
    },
    {
      "id": "src.pokertool.ocr_recognition.CardRegion",
      "type": "class",
      "name": "CardRegion",
      "module": "src.pokertool.ocr_recognition",
      "docstring": "Defines a region where a card should be detected.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 74
    },
    {
      "id": "src.pokertool.ocr_recognition.RecognitionResult",
      "type": "class",
      "name": "RecognitionResult",
      "module": "src.pokertool.ocr_recognition",
      "docstring": "Result of OCR card recognition.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 84
    },
    {
      "id": "src.pokertool.ocr_recognition.CardTemplateManager",
      "type": "class",
      "name": "CardTemplateManager",
      "module": "src.pokertool.ocr_recognition",
      "docstring": "Manages card template images for template matching.",
      "bases": [],
      "methods": [
        "__init__",
        "_load_templates",
        "match_template"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 11,
      "line_number": 93
    },
    {
      "id": "src.pokertool.ocr_recognition.PokerOCR",
      "type": "class",
      "name": "PokerOCR",
      "module": "src.pokertool.ocr_recognition",
      "docstring": "Advanced OCR system for poker table recognition.\nSupports multiple recognition methods and adaptive preprocessing.",
      "bases": [],
      "methods": [
        "__init__",
        "_configure_tesseract",
        "preprocess_image",
        "recognize_cards_tesseract",
        "recognize_cards_easyocr",
        "recognize_cards_template",
        "_parse_card_text",
        "recognize_cards",
        "recognize_betting_amounts",
        "_should_prefer_easyocr",
        "_recognize_amount_easyocr",
        "_is_amount_suspicious",
        "_parse_amount"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 89,
      "line_number": 144
    },
    {
      "id": "src.pokertool.ocr_recognition.get_poker_ocr",
      "type": "function",
      "name": "get_poker_ocr",
      "module": "src.pokertool.ocr_recognition",
      "signature": "def get_poker_ocr() -> PokerOCR",
      "docstring": "Get the global poker OCR instance.",
      "parameters": [],
      "return_type": "PokerOCR",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "PokerOCR"
      ],
      "raises": [],
      "line_number": 646
    },
    {
      "id": "src.pokertool.ocr_recognition.create_card_regions",
      "type": "function",
      "name": "create_card_regions",
      "module": "src.pokertool.ocr_recognition",
      "signature": "def create_card_regions(table_layout: str) -> List[CardRegion]",
      "docstring": "Create standard card regions for different table layouts.",
      "parameters": [
        {
          "name": "table_layout",
          "annotation": "str",
          "default": "'standard'",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "List[CardRegion]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "regions.extend",
        "CardRegion",
        "CardRegion",
        "CardRegion",
        "CardRegion",
        "CardRegion",
        "CardRegion",
        "CardRegion",
        "CardRegion",
        "CardRegion",
        "CardRegion",
        "CardRegion",
        "CardRegion",
        "CardRegion"
      ],
      "raises": [],
      "line_number": 653
    },
    {
      "id": "src.pokertool.theme_system",
      "type": "module",
      "path": "src/pokertool/theme_system.py",
      "docstring": "Theme engine with editor, previews, and marketplace integration.",
      "version": null,
      "author": null,
      "complexity": 30,
      "loc": 214,
      "dependencies": [
        "pathlib",
        "time",
        "__future__",
        "typing",
        "dataclasses",
        "json"
      ]
    },
    {
      "id": "src.pokertool.theme_system.Palette",
      "type": "class",
      "name": "Palette",
      "module": "src.pokertool.theme_system",
      "docstring": "Color palette definition.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 16
    },
    {
      "id": "src.pokertool.theme_system.Typography",
      "type": "class",
      "name": "Typography",
      "module": "src.pokertool.theme_system",
      "docstring": "Typography definition.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 27
    },
    {
      "id": "src.pokertool.theme_system.Theme",
      "type": "class",
      "name": "Theme",
      "module": "src.pokertool.theme_system",
      "docstring": "Theme definition combining palette and typography.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 37
    },
    {
      "id": "src.pokertool.theme_system.ThemeDraft",
      "type": "class",
      "name": "ThemeDraft",
      "module": "src.pokertool.theme_system",
      "docstring": "Draft theme used by the editor before publishing.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 49
    },
    {
      "id": "src.pokertool.theme_system.MarketplaceEntry",
      "type": "class",
      "name": "MarketplaceEntry",
      "module": "src.pokertool.theme_system",
      "docstring": "Theme listing metadata for marketplace.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 59
    },
    {
      "id": "src.pokertool.theme_system.ThemeEngine",
      "type": "class",
      "name": "ThemeEngine",
      "module": "src.pokertool.theme_system",
      "docstring": "Core theme registry and application helper.",
      "bases": [],
      "methods": [
        "__init__",
        "register_theme",
        "list_themes",
        "get_theme",
        "active_theme",
        "apply_theme",
        "preview_theme",
        "_save_theme",
        "_load_installed_themes",
        "_serialize_theme",
        "_deserialize_theme"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 18,
      "line_number": 69
    },
    {
      "id": "src.pokertool.theme_system.ThemeEditor",
      "type": "class",
      "name": "ThemeEditor",
      "module": "src.pokertool.theme_system",
      "docstring": "Draft-based theme editor.",
      "bases": [],
      "methods": [
        "__init__",
        "create_draft",
        "update_draft",
        "publish_draft",
        "list_drafts"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 7,
      "line_number": 153
    },
    {
      "id": "src.pokertool.theme_system.ThemeMarketplace",
      "type": "class",
      "name": "ThemeMarketplace",
      "module": "src.pokertool.theme_system",
      "docstring": "Simple marketplace manager for downloadable themes.",
      "bases": [],
      "methods": [
        "__init__",
        "register_entry",
        "list_entries",
        "download_theme"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 185
    },
    {
      "id": "src.pokertool.range_merger",
      "type": "module",
      "path": "src/pokertool/range_merger.py",
      "docstring": "Advanced Range Merging Algorithm\n\nProvides optimal range construction and merging with minimum defense frequency,\npolarization optimization, removal effects, blockers analysis, and range simplification.\n\nID: MERGE-001\nPriority: HIGH\nExpected Accuracy Gain: 8-12% improvement in range construction",
      "version": null,
      "author": null,
      "complexity": 77,
      "loc": 536,
      "dependencies": [
        "typing",
        "dataclasses",
        "json",
        "itertools",
        "enum"
      ]
    },
    {
      "id": "src.pokertool.range_merger.HandCategory",
      "type": "class",
      "name": "HandCategory",
      "module": "src.pokertool.range_merger",
      "docstring": "Hand strength categories for range construction",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 19
    },
    {
      "id": "src.pokertool.range_merger.HandCombo",
      "type": "class",
      "name": "HandCombo",
      "module": "src.pokertool.range_merger",
      "docstring": "Represents a specific hand combination",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 29
    },
    {
      "id": "src.pokertool.range_merger.RangeStructure",
      "type": "class",
      "name": "RangeStructure",
      "module": "src.pokertool.range_merger",
      "docstring": "Structure of a poker range",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 38
    },
    {
      "id": "src.pokertool.range_merger.MinimumDefenseFrequency",
      "type": "class",
      "name": "MinimumDefenseFrequency",
      "module": "src.pokertool.range_merger",
      "docstring": "Calculate and apply minimum defense frequency constraints",
      "bases": [],
      "methods": [
        "__init__",
        "calculate_mdf",
        "get_defense_combos",
        "validate_defense_range"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 6,
      "line_number": 47
    },
    {
      "id": "src.pokertool.range_merger.PolarizationOptimizer",
      "type": "class",
      "name": "PolarizationOptimizer",
      "module": "src.pokertool.range_merger",
      "docstring": "Optimize range polarization for maximum EV",
      "bases": [],
      "methods": [
        "__init__",
        "calculate_optimal_ratio",
        "optimize_polarization",
        "is_properly_polarized"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 7,
      "line_number": 82
    },
    {
      "id": "src.pokertool.range_merger.RemovalEffectsCalculator",
      "type": "class",
      "name": "RemovalEffectsCalculator",
      "module": "src.pokertool.range_merger",
      "docstring": "Calculate card removal effects on range equity",
      "bases": [],
      "methods": [
        "__init__",
        "get_removed_cards",
        "calculate_combo_count",
        "apply_removal_effects",
        "calculate_removal_impact"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 24,
      "line_number": 143
    },
    {
      "id": "src.pokertool.range_merger.BlockerAnalyzer",
      "type": "class",
      "name": "BlockerAnalyzer",
      "module": "src.pokertool.range_merger",
      "docstring": "Analyze blocker effects for range construction",
      "bases": [],
      "methods": [
        "__init__",
        "analyze_blockers",
        "rank_blocker_hands",
        "select_bluff_combos"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 9,
      "line_number": 229
    },
    {
      "id": "src.pokertool.range_merger.RangeSimplifier",
      "type": "class",
      "name": "RangeSimplifier",
      "module": "src.pokertool.range_merger",
      "docstring": "Simplify complex ranges while maintaining strength",
      "bases": [],
      "methods": [
        "__init__",
        "simplify_range",
        "merge_similar_hands",
        "get_range_summary"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 11,
      "line_number": 299
    },
    {
      "id": "src.pokertool.range_merger.AdvancedRangeMerger",
      "type": "class",
      "name": "AdvancedRangeMerger",
      "module": "src.pokertool.range_merger",
      "docstring": "Main class for advanced range merging and construction",
      "bases": [],
      "methods": [
        "__init__",
        "construct_optimal_range",
        "merge_ranges",
        "export_range",
        "import_range"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 20,
      "line_number": 367
    },
    {
      "id": "src.pokertool.mcts_optimizer",
      "type": "module",
      "path": "src/pokertool/mcts_optimizer.py",
      "docstring": "Monte Carlo Tree Search optimizer for poker decision making.\n\nThis module implements MCTS (Monte Carlo Tree Search) with UCT (Upper Confidence\nbounds applied to Trees) for optimal action selection in complex poker situations.\nIt provides parallel search capabilities and transposition table support.\n\nModule: mcts_optimizer\nVersion: 1.0.0\nLast Updated: 2025-10-05\nTask: MCTS-001\nDependencies: None\nTest Coverage: tests/system/test_mcts_optimizer.py",
      "version": null,
      "author": null,
      "complexity": 67,
      "loc": 422,
      "dependencies": [
        "math",
        "time",
        "__future__",
        "typing",
        "dataclasses"
      ]
    },
    {
      "id": "src.pokertool.mcts_optimizer.GameState",
      "type": "class",
      "name": "GameState",
      "module": "src.pokertool.mcts_optimizer",
      "docstring": "Represents a poker game state for MCTS simulation.",
      "bases": [],
      "methods": [
        "__post_init__",
        "is_terminal",
        "get_state_hash"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 4,
      "line_number": 24
    },
    {
      "id": "src.pokertool.mcts_optimizer.MCTSNode",
      "type": "class",
      "name": "MCTSNode",
      "module": "src.pokertool.mcts_optimizer",
      "docstring": "Node in the MCTS tree.",
      "bases": [],
      "methods": [
        "__post_init__",
        "_get_legal_actions",
        "is_fully_expanded",
        "best_child",
        "add_child"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 14,
      "line_number": 56
    },
    {
      "id": "src.pokertool.mcts_optimizer.MCTSConfig",
      "type": "class",
      "name": "MCTSConfig",
      "module": "src.pokertool.mcts_optimizer",
      "docstring": "Configuration for MCTS optimizer.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 120
    },
    {
      "id": "src.pokertool.mcts_optimizer.TranspositionTable",
      "type": "class",
      "name": "TranspositionTable",
      "module": "src.pokertool.mcts_optimizer",
      "docstring": "Cache for visited game states.",
      "bases": [],
      "methods": [
        "__init__",
        "lookup",
        "store",
        "clear"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 6,
      "line_number": 133
    },
    {
      "id": "src.pokertool.mcts_optimizer.MCTSOptimizer",
      "type": "class",
      "name": "MCTSOptimizer",
      "module": "src.pokertool.mcts_optimizer",
      "docstring": "Monte Carlo Tree Search optimizer for poker decisions.\n\nUses UCT (Upper Confidence bounds applied to Trees) algorithm with:\n- Progressive widening for large action spaces\n- Transposition tables for duplicate state detection\n- Time management for real-time play\n- Parallel simulation support",
      "bases": [],
      "methods": [
        "__init__",
        "search",
        "_should_continue",
        "_select",
        "_expand",
        "_simulate",
        "_backpropagate",
        "_get_best_action",
        "_apply_action",
        "_evaluate_state",
        "get_statistics"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 43,
      "line_number": 165
    },
    {
      "id": "src.pokertool.master_logging",
      "type": "module",
      "path": "src/pokertool/master_logging.py",
      "docstring": "PokerTool Master Logging System\n===============================\n\nCentralized logging and error handling system that captures all errors\nand routes them to a master log with comprehensive data collection.\n\nFeatures:\n- Unified logging across all components\n- Structured error data collection\n- Context-aware error capture\n- Performance monitoring\n- Security event logging\n- Multiple output formats (JSON, text)\n- Automatic log rotation\n- Real-time error streaming\n- Integration with existing systems\n\nModule: pokertool.master_logging\nVersion: 28.1.0\nAuthor: PokerTool Development Team\nLicense: MIT",
      "version": "'28.1.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 68,
      "loc": 699,
      "dependencies": [
        "logging",
        "functools",
        "sys",
        "traceback",
        "platform",
        "pathlib",
        "time",
        "__future__",
        "typing",
        "dataclasses",
        "json",
        "contextlib",
        "enum",
        "datetime",
        "os",
        "inspect",
        "threading"
      ]
    },
    {
      "id": "src.pokertool.master_logging.LogLevel",
      "type": "class",
      "name": "LogLevel",
      "module": "src.pokertool.master_logging",
      "docstring": "Enhanced log levels with priorities.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 88
    },
    {
      "id": "src.pokertool.master_logging.LogCategory",
      "type": "class",
      "name": "LogCategory",
      "module": "src.pokertool.master_logging",
      "docstring": "Categories for different types of log entries.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 98
    },
    {
      "id": "src.pokertool.master_logging.LogContext",
      "type": "class",
      "name": "LogContext",
      "module": "src.pokertool.master_logging",
      "docstring": "Enhanced context information for log entries.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 113
    },
    {
      "id": "src.pokertool.master_logging.ErrorDetails",
      "type": "class",
      "name": "ErrorDetails",
      "module": "src.pokertool.master_logging",
      "docstring": "Enhanced error information.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 144
    },
    {
      "id": "src.pokertool.master_logging.MasterLogger",
      "type": "class",
      "name": "MasterLogger",
      "module": "src.pokertool.master_logging",
      "docstring": "Centralized master logging system for PokerTool.\n\nThis class provides unified logging across all components with\nenhanced error capture, structured data collection, and multiple\noutput formats.",
      "bases": [],
      "methods": [
        "__init__",
        "get_instance",
        "_setup_loggers",
        "_get_json_formatter",
        "_redirect_existing_loggers",
        "_generate_session_id",
        "_get_context",
        "_start_monitoring",
        "_log_system_metrics",
        "trace",
        "debug",
        "info",
        "warning",
        "error",
        "critical",
        "security",
        "_log",
        "_process_exception",
        "_assess_error_severity",
        "_affects_core_functionality",
        "_is_user_facing_error",
        "operation_context",
        "performance_timer",
        "get_error_summary",
        "flush_logs"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 59,
      "line_number": 164
    },
    {
      "id": "src.pokertool.master_logging.get_master_logger",
      "type": "function",
      "name": "get_master_logger",
      "module": "src.pokertool.master_logging",
      "signature": "def get_master_logger() -> MasterLogger",
      "docstring": "Get the global master logger instance.",
      "parameters": [],
      "return_type": "MasterLogger",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "MasterLogger.get_instance"
      ],
      "raises": [],
      "line_number": 645
    },
    {
      "id": "src.pokertool.master_logging.log_info",
      "type": "function",
      "name": "log_info",
      "module": "src.pokertool.master_logging",
      "signature": "def log_info(message: str, category: LogCategory, kwargs)",
      "docstring": "Convenience function for info logging.",
      "parameters": [
        {
          "name": "message",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "category",
          "annotation": "LogCategory",
          "default": "LogCategory.GENERAL",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "kwargs",
          "annotation": null,
          "default": null,
          "kind": "VAR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "info",
        "get_master_logger"
      ],
      "raises": [],
      "line_number": 653
    },
    {
      "id": "src.pokertool.master_logging.log_error",
      "type": "function",
      "name": "log_error",
      "module": "src.pokertool.master_logging",
      "signature": "def log_error(message: str, exception: Optional[Exception], category: LogCategory, kwargs)",
      "docstring": "Convenience function for error logging.",
      "parameters": [
        {
          "name": "message",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "exception",
          "annotation": "Optional[Exception]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "category",
          "annotation": "LogCategory",
          "default": "LogCategory.ERROR",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "kwargs",
          "annotation": null,
          "default": null,
          "kind": "VAR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "error",
        "get_master_logger"
      ],
      "raises": [],
      "line_number": 657
    },
    {
      "id": "src.pokertool.master_logging.log_warning",
      "type": "function",
      "name": "log_warning",
      "module": "src.pokertool.master_logging",
      "signature": "def log_warning(message: str, category: LogCategory, kwargs)",
      "docstring": "Convenience function for warning logging.",
      "parameters": [
        {
          "name": "message",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "category",
          "annotation": "LogCategory",
          "default": "LogCategory.GENERAL",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "kwargs",
          "annotation": null,
          "default": null,
          "kind": "VAR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "warning",
        "get_master_logger"
      ],
      "raises": [],
      "line_number": 662
    },
    {
      "id": "src.pokertool.master_logging.log_performance",
      "type": "function",
      "name": "log_performance",
      "module": "src.pokertool.master_logging",
      "signature": "def log_performance(operation: str, execution_time: float, kwargs)",
      "docstring": "Convenience function for performance logging.",
      "parameters": [
        {
          "name": "operation",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "execution_time",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "kwargs",
          "annotation": null,
          "default": null,
          "kind": "VAR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "info",
        "get_master_logger"
      ],
      "raises": [],
      "line_number": 666
    },
    {
      "id": "src.pokertool.master_logging.log_security_event",
      "type": "function",
      "name": "log_security_event",
      "module": "src.pokertool.master_logging",
      "signature": "def log_security_event(event: str, kwargs)",
      "docstring": "Convenience function for security event logging.",
      "parameters": [
        {
          "name": "event",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "kwargs",
          "annotation": null,
          "default": null,
          "kind": "VAR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "security",
        "get_master_logger"
      ],
      "raises": [],
      "line_number": 673
    },
    {
      "id": "src.pokertool.master_logging.auto_log_errors",
      "type": "function",
      "name": "auto_log_errors",
      "module": "src.pokertool.master_logging",
      "signature": "def auto_log_errors(category: LogCategory)",
      "docstring": "Decorator that automatically logs errors from functions.",
      "parameters": [
        {
          "name": "category",
          "annotation": "LogCategory",
          "default": "LogCategory.GENERAL",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "func",
        "log_error",
        "str",
        "wraps"
      ],
      "raises": [],
      "line_number": 678
    },
    {
      "id": "src.pokertool.synthetic_data_generator",
      "type": "module",
      "path": "src/pokertool/synthetic_data_generator.py",
      "docstring": "Synthetic Scrape Data Generator\n================================\n\nDATA-030: Synthetic Scrape Data Generator\n\nExpands training coverage for rare layouts and exotic themes without requiring\nmanual screenshot collection.\n\nFeatures:\n- Programmatic poker table scene generation\n- Configurable themes, layouts, stakes, lighting\n- Randomized player names, stacks, cards, positions\n- Automatic ground truth label generation\n- Multiple rendering styles and variations\n- Export in QA harness compatible format\n\nModule: pokertool.synthetic_data_generator\nVersion: v47.0.0\nAuthor: PokerTool Development Team",
      "version": "'47.0.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 53,
      "loc": 605,
      "dependencies": [
        "logging",
        "random",
        "pathlib",
        "typing",
        "dataclasses",
        "json",
        "numpy"
      ]
    },
    {
      "id": "src.pokertool.synthetic_data_generator.TableTheme",
      "type": "class",
      "name": "TableTheme",
      "module": "src.pokertool.synthetic_data_generator",
      "docstring": "Poker table theme configuration.",
      "bases": [],
      "methods": [
        "__init__",
        "standard_green",
        "betfair_purple",
        "pokerstars_blue",
        "red_table",
        "dark_mode"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 6,
      "line_number": 57
    },
    {
      "id": "src.pokertool.synthetic_data_generator.PlayerSeat",
      "type": "class",
      "name": "PlayerSeat",
      "module": "src.pokertool.synthetic_data_generator",
      "docstring": "A player seat configuration.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 95
    },
    {
      "id": "src.pokertool.synthetic_data_generator.TableState",
      "type": "class",
      "name": "TableState",
      "module": "src.pokertool.synthetic_data_generator",
      "docstring": "Complete poker table state.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 108
    },
    {
      "id": "src.pokertool.synthetic_data_generator.SyntheticDataGenerator",
      "type": "class",
      "name": "SyntheticDataGenerator",
      "module": "src.pokertool.synthetic_data_generator",
      "docstring": "Generate synthetic poker table screenshots with ground truth labels.",
      "bases": [],
      "methods": [
        "__init__",
        "generate_deck",
        "deal_cards",
        "generate_player_name",
        "generate_table_state",
        "render_table",
        "_apply_variations",
        "generate_ground_truth",
        "generate_batch",
        "generate_manifest"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 46,
      "line_number": 120
    },
    {
      "id": "src.pokertool.synthetic_data_generator.generate_synthetic_dataset",
      "type": "function",
      "name": "generate_synthetic_dataset",
      "module": "src.pokertool.synthetic_data_generator",
      "signature": "def generate_synthetic_dataset(output_dir: Path, num_images: int, seed: int) -> Path",
      "docstring": "Convenience function to generate a complete synthetic dataset.\n\nArgs:\n    output_dir: Output directory\n    num_images: Number of images to generate\n    seed: Random seed for reproducibility\n\nReturns:\n    Path to manifest file",
      "parameters": [
        {
          "name": "output_dir",
          "annotation": "Path",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "num_images",
          "annotation": "int",
          "default": "100",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "seed",
          "annotation": "int",
          "default": "42",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Path",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "random.seed",
        "np.random.seed",
        "SyntheticDataGenerator",
        "generator.generate_batch",
        "generator.generate_manifest"
      ],
      "raises": [],
      "line_number": 538
    },
    {
      "id": "src.pokertool.storage",
      "type": "module",
      "path": "src/pokertool/storage.py",
      "docstring": "PokerTool Secure Storage Module\n================================\n\nProvides secure local storage using SQLite with encryption support,\ninput sanitization, and comprehensive security features for protecting\nsensitive poker analysis data.\n\nModule: pokertool.storage\nVersion: 20.0.0\nLast Modified: 2025-09-29\nAuthor: PokerTool Development Team\nLicense: MIT\n\nDependencies:\n    - sqlite3: Built-in database support\n    - hashlib: Data integrity verification\n    - json: Data serialization\n    - pathlib: File system operations\n\nSecurity Features:\n    - Input sanitization\n    - SQL injection prevention\n    - Database encryption (optional)\n    - Size limits and quotas\n    - Audit logging\n    - Secure deletion\n    - Access control\n\nDatabase Schema:\n    - hands: Store analyzed hands\n    - sessions: Track playing sessions\n    - settings: User preferences\n    - audit_log: Security audit trail\n\nChange Log:\n    - v28.0.0 (2025-09-29): Enhanced documentation, added encryption\n    - v19.0.0 (2025-09-18): Security improvements\n    - v18.0.0 (2025-09-15): Initial storage implementation",
      "version": "'20.0.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 57,
      "loc": 408,
      "dependencies": [
        "sqlite3",
        "pathlib",
        "hashlib",
        "time",
        "typing",
        "error_handling",
        "contextlib",
        "os"
      ]
    },
    {
      "id": "src.pokertool.storage.SecurityError",
      "type": "class",
      "name": "SecurityError",
      "module": "src.pokertool.storage",
      "docstring": "Raised when a security violation is detected.",
      "bases": [
        "Exception"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 68
    },
    {
      "id": "src.pokertool.storage.SecureDatabase",
      "type": "class",
      "name": "SecureDatabase",
      "module": "src.pokertool.storage",
      "docstring": "Secure database wrapper with SQL injection prevention and access controls.",
      "bases": [],
      "methods": [
        "__init__",
        "_initialize_schema",
        "_get_connection",
        "_rate_limit_check",
        "_log_security_event",
        "save_hand_analysis",
        "get_recent_hands",
        "create_session",
        "_validate_hand_format",
        "_validate_board_format",
        "_generate_user_hash",
        "backup_database",
        "cleanup_old_data"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 50,
      "line_number": 73
    },
    {
      "id": "src.pokertool.storage.get_secure_db",
      "type": "function",
      "name": "get_secure_db",
      "module": "src.pokertool.storage",
      "signature": "def get_secure_db() -> SecureDatabase",
      "docstring": "Get the global secure database instance.",
      "parameters": [],
      "return_type": "SecureDatabase",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "SecureDatabase"
      ],
      "raises": [],
      "line_number": 357
    },
    {
      "id": "src.pokertool.storage.init_db",
      "type": "function",
      "name": "init_db",
      "module": "src.pokertool.storage",
      "signature": "def init_db(db_path: str) -> str",
      "docstring": "Initialize database with security enhancements.\n\nArgs:\n    db_path: Path to the database file\n\nReturns:\n    The normalized database path",
      "parameters": [
        {
          "name": "db_path",
          "annotation": "str",
          "default": "DEFAULT_DB",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 4,
      "calls": [
        "str",
        "pathlib.Path",
        "path.parent.mkdir",
        "SecureDatabase",
        "secure_db._get_connection",
        "fetchone",
        "conn.execute",
        "log.info"
      ],
      "raises": [],
      "line_number": 365
    },
    {
      "id": "src.pokertool.storage.initialise_db_if_needed",
      "type": "function",
      "name": "initialise_db_if_needed",
      "module": "src.pokertool.storage",
      "signature": "def initialise_db_if_needed(db_path: str) -> str",
      "docstring": "Initialize database if needed (British spelling variant for compatibility).\n\nArgs:\n    db_path: Path to the database file\n\nReturns:\n    The normalized database path",
      "parameters": [
        {
          "name": "db_path",
          "annotation": "str",
          "default": "DEFAULT_DB",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "init_db"
      ],
      "raises": [],
      "line_number": 393
    },
    {
      "id": "src.pokertool.performance_profiler",
      "type": "module",
      "path": "src/pokertool/performance_profiler.py",
      "docstring": "Application performance profiling utilities and alerting.",
      "version": null,
      "author": null,
      "complexity": 24,
      "loc": 206,
      "dependencies": [
        "pathlib",
        "time",
        "__future__",
        "typing",
        "dataclasses",
        "json",
        "statistics"
      ]
    },
    {
      "id": "src.pokertool.performance_profiler.PerformanceSnapshot",
      "type": "class",
      "name": "PerformanceSnapshot",
      "module": "src.pokertool.performance_profiler",
      "docstring": "Captured performance metrics at a point in time.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 24
    },
    {
      "id": "src.pokertool.performance_profiler.AlertRule",
      "type": "class",
      "name": "AlertRule",
      "module": "src.pokertool.performance_profiler",
      "docstring": "Alert rule for performance thresholds.",
      "bases": [],
      "methods": [
        "triggered"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 3,
      "line_number": 36
    },
    {
      "id": "src.pokertool.performance_profiler.OptimizationSuggestion",
      "type": "class",
      "name": "OptimizationSuggestion",
      "module": "src.pokertool.performance_profiler",
      "docstring": "Suggestion generated from analysis.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 54
    },
    {
      "id": "src.pokertool.performance_profiler.ProfilingReport",
      "type": "class",
      "name": "ProfilingReport",
      "module": "src.pokertool.performance_profiler",
      "docstring": "Summarised profiling report.",
      "bases": [],
      "methods": [
        "to_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 63
    },
    {
      "id": "src.pokertool.performance_profiler.PerformanceProfiler",
      "type": "class",
      "name": "PerformanceProfiler",
      "module": "src.pokertool.performance_profiler",
      "docstring": "Collects performance snapshots and produces optimisation insights.",
      "bases": [],
      "methods": [
        "__init__",
        "capture_snapshot",
        "capture_current",
        "add_alert_rule",
        "_evaluate_alerts",
        "generate_report",
        "_suggest_optimizations",
        "export_history",
        "clear"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 20,
      "line_number": 84
    },
    {
      "id": "src.pokertool.advanced_reporting",
      "type": "module",
      "path": "src/pokertool/advanced_reporting.py",
      "docstring": "Comprehensive reporting utilities with templating, chart config, and delivery hooks.",
      "version": null,
      "author": null,
      "complexity": 18,
      "loc": 182,
      "dependencies": [
        "textwrap",
        "pathlib",
        "time",
        "__future__",
        "typing",
        "dataclasses",
        "json",
        "statistics"
      ]
    },
    {
      "id": "src.pokertool.advanced_reporting.ChartConfig",
      "type": "class",
      "name": "ChartConfig",
      "module": "src.pokertool.advanced_reporting",
      "docstring": "Chart configuration metadata.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 18
    },
    {
      "id": "src.pokertool.advanced_reporting.ReportSection",
      "type": "class",
      "name": "ReportSection",
      "module": "src.pokertool.advanced_reporting",
      "docstring": "Single section of a report.",
      "bases": [],
      "methods": [
        "render"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 30
    },
    {
      "id": "src.pokertool.advanced_reporting.ReportTemplate",
      "type": "class",
      "name": "ReportTemplate",
      "module": "src.pokertool.advanced_reporting",
      "docstring": "Reusable report template.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 50
    },
    {
      "id": "src.pokertool.advanced_reporting.ReportRequest",
      "type": "class",
      "name": "ReportRequest",
      "module": "src.pokertool.advanced_reporting",
      "docstring": "Input for building a custom report.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 61
    },
    {
      "id": "src.pokertool.advanced_reporting.ReportResult",
      "type": "class",
      "name": "ReportResult",
      "module": "src.pokertool.advanced_reporting",
      "docstring": "Finalized report payload.",
      "bases": [],
      "methods": [
        "to_json"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 70
    },
    {
      "id": "src.pokertool.advanced_reporting.ReportBuilder",
      "type": "class",
      "name": "ReportBuilder",
      "module": "src.pokertool.advanced_reporting",
      "docstring": "Core entry point for advanced reporting workflows.",
      "bases": [],
      "methods": [
        "__init__",
        "register_template",
        "list_templates",
        "get_template",
        "build_report",
        "export_pdf",
        "email_report",
        "delivery_log",
        "summarize_numeric_series",
        "save_report_json"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 15,
      "line_number": 89
    },
    {
      "id": "src.pokertool.startup_validator",
      "type": "module",
      "path": "src/pokertool/startup_validator.py",
      "docstring": "Startup Validation System for PokerTool\n========================================\n\nComprehensive health checks for all application features and modules.\nValidates that every component is properly initialized and functional.\n\nVersion: 2.0.0\nAuthor: PokerTool Development Team",
      "version": null,
      "author": null,
      "complexity": 75,
      "loc": 831,
      "dependencies": [
        "logging",
        "sys",
        "platform",
        "pathlib",
        "time",
        "__future__",
        "typing",
        "dataclasses",
        "subprocess",
        "enum"
      ]
    },
    {
      "id": "src.pokertool.startup_validator.HealthStatus",
      "type": "class",
      "name": "HealthStatus",
      "module": "src.pokertool.startup_validator",
      "docstring": "Health status for modules.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 27
    },
    {
      "id": "src.pokertool.startup_validator.ModuleHealth",
      "type": "class",
      "name": "ModuleHealth",
      "module": "src.pokertool.startup_validator",
      "docstring": "Health information for a single module.",
      "bases": [],
      "methods": [
        "to_dict",
        "get_icon",
        "get_summary"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 3,
      "line_number": 36
    },
    {
      "id": "src.pokertool.startup_validator.StartupValidator",
      "type": "class",
      "name": "StartupValidator",
      "module": "src.pokertool.startup_validator",
      "docstring": "Validates all application modules on startup and during runtime.",
      "bases": [],
      "methods": [
        "__init__",
        "validate_all",
        "_check_gui_modules",
        "_check_screen_scraper",
        "_check_enhanced_scraper",
        "_check_gto_solver",
        "_check_opponent_modeler",
        "_check_table_manager",
        "_check_database",
        "_check_coaching_system",
        "_check_analytics_dashboard",
        "_check_gamification_engine",
        "_check_community_platform",
        "_check_logging_system",
        "get_summary_report",
        "get_critical_failures",
        "has_critical_failures"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 49,
      "line_number": 78
    },
    {
      "id": "src.pokertool.startup_validator.DependencyCheck",
      "type": "class",
      "name": "DependencyCheck",
      "module": "src.pokertool.startup_validator",
      "docstring": "Result of a dependency check.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 499
    },
    {
      "id": "src.pokertool.startup_validator.check_dependencies",
      "type": "function",
      "name": "check_dependencies",
      "module": "src.pokertool.startup_validator",
      "signature": "def check_dependencies() -> Tuple[List[DependencyCheck], bool]",
      "docstring": "Check all required dependencies before app startup.\n\nReturns:\n    Tuple of (check_results, can_start)\n    - check_results: List of dependency check results\n    - can_start: True if app can start, False if critical deps missing",
      "parameters": [],
      "return_type": "Tuple[List[DependencyCheck], bool]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 11,
      "calls": [
        "checks.append",
        "DependencyCheck",
        "checks.append",
        "DependencyCheck",
        "platform.system",
        "platform.release",
        "checks.append",
        "DependencyCheck",
        "checks.append",
        "DependencyCheck",
        "checks.append",
        "DependencyCheck",
        "checks.append",
        "DependencyCheck",
        "checks.append",
        "DependencyCheck",
        "checks.append",
        "DependencyCheck",
        "getattr",
        "checks.append",
        "DependencyCheck",
        "checks.append",
        "DependencyCheck",
        "checks.append",
        "DependencyCheck",
        "checks.append",
        "DependencyCheck",
        "checks.append",
        "DependencyCheck",
        "torch.cuda.is_available",
        "torch.cuda.get_device_name",
        "checks.append",
        "DependencyCheck",
        "checks.append",
        "DependencyCheck",
        "checks.append",
        "DependencyCheck",
        "checks.append",
        "DependencyCheck",
        "subprocess.run",
        "result.stdout.split",
        "len",
        "version_line.split",
        "version_line.split",
        "checks.append",
        "DependencyCheck",
        "checks.append",
        "DependencyCheck",
        "checks.append",
        "DependencyCheck",
        "len"
      ],
      "raises": [],
      "line_number": 508
    },
    {
      "id": "src.pokertool.startup_validator.print_dependency_report",
      "type": "function",
      "name": "print_dependency_report",
      "module": "src.pokertool.startup_validator",
      "signature": "def print_dependency_report(checks: List[DependencyCheck], verbose: bool)",
      "docstring": "Print a formatted dependency report.",
      "parameters": [
        {
          "name": "checks",
          "annotation": "List[DependencyCheck]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "verbose",
          "annotation": "bool",
          "default": "False",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 8,
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "sum",
        "sum",
        "sum",
        "print",
        "print",
        "print",
        "print",
        "len",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "raises": [],
      "line_number": 721
    },
    {
      "id": "src.pokertool.startup_validator.validate_startup_dependencies",
      "type": "function",
      "name": "validate_startup_dependencies",
      "module": "src.pokertool.startup_validator",
      "signature": "def validate_startup_dependencies(verbose: bool) -> bool",
      "docstring": "Quick dependency check before app startup.\n\nReturns:\n    True if app can start, False if critical dependencies missing",
      "parameters": [
        {
          "name": "verbose",
          "annotation": "bool",
          "default": "False",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "bool",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 4,
      "calls": [
        "check_dependencies",
        "print_dependency_report",
        "prompt_for_poker_handle",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print"
      ],
      "raises": [],
      "line_number": 800
    },
    {
      "id": "src.pokertool.tournament_support",
      "type": "module",
      "path": "src/pokertool/tournament_support.py",
      "docstring": "PokerTool Tournament Support Module\n=====================================\n\nThis module provides functionality for tournament support operations\nwithin the PokerTool application ecosystem.\n\nModule: pokertool.tournament_support\nVersion: 20.0.0\nLast Modified: 2025-09-29\nAuthor: PokerTool Development Team\nLicense: MIT\n\nDependencies:\n    - See module imports for specific dependencies\n    - Python 3.10+ required\n\nChange Log:\n    - v28.0.0 (2025-09-29): Enhanced documentation\n    - v19.0.0 (2025-09-18): Bug fixes and improvements\n    - v18.0.0 (2025-09-15): Initial implementation",
      "version": "'20.0.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 67,
      "loc": 611,
      "dependencies": [
        "logging",
        "math",
        "typing",
        "dataclasses",
        "itertools",
        "enum"
      ]
    },
    {
      "id": "src.pokertool.tournament_support.TournamentPhase",
      "type": "class",
      "name": "TournamentPhase",
      "module": "src.pokertool.tournament_support",
      "docstring": "Different phases of tournament play.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 43
    },
    {
      "id": "src.pokertool.tournament_support.TournamentType",
      "type": "class",
      "name": "TournamentType",
      "module": "src.pokertool.tournament_support",
      "docstring": "Types of tournaments.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 52
    },
    {
      "id": "src.pokertool.tournament_support.TournamentStructure",
      "type": "class",
      "name": "TournamentStructure",
      "module": "src.pokertool.tournament_support",
      "docstring": "Tournament structure information.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 66
    },
    {
      "id": "src.pokertool.tournament_support.PayoutStructure",
      "type": "class",
      "name": "PayoutStructure",
      "module": "src.pokertool.tournament_support",
      "docstring": "Tournament payout structure.",
      "bases": [],
      "methods": [
        "get_payout_percentage"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 3,
      "line_number": 78
    },
    {
      "id": "src.pokertool.tournament_support.PlayerStack",
      "type": "class",
      "name": "PlayerStack",
      "module": "src.pokertool.tournament_support",
      "docstring": "Individual player's tournament stack.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 92
    },
    {
      "id": "src.pokertool.tournament_support.TournamentState",
      "type": "class",
      "name": "TournamentState",
      "module": "src.pokertool.tournament_support",
      "docstring": "Current state of tournament.",
      "bases": [],
      "methods": [
        "update_average_stack"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 100
    },
    {
      "id": "src.pokertool.tournament_support.ICMCalculator",
      "type": "class",
      "name": "ICMCalculator",
      "module": "src.pokertool.tournament_support",
      "docstring": "Independent Chip Model calculator for tournament equity.",
      "bases": [],
      "methods": [
        "calculate_icm_equity",
        "_calculate_player_equity",
        "calculate_bubble_factor"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 14,
      "line_number": 119
    },
    {
      "id": "src.pokertool.tournament_support.PushFoldCalculator",
      "type": "class",
      "name": "PushFoldCalculator",
      "module": "src.pokertool.tournament_support",
      "docstring": "Calculate optimal push/fold ranges for tournament play.",
      "bases": [],
      "methods": [
        "calculate_push_range",
        "calculate_call_range"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 13,
      "line_number": 219
    },
    {
      "id": "src.pokertool.tournament_support.TournamentStrategy",
      "type": "class",
      "name": "TournamentStrategy",
      "module": "src.pokertool.tournament_support",
      "docstring": "Tournament-specific strategy calculations.",
      "bases": [],
      "methods": [
        "determine_tournament_phase",
        "calculate_m_ratio",
        "get_strategy_recommendation",
        "calculate_satellite_strategy"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 22,
      "line_number": 290
    },
    {
      "id": "src.pokertool.tournament_support.TournamentAnalyzer",
      "type": "class",
      "name": "TournamentAnalyzer",
      "module": "src.pokertool.tournament_support",
      "docstring": "Comprehensive tournament analysis system.",
      "bases": [],
      "methods": [
        "__init__",
        "analyze_tournament_spot",
        "generate_push_fold_chart"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 8,
      "line_number": 417
    },
    {
      "id": "src.pokertool.tournament_support.get_tournament_analyzer",
      "type": "function",
      "name": "get_tournament_analyzer",
      "module": "src.pokertool.tournament_support",
      "signature": "def get_tournament_analyzer() -> TournamentAnalyzer",
      "docstring": "Get the global tournament analyzer instance.",
      "parameters": [],
      "return_type": "TournamentAnalyzer",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "TournamentAnalyzer"
      ],
      "raises": [],
      "line_number": 519
    },
    {
      "id": "src.pokertool.tournament_support.calculate_icm_equity",
      "type": "function",
      "name": "calculate_icm_equity",
      "module": "src.pokertool.tournament_support",
      "signature": "def calculate_icm_equity(stacks: List[int], payouts: List[float]) -> List[float]",
      "docstring": "Calculate ICM equity for tournament situation.",
      "parameters": [
        {
          "name": "stacks",
          "annotation": "List[int]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "payouts",
          "annotation": "List[float]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "List[float]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "ICMCalculator.calculate_icm_equity"
      ],
      "raises": [],
      "line_number": 526
    },
    {
      "id": "src.pokertool.tournament_support.get_tournament_strategy",
      "type": "function",
      "name": "get_tournament_strategy",
      "module": "src.pokertool.tournament_support",
      "signature": "def get_tournament_strategy(stack_bb: float, m_ratio: float, phase: str, bubble_factor: float) -> Dict[str, Any]",
      "docstring": "Get tournament strategy recommendation.",
      "parameters": [
        {
          "name": "stack_bb",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "m_ratio",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "phase",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "bubble_factor",
          "annotation": "float",
          "default": "1.0",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Dict[str, Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "TournamentPhase",
        "TournamentStrategy.get_strategy_recommendation"
      ],
      "raises": [],
      "line_number": 530
    },
    {
      "id": "src.pokertool.tournament_support.analyze_satellite_spot",
      "type": "function",
      "name": "analyze_satellite_spot",
      "module": "src.pokertool.tournament_support",
      "signature": "def analyze_satellite_spot(tickets: int, players_left: int, min_stack: int, current_stack: int) -> Dict[str, Any]",
      "docstring": "Analyze satellite tournament situation.",
      "parameters": [
        {
          "name": "tickets",
          "annotation": "int",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "players_left",
          "annotation": "int",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "min_stack",
          "annotation": "int",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "current_stack",
          "annotation": "int",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Dict[str, Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "TournamentStrategy.calculate_satellite_strategy"
      ],
      "raises": [],
      "line_number": 536
    },
    {
      "id": "src.pokertool.i18n",
      "type": "module",
      "path": "src/pokertool/i18n.py",
      "docstring": "Internationalization utilities for PokerTool.",
      "version": null,
      "author": null,
      "complexity": 51,
      "loc": 283,
      "dependencies": [
        "pathlib",
        "__future__",
        "typing",
        "dataclasses",
        "json",
        "decimal",
        "datetime",
        "threading"
      ]
    },
    {
      "id": "src.pokertool.i18n.LocaleListener",
      "type": "class",
      "name": "LocaleListener",
      "module": "src.pokertool.i18n",
      "docstring": "Callback container for locale change notifications.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 78
    },
    {
      "id": "src.pokertool.i18n.TranslationManager",
      "type": "class",
      "name": "TranslationManager",
      "module": "src.pokertool.i18n",
      "docstring": "Loads and serves translation strings for the application.",
      "bases": [],
      "methods": [
        "__init__",
        "current_locale",
        "available_locales",
        "translate",
        "set_locale",
        "format_decimal",
        "convert_currency",
        "format_currency",
        "format_datetime",
        "register_listener",
        "unregister_listener",
        "_ensure_locale_directory",
        "_load_locale",
        "_lookup",
        "_currency_symbol"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 41,
      "line_number": 85
    },
    {
      "id": "src.pokertool.i18n.translate",
      "type": "function",
      "name": "translate",
      "module": "src.pokertool.i18n",
      "signature": "def translate(key: str, default: Optional[str], kwargs: Any) -> str",
      "docstring": null,
      "parameters": [
        {
          "name": "key",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "default",
          "annotation": "Optional[str]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "kwargs",
          "annotation": "Any",
          "default": null,
          "kind": "VAR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "_translation_manager.translate"
      ],
      "raises": [],
      "line_number": 232
    },
    {
      "id": "src.pokertool.i18n.set_locale",
      "type": "function",
      "name": "set_locale",
      "module": "src.pokertool.i18n",
      "signature": "def set_locale(locale_code: str) -> None",
      "docstring": null,
      "parameters": [
        {
          "name": "locale_code",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "None",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "_translation_manager.set_locale"
      ],
      "raises": [],
      "line_number": 236
    },
    {
      "id": "src.pokertool.i18n.get_current_locale",
      "type": "function",
      "name": "get_current_locale",
      "module": "src.pokertool.i18n",
      "signature": "def get_current_locale() -> str",
      "docstring": null,
      "parameters": [],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [],
      "raises": [],
      "line_number": 240
    },
    {
      "id": "src.pokertool.i18n.available_locales",
      "type": "function",
      "name": "available_locales",
      "module": "src.pokertool.i18n",
      "signature": "def available_locales() -> List[Dict[str, str]]",
      "docstring": null,
      "parameters": [],
      "return_type": "List[Dict[str, str]]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "_translation_manager.available_locales"
      ],
      "raises": [],
      "line_number": 244
    },
    {
      "id": "src.pokertool.i18n.format_decimal",
      "type": "function",
      "name": "format_decimal",
      "module": "src.pokertool.i18n",
      "signature": "def format_decimal(value: float, digits: int) -> str",
      "docstring": null,
      "parameters": [
        {
          "name": "value",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "digits",
          "annotation": "int",
          "default": "0",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "_translation_manager.format_decimal"
      ],
      "raises": [],
      "line_number": 248
    },
    {
      "id": "src.pokertool.i18n.format_currency",
      "type": "function",
      "name": "format_currency",
      "module": "src.pokertool.i18n",
      "signature": "def format_currency(amount_usd: float, currency: Optional[str]) -> str",
      "docstring": null,
      "parameters": [
        {
          "name": "amount_usd",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "currency",
          "annotation": "Optional[str]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "_translation_manager.format_currency"
      ],
      "raises": [],
      "line_number": 252
    },
    {
      "id": "src.pokertool.i18n.convert_currency",
      "type": "function",
      "name": "convert_currency",
      "module": "src.pokertool.i18n",
      "signature": "def convert_currency(amount_usd: float, target_currency: str) -> float",
      "docstring": null,
      "parameters": [
        {
          "name": "amount_usd",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "target_currency",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "float",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "_translation_manager.convert_currency"
      ],
      "raises": [],
      "line_number": 256
    },
    {
      "id": "src.pokertool.i18n.format_datetime",
      "type": "function",
      "name": "format_datetime",
      "module": "src.pokertool.i18n",
      "signature": "def format_datetime(dt: datetime) -> str",
      "docstring": null,
      "parameters": [
        {
          "name": "dt",
          "annotation": "datetime",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "_translation_manager.format_datetime"
      ],
      "raises": [],
      "line_number": 260
    },
    {
      "id": "src.pokertool.i18n.register_locale_listener",
      "type": "function",
      "name": "register_locale_listener",
      "module": "src.pokertool.i18n",
      "signature": "def register_locale_listener(callback: Callable[[str], None]) -> int",
      "docstring": null,
      "parameters": [
        {
          "name": "callback",
          "annotation": "Callable[[str], None]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "int",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "_translation_manager.register_listener"
      ],
      "raises": [],
      "line_number": 264
    },
    {
      "id": "src.pokertool.i18n.unregister_locale_listener",
      "type": "function",
      "name": "unregister_locale_listener",
      "module": "src.pokertool.i18n",
      "signature": "def unregister_locale_listener(token: int) -> None",
      "docstring": null,
      "parameters": [
        {
          "name": "token",
          "annotation": "int",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "None",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "_translation_manager.unregister_listener"
      ],
      "raises": [],
      "line_number": 268
    },
    {
      "id": "src.pokertool.gpu_preprocessing",
      "type": "module",
      "path": "src/pokertool/gpu_preprocessing.py",
      "docstring": "GPU Accelerated Preprocessing Pipeline\n=======================================\n\nSCRAPE-013: GPU Accelerated Preprocessing Pipeline\n\nReduces preprocessing latency for high resolution captures while improving\ncolour and geometric normalisation.\n\nFeatures:\n- OpenCL/CUDA acceleration for heavy operations\n- Automatic fallback to CPU when GPU unavailable\n- Runtime capability detection\n- Performance monitoring and profiling\n- Operations: blur, CLAHE, denoise, deskew, perspective correction\n\nModule: pokertool.gpu_preprocessing\nVersion: v45.0.0\nAuthor: PokerTool Development Team",
      "version": "'45.0.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 86,
      "loc": 791,
      "dependencies": [
        "logging",
        "platform",
        "numpy",
        "time",
        "typing",
        "dataclasses",
        "enum"
      ]
    },
    {
      "id": "src.pokertool.gpu_preprocessing.AcceleratorType",
      "type": "class",
      "name": "AcceleratorType",
      "module": "src.pokertool.gpu_preprocessing",
      "docstring": "Types of hardware acceleration available.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 70
    },
    {
      "id": "src.pokertool.gpu_preprocessing.PerformanceMetrics",
      "type": "class",
      "name": "PerformanceMetrics",
      "module": "src.pokertool.gpu_preprocessing",
      "docstring": "Performance metrics for preprocessing operations.",
      "bases": [],
      "methods": [
        "__str__"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 78
    },
    {
      "id": "src.pokertool.gpu_preprocessing.GPUCapabilities",
      "type": "class",
      "name": "GPUCapabilities",
      "module": "src.pokertool.gpu_preprocessing",
      "docstring": "Information about available GPU acceleration.",
      "bases": [],
      "methods": [
        "__post_init__",
        "summary"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 12,
      "line_number": 93
    },
    {
      "id": "src.pokertool.gpu_preprocessing.GPUPreprocessor",
      "type": "class",
      "name": "GPUPreprocessor",
      "module": "src.pokertool.gpu_preprocessing",
      "docstring": "GPU-accelerated image preprocessing for poker table scraping.\n\nAutomatically selects best available acceleration (CUDA > OpenCL > CPU)\nand provides fallbacks for all operations.",
      "bases": [],
      "methods": [
        "__init__",
        "_detect_capabilities",
        "_record_metric",
        "denoise",
        "_denoise_cuda",
        "_denoise_opencl",
        "_denoise_cpu",
        "clahe",
        "_clahe_cuda",
        "_clahe_opencl",
        "_clahe_cpu",
        "gaussian_blur",
        "_gaussian_blur_cuda",
        "_gaussian_blur_opencl",
        "_gaussian_blur_cpu",
        "median_blur",
        "_median_blur_cuda",
        "_median_blur_opencl",
        "_median_blur_cpu",
        "morphology",
        "_morphology_cuda",
        "_morphology_opencl",
        "_morphology_cpu",
        "perspective_correction",
        "_perspective_cuda",
        "_perspective_opencl",
        "_perspective_cpu",
        "full_preprocessing_pipeline",
        "get_performance_summary",
        "clear_metrics"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 62,
      "line_number": 139
    },
    {
      "id": "src.pokertool.gpu_preprocessing.get_gpu_preprocessor",
      "type": "function",
      "name": "get_gpu_preprocessor",
      "module": "src.pokertool.gpu_preprocessing",
      "signature": "def get_gpu_preprocessor(force_accelerator: Optional[AcceleratorType]) -> GPUPreprocessor",
      "docstring": "Get singleton GPU preprocessor instance.",
      "parameters": [
        {
          "name": "force_accelerator",
          "annotation": "Optional[AcceleratorType]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "GPUPreprocessor",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "GPUPreprocessor"
      ],
      "raises": [],
      "line_number": 672
    },
    {
      "id": "src.pokertool.gpu_preprocessing.benchmark_accelerators",
      "type": "function",
      "name": "benchmark_accelerators",
      "module": "src.pokertool.gpu_preprocessing",
      "signature": "def benchmark_accelerators() -> Dict[str, Any]",
      "docstring": "Benchmark all available accelerators.\n\nReturns:\n    Dictionary with benchmark results",
      "parameters": [],
      "return_type": "Dict[str, Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 9,
      "calls": [
        "platform.processor",
        "platform.machine",
        "GPUPreprocessor",
        "np.random.randint",
        "time.time",
        "preprocessor.denoise",
        "time.time",
        "time.time",
        "preprocessor.clahe",
        "time.time",
        "time.time",
        "preprocessor.gaussian_blur",
        "time.time",
        "time.time",
        "preprocessor.full_preprocessing_pipeline",
        "time.time",
        "logger.error",
        "str"
      ],
      "raises": [],
      "line_number": 680
    },
    {
      "id": "src.pokertool.error_handler",
      "type": "module",
      "path": "src/pokertool/error_handler.py",
      "docstring": "Global Error Handler Module\n============================\n\nComprehensive error handling system with detailed logging, user-friendly\nmessages, and error categorization for the PokerTool application.\n\nModule: pokertool.error_handler\nVersion: 1.0.0",
      "version": null,
      "author": null,
      "complexity": 27,
      "loc": 289,
      "dependencies": [
        "logging",
        "sys",
        "traceback",
        "typing",
        "dataclasses",
        "enum",
        "datetime"
      ]
    },
    {
      "id": "src.pokertool.error_handler.ErrorSeverity",
      "type": "class",
      "name": "ErrorSeverity",
      "module": "src.pokertool.error_handler",
      "docstring": "Error severity levels for categorization",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 24
    },
    {
      "id": "src.pokertool.error_handler.ErrorCategory",
      "type": "class",
      "name": "ErrorCategory",
      "module": "src.pokertool.error_handler",
      "docstring": "Error categories for better organization",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 32
    },
    {
      "id": "src.pokertool.error_handler.ErrorContext",
      "type": "class",
      "name": "ErrorContext",
      "module": "src.pokertool.error_handler",
      "docstring": "Context information for an error",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 47
    },
    {
      "id": "src.pokertool.error_handler.PokerToolError",
      "type": "class",
      "name": "PokerToolError",
      "module": "src.pokertool.error_handler",
      "docstring": "Base exception for PokerTool application",
      "bases": [
        "Exception"
      ],
      "methods": [
        "__init__",
        "_get_default_user_message"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 3,
      "line_number": 60
    },
    {
      "id": "src.pokertool.error_handler.SystemError",
      "type": "class",
      "name": "SystemError",
      "module": "src.pokertool.error_handler",
      "docstring": "System-level errors",
      "bases": [
        "PokerToolError"
      ],
      "methods": [
        "__init__"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 83
    },
    {
      "id": "src.pokertool.error_handler.NetworkError",
      "type": "class",
      "name": "NetworkError",
      "module": "src.pokertool.error_handler",
      "docstring": "Network-related errors",
      "bases": [
        "PokerToolError"
      ],
      "methods": [
        "__init__"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 95
    },
    {
      "id": "src.pokertool.error_handler.DatabaseError",
      "type": "class",
      "name": "DatabaseError",
      "module": "src.pokertool.error_handler",
      "docstring": "Database operation errors",
      "bases": [
        "PokerToolError"
      ],
      "methods": [
        "__init__"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 107
    },
    {
      "id": "src.pokertool.error_handler.MLModelError",
      "type": "class",
      "name": "MLModelError",
      "module": "src.pokertool.error_handler",
      "docstring": "Machine learning model errors",
      "bases": [
        "PokerToolError"
      ],
      "methods": [
        "__init__"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 119
    },
    {
      "id": "src.pokertool.error_handler.ScrapingError",
      "type": "class",
      "name": "ScrapingError",
      "module": "src.pokertool.error_handler",
      "docstring": "Screen scraping errors",
      "bases": [
        "PokerToolError"
      ],
      "methods": [
        "__init__"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 131
    },
    {
      "id": "src.pokertool.error_handler.ValidationError",
      "type": "class",
      "name": "ValidationError",
      "module": "src.pokertool.error_handler",
      "docstring": "Input validation errors",
      "bases": [
        "PokerToolError"
      ],
      "methods": [
        "__init__"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 143
    },
    {
      "id": "src.pokertool.error_handler.GlobalErrorHandler",
      "type": "class",
      "name": "GlobalErrorHandler",
      "module": "src.pokertool.error_handler",
      "docstring": "Global error handler with logging and user-friendly messaging",
      "bases": [],
      "methods": [
        "__init__",
        "handle_error",
        "_log_error",
        "get_error_stats",
        "clear_history"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 15,
      "line_number": 155
    },
    {
      "id": "src.pokertool.error_handler.handle_error",
      "type": "function",
      "name": "handle_error",
      "module": "src.pokertool.error_handler",
      "signature": "def handle_error(error: Exception, context: Optional[Dict[str, Any]]) -> ErrorContext",
      "docstring": "Convenience function to use global error handler",
      "parameters": [
        {
          "name": "error",
          "annotation": "Exception",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "context",
          "annotation": "Optional[Dict[str, Any]]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "ErrorContext",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "_global_error_handler.handle_error"
      ],
      "raises": [],
      "line_number": 275
    },
    {
      "id": "src.pokertool.error_handler.get_error_stats",
      "type": "function",
      "name": "get_error_stats",
      "module": "src.pokertool.error_handler",
      "signature": "def get_error_stats() -> Dict[str, Any]",
      "docstring": "Get global error statistics",
      "parameters": [],
      "return_type": "Dict[str, Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "_global_error_handler.get_error_stats"
      ],
      "raises": [],
      "line_number": 280
    },
    {
      "id": "src.pokertool.error_handler.setup_error_handler",
      "type": "function",
      "name": "setup_error_handler",
      "module": "src.pokertool.error_handler",
      "signature": "def setup_error_handler(logger: logging.Logger) -> GlobalErrorHandler",
      "docstring": "Setup global error handler with custom logger",
      "parameters": [
        {
          "name": "logger",
          "annotation": "logging.Logger",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "GlobalErrorHandler",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "GlobalErrorHandler"
      ],
      "raises": [],
      "line_number": 285
    },
    {
      "id": "src.pokertool.__init__ 2",
      "type": "module",
      "path": "src/pokertool/__init__ 2.py",
      "docstring": "PokerTool   Init   Module\n===========================\n\nThis module provides functionality for   init   operations\nwithin the PokerTool application ecosystem.\n\nModule: pokertool.__init__\nVersion: 20.0.0\nLast Modified: 2025-09-29\nAuthor: PokerTool Development Team\nLicense: MIT\n\nDependencies:\n    - See module imports for specific dependencies\n    - Python 3.10+ required\n\nChange Log:\n    - v28.0.0 (2025-09-29): Enhanced documentation\n    - v19.0.0 (2025-09-18): Bug fixes and improvements\n    - v18.0.0 (2025-09-15): Initial implementation",
      "version": "'28.0.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 0,
      "loc": 54,
      "dependencies": []
    },
    {
      "id": "src.pokertool.floating_advice_window",
      "type": "module",
      "path": "src/pokertool/floating_advice_window.py",
      "docstring": "Lightweight floating advice window primitives used by the PokerTool desktop UI.\n\nThe production project renders advice inside a tkinter overlay.  For the test\nsuite we only need deterministic, side-effect free behaviour: storing the most\nrecent advice, respecting update throttling, and exposing simple show/hide\noperations.  The implementation below keeps the public API intact while\ngracefully degrading when tkinter or a GUI environment is unavailable.",
      "version": null,
      "author": null,
      "complexity": 23,
      "loc": 163,
      "dependencies": [
        "time",
        "__future__",
        "typing",
        "dataclasses",
        "enum",
        "os"
      ]
    },
    {
      "id": "src.pokertool.floating_advice_window.ActionType",
      "type": "class",
      "name": "ActionType",
      "module": "src.pokertool.floating_advice_window",
      "docstring": "Supported decision categories surfaced to the player.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 25
    },
    {
      "id": "src.pokertool.floating_advice_window.ConfidenceLevel",
      "type": "class",
      "name": "ConfidenceLevel",
      "module": "src.pokertool.floating_advice_window",
      "docstring": "Discrete confidence buckets used for colouring the advice overlay.",
      "bases": [
        "Enum"
      ],
      "methods": [
        "__init__",
        "from_confidence"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 4,
      "line_number": 35
    },
    {
      "id": "src.pokertool.floating_advice_window.Advice",
      "type": "class",
      "name": "Advice",
      "module": "src.pokertool.floating_advice_window",
      "docstring": "Container for a single piece of strategic advice.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 60
    },
    {
      "id": "src.pokertool.floating_advice_window.FloatingAdviceWindow",
      "type": "class",
      "name": "FloatingAdviceWindow",
      "module": "src.pokertool.floating_advice_window",
      "docstring": "Minimal window controller for displaying poker advice.\n\nThe controller keeps the latest advice, ensures updates are throttled, and\nexposes show/hide semantics compatible with the production UI.  GUI work is\ndeliberately deferred to keep automated tests headless-friendly.",
      "bases": [],
      "methods": [
        "__init__",
        "update_advice",
        "clear_advice",
        "show",
        "hide",
        "destroy",
        "_render"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 19,
      "line_number": 73
    },
    {
      "id": "src.pokertool.study_mode",
      "type": "module",
      "path": "src/pokertool/study_mode.py",
      "docstring": "Study mode utilities: quizzes, flashcards, and progress tracking.",
      "version": null,
      "author": null,
      "complexity": 47,
      "loc": 387,
      "dependencies": [
        "random",
        "math",
        "pathlib",
        "time",
        "__future__",
        "typing",
        "dataclasses",
        "json"
      ]
    },
    {
      "id": "src.pokertool.study_mode.Flashcard",
      "type": "class",
      "name": "Flashcard",
      "module": "src.pokertool.study_mode",
      "docstring": "Simple spaced-repetition flashcard.",
      "bases": [],
      "methods": [
        "mark_scheduled"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 27
    },
    {
      "id": "src.pokertool.study_mode.QuizQuestion",
      "type": "class",
      "name": "QuizQuestion",
      "module": "src.pokertool.study_mode",
      "docstring": "Multiple choice quiz question.",
      "bases": [],
      "methods": [
        "is_correct"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 50
    },
    {
      "id": "src.pokertool.study_mode.QuizResult",
      "type": "class",
      "name": "QuizResult",
      "module": "src.pokertool.study_mode",
      "docstring": "Result payload returned after grading a quiz.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 65
    },
    {
      "id": "src.pokertool.study_mode.Lesson",
      "type": "class",
      "name": "Lesson",
      "module": "src.pokertool.study_mode",
      "docstring": "Structured study lesson.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 78
    },
    {
      "id": "src.pokertool.study_mode.StudyProgress",
      "type": "class",
      "name": "StudyProgress",
      "module": "src.pokertool.study_mode",
      "docstring": "Aggregated snapshot for UI dashboards.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 92
    },
    {
      "id": "src.pokertool.study_mode.StudyPersistence",
      "type": "class",
      "name": "StudyPersistence",
      "module": "src.pokertool.study_mode",
      "docstring": "JSON persistence for study assets.",
      "bases": [],
      "methods": [
        "__init__",
        "load",
        "save"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 104
    },
    {
      "id": "src.pokertool.study_mode.SpacedRepetitionScheduler",
      "type": "class",
      "name": "SpacedRepetitionScheduler",
      "module": "src.pokertool.study_mode",
      "docstring": "Implements an SM-2 inspired spaced-repetition algorithm.",
      "bases": [],
      "methods": [
        "schedule"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 142
    },
    {
      "id": "src.pokertool.study_mode.QuizSession",
      "type": "class",
      "name": "QuizSession",
      "module": "src.pokertool.study_mode",
      "docstring": "Represents an in-progress quiz.",
      "bases": [],
      "methods": [
        "__init__",
        "answer",
        "grade"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 171
    },
    {
      "id": "src.pokertool.study_mode.StudyModeManager",
      "type": "class",
      "name": "StudyModeManager",
      "module": "src.pokertool.study_mode",
      "docstring": "High-level API for study mode features.",
      "bases": [],
      "methods": [
        "__init__",
        "upsert_flashcards",
        "get_due_flashcards",
        "review_flashcard",
        "start_quiz",
        "finalize_quiz",
        "add_lessons",
        "complete_lesson",
        "get_lessons",
        "get_progress_snapshot",
        "export_state",
        "_persist",
        "_update_streak",
        "_asdict"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 29,
      "line_number": 200
    },
    {
      "id": "src.pokertool.study_mode._now",
      "type": "function",
      "name": "_now",
      "module": "src.pokertool.study_mode",
      "signature": "def _now() -> float",
      "docstring": null,
      "parameters": [],
      "return_type": "float",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "time.time"
      ],
      "raises": [],
      "line_number": 22
    },
    {
      "id": "src.pokertool.bluff_detection",
      "type": "module",
      "path": "src/pokertool/bluff_detection.py",
      "docstring": "Heuristic-driven AI bluff detection for PokerTool.",
      "version": null,
      "author": null,
      "complexity": 52,
      "loc": 272,
      "dependencies": [
        "ml_opponent_modeling",
        "time",
        "__future__",
        "typing",
        "dataclasses",
        "collections",
        "statistics",
        "gto_solver"
      ]
    },
    {
      "id": "src.pokertool.bluff_detection.ActionTiming",
      "type": "class",
      "name": "ActionTiming",
      "module": "src.pokertool.bluff_detection",
      "docstring": "Capture timing data for a single betting decision.",
      "bases": [],
      "methods": [
        "__post_init__"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 16
    },
    {
      "id": "src.pokertool.bluff_detection.ShowdownObservation",
      "type": "class",
      "name": "ShowdownObservation",
      "module": "src.pokertool.bluff_detection",
      "docstring": "Observed showdown outcome used for learning.",
      "bases": [],
      "methods": [
        "__post_init__"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 41
    },
    {
      "id": "src.pokertool.bluff_detection.BluffAssessment",
      "type": "class",
      "name": "BluffAssessment",
      "module": "src.pokertool.bluff_detection",
      "docstring": "Output of a bluff analysis pass for a single hand.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 53
    },
    {
      "id": "src.pokertool.bluff_detection.PlayerBluffProfile",
      "type": "class",
      "name": "PlayerBluffProfile",
      "module": "src.pokertool.bluff_detection",
      "docstring": "Persisted bluff-related telemetry for a player.",
      "bases": [],
      "methods": [
        "bluff_frequency",
        "average_probability"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 4,
      "line_number": 64
    },
    {
      "id": "src.pokertool.bluff_detection.BluffDetectionEngine",
      "type": "class",
      "name": "BluffDetectionEngine",
      "module": "src.pokertool.bluff_detection",
      "docstring": "Central orchestrator for bluff signal analysis.",
      "bases": [],
      "methods": [
        "__init__",
        "analyse_hand",
        "get_profile",
        "get_bluff_frequency",
        "_score_timing_signals",
        "_score_betting_patterns",
        "_score_historical",
        "_calculate_reliability",
        "_update_from_showdown"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 42,
      "line_number": 89
    },
    {
      "id": "src.pokertool.solver_api",
      "type": "module",
      "path": "src/pokertool/solver_api.py",
      "docstring": "Real-Time Solver API\n\nProvides fast API for real-time solver queries with caching, approximation,\nparallel computation, progressive refinement, and latency optimization.\n\nID: SOLVER-API-001\nStatus: COMPLETED\nPriority: MEDIUM",
      "version": null,
      "author": null,
      "complexity": 70,
      "loc": 565,
      "dependencies": [
        "hashlib",
        "time",
        "typing",
        "dataclasses",
        "collections",
        "json",
        "concurrent",
        "threading",
        "src"
      ]
    },
    {
      "id": "src.pokertool.solver_api.SolverQuery",
      "type": "class",
      "name": "SolverQuery",
      "module": "src.pokertool.solver_api",
      "docstring": "Represents a solver query with game state and parameters.",
      "bases": [],
      "methods": [
        "to_cache_key"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 29
    },
    {
      "id": "src.pokertool.solver_api.SolverResult",
      "type": "class",
      "name": "SolverResult",
      "module": "src.pokertool.solver_api",
      "docstring": "Result from a solver query.",
      "bases": [],
      "methods": [
        "to_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 50
    },
    {
      "id": "src.pokertool.solver_api.SolverCache",
      "type": "class",
      "name": "SolverCache",
      "module": "src.pokertool.solver_api",
      "docstring": "LRU cache for solver results with TTL support.",
      "bases": [],
      "methods": [
        "__init__",
        "get",
        "put",
        "clear",
        "get_stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 13,
      "line_number": 65
    },
    {
      "id": "src.pokertool.solver_api.ApproximationEngine",
      "type": "class",
      "name": "ApproximationEngine",
      "module": "src.pokertool.solver_api",
      "docstring": "Provides fast approximation algorithms for solver queries.",
      "bases": [],
      "methods": [
        "__init__",
        "approximate_range",
        "approximate_action",
        "approximate_equity",
        "approximate_ev"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 7,
      "line_number": 135
    },
    {
      "id": "src.pokertool.solver_api.ProgressiveRefiner",
      "type": "class",
      "name": "ProgressiveRefiner",
      "module": "src.pokertool.solver_api",
      "docstring": "Progressively refines solver results within time constraints.",
      "bases": [],
      "methods": [
        "__init__",
        "refine"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 7,
      "line_number": 219
    },
    {
      "id": "src.pokertool.solver_api.LatencyOptimizer",
      "type": "class",
      "name": "LatencyOptimizer",
      "module": "src.pokertool.solver_api",
      "docstring": "Optimizes query latency through various techniques.",
      "bases": [],
      "methods": [
        "__init__",
        "record_latency",
        "get_average_latency",
        "get_p95_latency",
        "optimize_query",
        "get_stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 10,
      "line_number": 254
    },
    {
      "id": "src.pokertool.solver_api.ParallelSolverExecutor",
      "type": "class",
      "name": "ParallelSolverExecutor",
      "module": "src.pokertool.solver_api",
      "docstring": "Executes multiple solver queries in parallel.",
      "bases": [],
      "methods": [
        "__init__",
        "execute_parallel",
        "shutdown"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 6,
      "line_number": 300
    },
    {
      "id": "src.pokertool.solver_api.RealtimeSolverAPI",
      "type": "class",
      "name": "RealtimeSolverAPI",
      "module": "src.pokertool.solver_api",
      "docstring": "Main API for real-time solver queries.\n\nProvides fast access to solver results with caching, approximation,\nparallel computation, progressive refinement, and latency optimization.",
      "bases": [],
      "methods": [
        "__init__",
        "query",
        "query_batch",
        "register_population_profile",
        "compute_gto_deviation",
        "_approximate_query",
        "_exact_query",
        "get_stats",
        "clear_cache",
        "shutdown"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 22,
      "line_number": 338
    },
    {
      "id": "src.pokertool.solver_api.create_solver_api",
      "type": "function",
      "name": "create_solver_api",
      "module": "src.pokertool.solver_api",
      "signature": "def create_solver_api(cache_size: int, cache_ttl: int, max_workers: int) -> RealtimeSolverAPI",
      "docstring": "Create a new RealtimeSolverAPI instance.",
      "parameters": [
        {
          "name": "cache_size",
          "annotation": "int",
          "default": "1000",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "cache_ttl",
          "annotation": "int",
          "default": "3600",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "max_workers",
          "annotation": "int",
          "default": "4",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "RealtimeSolverAPI",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "RealtimeSolverAPI"
      ],
      "raises": [],
      "line_number": 528
    },
    {
      "id": "src.pokertool.solver_api.quick_query",
      "type": "function",
      "name": "quick_query",
      "module": "src.pokertool.solver_api",
      "signature": "def quick_query(game_state: Dict[str, Any], query_type: str, parameters: Dict[str, Any], api: Optional[RealtimeSolverAPI]) -> SolverResult",
      "docstring": "Quick convenience function for simple queries.\n\nArgs:\n    game_state: Current game state\n    query_type: Type of query ('range', 'action', 'equity', 'ev')\n    parameters: Query parameters\n    api: Optional API instance (creates new one if not provided)\n    \nReturns:\n    SolverResult",
      "parameters": [
        {
          "name": "game_state",
          "annotation": "Dict[str, Any]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "query_type",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "parameters",
          "annotation": "Dict[str, Any]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "api",
          "annotation": "Optional[RealtimeSolverAPI]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "SolverResult",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "create_solver_api",
        "SolverQuery",
        "api.query"
      ],
      "raises": [],
      "line_number": 539
    },
    {
      "id": "src.pokertool.gto_deviations",
      "type": "module",
      "path": "src/pokertool/gto_deviations.py",
      "docstring": "GTO Deviations Module\n=====================\n\nCalculates profitable deviations from Game Theory Optimal (GTO) strategy\nbased on opponent tendencies and population biases.\n\nThis module provides tools for:\n- Maximum exploitation strategy finding\n- Population tendency adjustments\n- Node-locking strategies\n- Strategy simplification\n- Deviation EV calculation\n\nAuthor: PokerTool Development Team\nVersion: 1.0.0\nLast Modified: 2025-10-02",
      "version": null,
      "author": null,
      "complexity": 93,
      "loc": 969,
      "dependencies": [
        "logging",
        "numpy",
        "__future__",
        "typing",
        "dataclasses",
        "collections",
        "json",
        "enum"
      ]
    },
    {
      "id": "src.pokertool.gto_deviations.ActionType",
      "type": "class",
      "name": "ActionType",
      "module": "src.pokertool.gto_deviations",
      "docstring": "Poker action types.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 36
    },
    {
      "id": "src.pokertool.gto_deviations.StrategyType",
      "type": "class",
      "name": "StrategyType",
      "module": "src.pokertool.gto_deviations",
      "docstring": "Strategy deviation types.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 45
    },
    {
      "id": "src.pokertool.gto_deviations.PopulationTendency",
      "type": "class",
      "name": "PopulationTendency",
      "module": "src.pokertool.gto_deviations",
      "docstring": "Population tendency data.",
      "bases": [],
      "methods": [
        "is_significant"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 54
    },
    {
      "id": "src.pokertool.gto_deviations.OpponentModel",
      "type": "class",
      "name": "OpponentModel",
      "module": "src.pokertool.gto_deviations",
      "docstring": "Model of opponent's strategy deviations from GTO.",
      "bases": [],
      "methods": [
        "add_tendency",
        "get_tendency",
        "is_tight",
        "is_aggressive",
        "get_style"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 11,
      "line_number": 67
    },
    {
      "id": "src.pokertool.gto_deviations.Deviation",
      "type": "class",
      "name": "Deviation",
      "module": "src.pokertool.gto_deviations",
      "docstring": "A profitable deviation from GTO strategy.",
      "bases": [],
      "methods": [
        "to_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 108
    },
    {
      "id": "src.pokertool.gto_deviations.PopulationProfile",
      "type": "class",
      "name": "PopulationProfile",
      "module": "src.pokertool.gto_deviations",
      "docstring": "Population profile for GTO deviations.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 134
    },
    {
      "id": "src.pokertool.gto_deviations.DeviationRequest",
      "type": "class",
      "name": "DeviationRequest",
      "module": "src.pokertool.gto_deviations",
      "docstring": "Request for GTO deviation calculation.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 142
    },
    {
      "id": "src.pokertool.gto_deviations.DeviationResult",
      "type": "class",
      "name": "DeviationResult",
      "module": "src.pokertool.gto_deviations",
      "docstring": "Result of GTO deviation calculation.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 156
    },
    {
      "id": "src.pokertool.gto_deviations.MaximumExploitationFinder",
      "type": "class",
      "name": "MaximumExploitationFinder",
      "module": "src.pokertool.gto_deviations",
      "docstring": "Finds maximum exploitation strategies against specific opponents.",
      "bases": [],
      "methods": [
        "__init__",
        "find_exploits",
        "_find_counter_strategy",
        "_calculate_fold_exploit_ev",
        "_calculate_call_exploit_ev",
        "_calculate_raise_exploit_ev"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 18,
      "line_number": 165
    },
    {
      "id": "src.pokertool.gto_deviations.NodeLocker",
      "type": "class",
      "name": "NodeLocker",
      "module": "src.pokertool.gto_deviations",
      "docstring": "Implements node-locking strategies to simplify decision trees.\n\nNode-locking \"locks\" certain nodes in the game tree to specific actions,\nsimplifying the strategy while maintaining exploitative power.",
      "bases": [],
      "methods": [
        "__init__",
        "lock_node",
        "unlock_node",
        "is_locked",
        "get_action",
        "apply_locking_strategy",
        "_get_counter_action"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 16,
      "line_number": 283
    },
    {
      "id": "src.pokertool.gto_deviations.StrategySimplifier",
      "type": "class",
      "name": "StrategySimplifier",
      "module": "src.pokertool.gto_deviations",
      "docstring": "Simplifies complex GTO strategies while maintaining EV.",
      "bases": [],
      "methods": [
        "__init__",
        "simplify",
        "merge_similar_actions"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 9,
      "line_number": 372
    },
    {
      "id": "src.pokertool.gto_deviations.DeviationEVCalculator",
      "type": "class",
      "name": "DeviationEVCalculator",
      "module": "src.pokertool.gto_deviations",
      "docstring": "Calculator for EV-related computations in GTO deviations.",
      "bases": [],
      "methods": [
        "expected_value",
        "ev_gain"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 3,
      "line_number": 456
    },
    {
      "id": "src.pokertool.gto_deviations.GTODeviationEngine",
      "type": "class",
      "name": "GTODeviationEngine",
      "module": "src.pokertool.gto_deviations",
      "docstring": "Engine for calculating GTO deviations with population profiles.",
      "bases": [],
      "methods": [
        "__init__",
        "register_population_profile",
        "get_population_profile",
        "_apply_population_profile",
        "_normalise",
        "_estimate_exploitability",
        "_max_exploitation",
        "compute_deviation"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 21,
      "line_number": 498
    },
    {
      "id": "src.pokertool.gto_deviations.GTODeviationCalculator",
      "type": "class",
      "name": "GTODeviationCalculator",
      "module": "src.pokertool.gto_deviations",
      "docstring": "Main class for calculating profitable GTO deviations.\n\nCombines exploitation finding, node locking, and simplification.",
      "bases": [],
      "methods": [
        "__init__",
        "calculate_deviations",
        "_build_exploitative_strategy",
        "calculate_exploitability",
        "generate_report"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 10,
      "line_number": 715
    },
    {
      "id": "src.pokertool.gto_deviations.create_opponent_model",
      "type": "function",
      "name": "create_opponent_model",
      "module": "src.pokertool.gto_deviations",
      "signature": "def create_opponent_model(player_id: str, vpip: float, pfr: float, aggression: float) -> OpponentModel",
      "docstring": "Create a basic opponent model.",
      "parameters": [
        {
          "name": "player_id",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "vpip",
          "annotation": "float",
          "default": "0.25",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "pfr",
          "annotation": "float",
          "default": "0.18",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "aggression",
          "annotation": "float",
          "default": "1.0",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "OpponentModel",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "OpponentModel"
      ],
      "raises": [],
      "line_number": 861
    },
    {
      "id": "src.pokertool.gto_deviations.find_deviations",
      "type": "function",
      "name": "find_deviations",
      "module": "src.pokertool.gto_deviations",
      "signature": "def find_deviations(opponent: OpponentModel, situation: str, gto_strategy: Dict[str, float]) -> List[Deviation]",
      "docstring": "Quick function to find profitable deviations.\n\nArgs:\n    opponent: Opponent model\n    situation: Situation description\n    gto_strategy: GTO strategy as dict with action strings as keys\n    \nReturns:\n    List of profitable deviations",
      "parameters": [
        {
          "name": "opponent",
          "annotation": "OpponentModel",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "situation",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "gto_strategy",
          "annotation": "Dict[str, float]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "List[Deviation]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "ActionType",
        "gto_strategy.items",
        "GTODeviationCalculator",
        "calculator.calculate_deviations"
      ],
      "raises": [],
      "line_number": 876
    },
    {
      "id": "src.pokertool.stats_validator",
      "type": "module",
      "path": "src/pokertool/stats_validator.py",
      "docstring": "Statistical Significance Validator - Statistical validation of patterns and reads.\n\nThis module implements hypothesis testing framework, confidence interval calculation,\nsample size recommendations, variance reduction techniques, and p-value corrections.",
      "version": null,
      "author": null,
      "complexity": 54,
      "loc": 674,
      "dependencies": [
        "typing",
        "math",
        "enum",
        "dataclasses"
      ]
    },
    {
      "id": "src.pokertool.stats_validator.TestType",
      "type": "class",
      "name": "TestType",
      "module": "src.pokertool.stats_validator",
      "docstring": "Types of statistical tests.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 14
    },
    {
      "id": "src.pokertool.stats_validator.CorrectionMethod",
      "type": "class",
      "name": "CorrectionMethod",
      "module": "src.pokertool.stats_validator",
      "docstring": "P-value correction methods.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 23
    },
    {
      "id": "src.pokertool.stats_validator.HypothesisTestResult",
      "type": "class",
      "name": "HypothesisTestResult",
      "module": "src.pokertool.stats_validator",
      "docstring": "Result of a hypothesis test.",
      "bases": [],
      "methods": [
        "to_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 32
    },
    {
      "id": "src.pokertool.stats_validator.ConfidenceInterval",
      "type": "class",
      "name": "ConfidenceInterval",
      "module": "src.pokertool.stats_validator",
      "docstring": "Confidence interval result.",
      "bases": [],
      "methods": [
        "to_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 58
    },
    {
      "id": "src.pokertool.stats_validator.SampleSizeRecommendation",
      "type": "class",
      "name": "SampleSizeRecommendation",
      "module": "src.pokertool.stats_validator",
      "docstring": "Sample size recommendation.",
      "bases": [],
      "methods": [
        "to_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 78
    },
    {
      "id": "src.pokertool.stats_validator.HypothesisTester",
      "type": "class",
      "name": "HypothesisTester",
      "module": "src.pokertool.stats_validator",
      "docstring": "Framework for hypothesis testing.",
      "bases": [],
      "methods": [
        "__init__",
        "t_test",
        "z_test",
        "proportion_test",
        "chi_square_test",
        "_normal_cdf",
        "_t_distribution_p_value",
        "_chi_square_p_value"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 17,
      "line_number": 99
    },
    {
      "id": "src.pokertool.stats_validator.ConfidenceIntervalCalculator",
      "type": "class",
      "name": "ConfidenceIntervalCalculator",
      "module": "src.pokertool.stats_validator",
      "docstring": "Calculate confidence intervals for various statistics.",
      "bases": [],
      "methods": [
        "mean_confidence_interval",
        "proportion_confidence_interval",
        "_get_z_critical",
        "_inverse_erf"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 9,
      "line_number": 305
    },
    {
      "id": "src.pokertool.stats_validator.SampleSizeCalculator",
      "type": "class",
      "name": "SampleSizeCalculator",
      "module": "src.pokertool.stats_validator",
      "docstring": "Calculate required sample sizes.",
      "bases": [],
      "methods": [
        "required_sample_size_mean",
        "required_sample_size_proportion"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 398
    },
    {
      "id": "src.pokertool.stats_validator.VarianceReducer",
      "type": "class",
      "name": "VarianceReducer",
      "module": "src.pokertool.stats_validator",
      "docstring": "Techniques for variance reduction.",
      "bases": [],
      "methods": [
        "stratified_sample_variance",
        "control_variate_adjustment"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 6,
      "line_number": 450
    },
    {
      "id": "src.pokertool.stats_validator.PValueCorrector",
      "type": "class",
      "name": "PValueCorrector",
      "module": "src.pokertool.stats_validator",
      "docstring": "Apply multiple testing corrections to p-values.",
      "bases": [],
      "methods": [
        "bonferroni_correction",
        "holm_correction",
        "benjamini_hochberg_correction"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 516
    },
    {
      "id": "src.pokertool.stats_validator.StatisticalValidator",
      "type": "class",
      "name": "StatisticalValidator",
      "module": "src.pokertool.stats_validator",
      "docstring": "Main class orchestrating all statistical validation.",
      "bases": [],
      "methods": [
        "__init__",
        "validate_pattern",
        "validate_frequency",
        "correct_multiple_tests"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 10,
      "line_number": 554
    },
    {
      "id": "src.pokertool.stats_validator.quick_validate",
      "type": "function",
      "name": "quick_validate",
      "module": "src.pokertool.stats_validator",
      "signature": "def quick_validate(observed: float, expected: float, std_dev: float, sample_size: int) -> bool",
      "docstring": "Quick validation check.",
      "parameters": [
        {
          "name": "observed",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "expected",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "std_dev",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "sample_size",
          "annotation": "int",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "bool",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "StatisticalValidator",
        "validator.validate_pattern"
      ],
      "raises": [],
      "line_number": 653
    },
    {
      "id": "src.pokertool.stats_validator.calculate_required_sample_size",
      "type": "function",
      "name": "calculate_required_sample_size",
      "module": "src.pokertool.stats_validator",
      "signature": "def calculate_required_sample_size(effect_size: float, std_dev: float, confidence_level: float, power: float) -> int",
      "docstring": "Quick sample size calculation.",
      "parameters": [
        {
          "name": "effect_size",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "std_dev",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "confidence_level",
          "annotation": "float",
          "default": "0.95",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "power",
          "annotation": "float",
          "default": "0.8",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "int",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "SampleSizeCalculator",
        "calculator.required_sample_size_mean"
      ],
      "raises": [],
      "line_number": 665
    },
    {
      "id": "src.pokertool.api_client",
      "type": "module",
      "path": "src/pokertool/api_client.py",
      "docstring": "PokerTool API Client Library\n=============================\n\nComprehensive Python client library for integrating with the PokerTool API.\n\nProvides a high-level interface for external applications to interact with\nPokerTool's REST API and WebSocket endpoints with automatic retry logic,\nauthentication handling, and type-safe request/response models.\n\nModule: pokertool.api_client\nVersion: 1.0.0",
      "version": null,
      "author": null,
      "complexity": 32,
      "loc": 400,
      "dependencies": [
        "logging",
        "requests",
        "time",
        "typing",
        "dataclasses",
        "enum"
      ]
    },
    {
      "id": "src.pokertool.api_client.APIError",
      "type": "class",
      "name": "APIError",
      "module": "src.pokertool.api_client",
      "docstring": "Base exception for API errors.",
      "bases": [
        "Exception"
      ],
      "methods": [
        "__init__"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 28
    },
    {
      "id": "src.pokertool.api_client.AuthenticationError",
      "type": "class",
      "name": "AuthenticationError",
      "module": "src.pokertool.api_client",
      "docstring": "Raised when authentication fails.",
      "bases": [
        "APIError"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 36
    },
    {
      "id": "src.pokertool.api_client.RateLimitError",
      "type": "class",
      "name": "RateLimitError",
      "module": "src.pokertool.api_client",
      "docstring": "Raised when rate limit is exceeded.",
      "bases": [
        "APIError"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 41
    },
    {
      "id": "src.pokertool.api_client.ValidationError",
      "type": "class",
      "name": "ValidationError",
      "module": "src.pokertool.api_client",
      "docstring": "Raised when request validation fails.",
      "bases": [
        "APIError"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 46
    },
    {
      "id": "src.pokertool.api_client.HandAnalysisRequest",
      "type": "class",
      "name": "HandAnalysisRequest",
      "module": "src.pokertool.api_client",
      "docstring": "Request model for hand analysis.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 52
    },
    {
      "id": "src.pokertool.api_client.HandAnalysisResponse",
      "type": "class",
      "name": "HandAnalysisResponse",
      "module": "src.pokertool.api_client",
      "docstring": "Response model for hand analysis.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 64
    },
    {
      "id": "src.pokertool.api_client.PokerToolClient",
      "type": "class",
      "name": "PokerToolClient",
      "module": "src.pokertool.api_client",
      "docstring": "High-level client for PokerTool API.\n\nFeatures:\n- Automatic authentication and token refresh\n- Retry logic with exponential backoff\n- Rate limit handling\n- Type-safe request/response models\n- Comprehensive error handling\n- Request logging and debugging\n\nExample:\n    client = PokerToolClient(\n        base_url=\"http://localhost:5001\",\n        api_key=\"your-api-key\"\n    )\n\n    # Analyze a hand\n    result = client.analyze_hand(\n        hole_cards=[\"As\", \"Kh\"],\n        community_cards=[\"Qh\", \"Jd\", \"Tc\"],\n        pot_size=100.0,\n        stack_size=1000.0,\n        position=\"button\",\n        num_players=6,\n        street=\"flop\"\n    )\n\n    print(f\"Recommendation: {result.recommendation}\")\n    print(f\"Confidence: {result.confidence}\")",
      "bases": [],
      "methods": [
        "__init__",
        "_get_auth_headers",
        "_handle_response",
        "_request_with_retry",
        "authenticate",
        "analyze_hand",
        "get_health",
        "get_statistics",
        "get_hand_history",
        "close",
        "__enter__",
        "__exit__"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 31,
      "line_number": 75
    },
    {
      "id": "src.pokertool.rl_agent",
      "type": "module",
      "path": "src/pokertool/rl_agent.py",
      "docstring": "Reinforcement Learning Agent Module\n\nThis module implements a self-play RL agent for strategy improvement using\nProximal Policy Optimization (PPO), experience replay, reward shaping,\ncurriculum learning, and multi-agent training.\n\nExpected Accuracy Gain: 18-22% overall improvement\n\nAuthor: PokerTool Development Team\nDate: 2025-01-10",
      "version": null,
      "author": null,
      "complexity": 69,
      "loc": 644,
      "dependencies": [
        "random",
        "math",
        "numpy",
        "pathlib",
        "typing",
        "collections",
        "dataclasses",
        "json",
        "enum",
        "datetime"
      ]
    },
    {
      "id": "src.pokertool.rl_agent.AgentLevel",
      "type": "class",
      "name": "AgentLevel",
      "module": "src.pokertool.rl_agent",
      "docstring": "Curriculum learning levels",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 27
    },
    {
      "id": "src.pokertool.rl_agent.Action",
      "type": "class",
      "name": "Action",
      "module": "src.pokertool.rl_agent",
      "docstring": "Poker actions",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 35
    },
    {
      "id": "src.pokertool.rl_agent.PolicyNetwork",
      "type": "class",
      "name": "PolicyNetwork",
      "module": "src.pokertool.rl_agent",
      "docstring": "Simple policy network (simplified for demonstration)",
      "bases": [],
      "methods": [
        "__post_init__",
        "forward",
        "_softmax",
        "update"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 6,
      "line_number": 53
    },
    {
      "id": "src.pokertool.rl_agent.ValueNetwork",
      "type": "class",
      "name": "ValueNetwork",
      "module": "src.pokertool.rl_agent",
      "docstring": "Value network for critic",
      "bases": [],
      "methods": [
        "__post_init__",
        "forward"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 96
    },
    {
      "id": "src.pokertool.rl_agent.ExperienceReplayBuffer",
      "type": "class",
      "name": "ExperienceReplayBuffer",
      "module": "src.pokertool.rl_agent",
      "docstring": "Experience replay buffer with prioritization",
      "bases": [],
      "methods": [
        "__init__",
        "add",
        "sample",
        "update_priorities",
        "__len__"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 8,
      "line_number": 116
    },
    {
      "id": "src.pokertool.rl_agent.RewardShaper",
      "type": "class",
      "name": "RewardShaper",
      "module": "src.pokertool.rl_agent",
      "docstring": "Reward shaping system for poker",
      "bases": [],
      "methods": [
        "__init__",
        "shape_reward",
        "calculate_advantage"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 14,
      "line_number": 164
    },
    {
      "id": "src.pokertool.rl_agent.CurriculumManager",
      "type": "class",
      "name": "CurriculumManager",
      "module": "src.pokertool.rl_agent",
      "docstring": "Curriculum learning manager",
      "bases": [],
      "methods": [
        "__init__",
        "update_performance",
        "check_level_up",
        "get_training_config"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 7,
      "line_number": 244
    },
    {
      "id": "src.pokertool.rl_agent.PPOTrainer",
      "type": "class",
      "name": "PPOTrainer",
      "module": "src.pokertool.rl_agent",
      "docstring": "Proximal Policy Optimization trainer",
      "bases": [],
      "methods": [
        "__init__",
        "compute_policy_loss",
        "compute_value_loss",
        "train_step"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 6,
      "line_number": 311
    },
    {
      "id": "src.pokertool.rl_agent.RLAgent",
      "type": "class",
      "name": "RLAgent",
      "module": "src.pokertool.rl_agent",
      "docstring": "Main Reinforcement Learning Agent",
      "bases": [],
      "methods": [
        "__init__",
        "select_action",
        "store_experience",
        "train",
        "episode_finished",
        "get_statistics",
        "save_checkpoint",
        "_load_checkpoint"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 21,
      "line_number": 402
    },
    {
      "id": "src.pokertool.rl_agent.MultiAgentTrainer",
      "type": "class",
      "name": "MultiAgentTrainer",
      "module": "src.pokertool.rl_agent",
      "docstring": "Multi-agent self-play training system",
      "bases": [],
      "methods": [
        "__init__",
        "self_play_match",
        "get_leaderboard"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 603
    },
    {
      "id": "src.pokertool.variance_calculator",
      "type": "module",
      "path": "src/pokertool/variance_calculator.py",
      "docstring": "PokerTool Variance Calculator Module\n======================================\n\nThis module provides functionality for variance calculator operations\nwithin the PokerTool application ecosystem.\n\nModule: pokertool.variance_calculator\nVersion: 20.0.0\nLast Modified: 2025-09-29\nAuthor: PokerTool Development Team\nLicense: MIT\n\nDependencies:\n    - See module imports for specific dependencies\n    - Python 3.10+ required\n\nChange Log:\n    - v28.0.0 (2025-09-29): Enhanced documentation\n    - v19.0.0 (2025-09-18): Bug fixes and improvements\n    - v18.0.0 (2025-09-15): Initial implementation",
      "version": "'20.0.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 47,
      "loc": 461,
      "dependencies": [
        "logging",
        "random",
        "math",
        "numpy",
        "typing",
        "dataclasses",
        "datetime",
        "statistics"
      ]
    },
    {
      "id": "src.pokertool.variance_calculator.SessionResult",
      "type": "class",
      "name": "SessionResult",
      "module": "src.pokertool.variance_calculator",
      "docstring": "Individual session result for variance analysis.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 46
    },
    {
      "id": "src.pokertool.variance_calculator.VarianceReport",
      "type": "class",
      "name": "VarianceReport",
      "module": "src.pokertool.variance_calculator",
      "docstring": "Comprehensive variance analysis report.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 57
    },
    {
      "id": "src.pokertool.variance_calculator.VarianceCalculator",
      "type": "class",
      "name": "VarianceCalculator",
      "module": "src.pokertool.variance_calculator",
      "docstring": "Advanced variance and risk analysis calculator.",
      "bases": [],
      "methods": [
        "__init__",
        "add_session",
        "add_sessions_bulk",
        "calculate_basic_statistics",
        "calculate_standard_deviation",
        "calculate_confidence_intervals",
        "_get_z_score_for_confidence",
        "simulate_downswing",
        "calculate_risk_of_ruin",
        "monte_carlo_bankroll_projection",
        "calculate_hourly_variance",
        "generate_comprehensive_report"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 38,
      "line_number": 71
    },
    {
      "id": "src.pokertool.variance_calculator.calculate_variance",
      "type": "function",
      "name": "calculate_variance",
      "module": "src.pokertool.variance_calculator",
      "signature": "def calculate_variance(results: List[float]) -> float",
      "docstring": "Calculate variance of a list of results.",
      "parameters": [
        {
          "name": "results",
          "annotation": "List[float]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "float",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "len",
        "statistics.variance"
      ],
      "raises": [],
      "line_number": 359
    },
    {
      "id": "src.pokertool.variance_calculator.calculate_standard_deviation",
      "type": "function",
      "name": "calculate_standard_deviation",
      "module": "src.pokertool.variance_calculator",
      "signature": "def calculate_standard_deviation(results: List[float]) -> float",
      "docstring": "Calculate standard deviation of a list of results.",
      "parameters": [
        {
          "name": "results",
          "annotation": "List[float]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "float",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "len",
        "statistics.stdev"
      ],
      "raises": [],
      "line_number": 365
    },
    {
      "id": "src.pokertool.variance_calculator.simulate_sessions",
      "type": "function",
      "name": "simulate_sessions",
      "module": "src.pokertool.variance_calculator",
      "signature": "def simulate_sessions(mean: float, std_dev: float, sessions: int) -> List[float]",
      "docstring": "Simulate poker sessions with given mean and standard deviation.",
      "parameters": [
        {
          "name": "mean",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "std_dev",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "sessions",
          "annotation": "int",
          "default": "1000",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "List[float]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "random.normalvariate",
        "range"
      ],
      "raises": [],
      "line_number": 371
    },
    {
      "id": "src.pokertool.variance_calculator.calculate_confidence_interval",
      "type": "function",
      "name": "calculate_confidence_interval",
      "module": "src.pokertool.variance_calculator",
      "signature": "def calculate_confidence_interval(results: List[float], confidence: float) -> Tuple[float, float]",
      "docstring": "Calculate confidence interval for a given confidence level.",
      "parameters": [
        {
          "name": "results",
          "annotation": "List[float]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "confidence",
          "annotation": "float",
          "default": "0.95",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Tuple[float, float]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "len",
        "statistics.mean",
        "statistics.stdev"
      ],
      "raises": [],
      "line_number": 375
    },
    {
      "id": "src.pokertool.variance_calculator.quick_risk_analysis",
      "type": "function",
      "name": "quick_risk_analysis",
      "module": "src.pokertool.variance_calculator",
      "signature": "def quick_risk_analysis(results: List[float], bankroll: float) -> Dict[str, Any]",
      "docstring": "Quick risk analysis for a set of results.",
      "parameters": [
        {
          "name": "results",
          "annotation": "List[float]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "bankroll",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Dict[str, Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "len",
        "VarianceCalculator",
        "calc.add_sessions_bulk",
        "calc.calculate_basic_statistics",
        "calculate_confidence_interval",
        "calc.calculate_risk_of_ruin"
      ],
      "raises": [],
      "line_number": 389
    },
    {
      "id": "src.pokertool.gui",
      "type": "module",
      "path": "src/pokertool/gui.py",
      "docstring": null,
      "version": "'20.0.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 104,
      "loc": 929,
      "dependencies": [
        "sqlite3",
        "pathlib",
        "__future__",
        "typing",
        "dataclasses",
        "json",
        "datetime",
        "threading",
        "tkinter"
      ]
    },
    {
      "id": "src.pokertool.gui.VisualCard",
      "type": "class",
      "name": "VisualCard",
      "module": "src.pokertool.gui",
      "docstring": "A visual representation of a playing card that can be clicked.",
      "bases": [
        "tk.Frame"
      ],
      "methods": [
        "__init__",
        "_on_click",
        "_on_enter",
        "_on_leave",
        "set_selected",
        "set_disabled"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 11,
      "line_number": 149
    },
    {
      "id": "src.pokertool.gui.CardSelectionPanel",
      "type": "class",
      "name": "CardSelectionPanel",
      "module": "src.pokertool.gui",
      "docstring": "Panel for visual card selection.",
      "bases": [
        "tk.Frame"
      ],
      "methods": [
        "__init__",
        "_build_ui",
        "_on_card_click",
        "get_selected_cards",
        "clear_selection",
        "set_cards_disabled"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 14,
      "line_number": 227
    },
    {
      "id": "src.pokertool.gui.PlayerInfo",
      "type": "class",
      "name": "PlayerInfo",
      "module": "src.pokertool.gui",
      "docstring": "Information about a player at the table.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 300
    },
    {
      "id": "src.pokertool.gui.TableVisualization",
      "type": "class",
      "name": "TableVisualization",
      "module": "src.pokertool.gui",
      "docstring": "Enhanced poker table visualization.",
      "bases": [
        "tk.Canvas"
      ],
      "methods": [
        "__init__",
        "_on_resize",
        "_draw_table",
        "_draw_player",
        "_draw_dealer_button",
        "_draw_pot",
        "_draw_board",
        "update_table"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 23,
      "line_number": 313
    },
    {
      "id": "src.pokertool.gui.EnhancedPokerAssistantFrame",
      "type": "class",
      "name": "EnhancedPokerAssistantFrame",
      "module": "src.pokertool.gui",
      "docstring": "Embeddable manual play workspace used by the enhanced poker assistant.",
      "bases": [
        "tk.Frame"
      ],
      "methods": [
        "__init__",
        "_setup_window",
        "_bind_events",
        "_init_players",
        "_setup_styles",
        "_build_ui",
        "_build_game_controls",
        "_build_analysis_panel",
        "_on_card_selected",
        "_update_card_assignment",
        "_toggle_player",
        "_update_dealer",
        "_update_blinds",
        "_update_table",
        "_analyze_hand",
        "_clear_cards",
        "_init_database"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 43,
      "line_number": 535
    },
    {
      "id": "src.pokertool.gui.EnhancedPokerAssistant",
      "type": "class",
      "name": "EnhancedPokerAssistant",
      "module": "src.pokertool.gui",
      "docstring": "Standalone top-level window that hosts the manual play workspace.",
      "bases": [
        "tk.Tk"
      ],
      "methods": [
        "__init__",
        "_setup_window",
        "_bind_events",
        "__getattr__",
        "__setattr__",
        "destroy"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 11,
      "line_number": 871
    },
    {
      "id": "src.pokertool.gui.main",
      "type": "function",
      "name": "main",
      "module": "src.pokertool.gui",
      "signature": "def main() -> int",
      "docstring": "Main GUI entry point.",
      "parameters": [],
      "return_type": "int",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "EnhancedPokerAssistant",
        "gui.mainloop",
        "run_safely"
      ],
      "raises": [],
      "line_number": 913
    },
    {
      "id": "src.pokertool.gui.run",
      "type": "function",
      "name": "run",
      "module": "src.pokertool.gui",
      "signature": "def run() -> int",
      "docstring": "Legacy entry point.",
      "parameters": [],
      "return_type": "int",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "main"
      ],
      "raises": [],
      "line_number": 924
    },
    {
      "id": "src.pokertool.documentation_system",
      "type": "module",
      "path": "src/pokertool/documentation_system.py",
      "docstring": "Interactive documentation system with help topics and guides.",
      "version": null,
      "author": null,
      "complexity": 17,
      "loc": 175,
      "dependencies": [
        "textwrap",
        "pathlib",
        "__future__",
        "typing",
        "dataclasses",
        "json"
      ]
    },
    {
      "id": "src.pokertool.documentation_system.HelpTopic",
      "type": "class",
      "name": "HelpTopic",
      "module": "src.pokertool.documentation_system",
      "docstring": "Help topic metadata.",
      "bases": [],
      "methods": [
        "to_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 20
    },
    {
      "id": "src.pokertool.documentation_system.VideoTutorial",
      "type": "class",
      "name": "VideoTutorial",
      "module": "src.pokertool.documentation_system",
      "docstring": "Video tutorial metadata.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 38
    },
    {
      "id": "src.pokertool.documentation_system.GuideStep",
      "type": "class",
      "name": "GuideStep",
      "module": "src.pokertool.documentation_system",
      "docstring": "Single step in an interactive guide.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 49
    },
    {
      "id": "src.pokertool.documentation_system.InteractiveGuide",
      "type": "class",
      "name": "InteractiveGuide",
      "module": "src.pokertool.documentation_system",
      "docstring": "Interactive walkthrough guide.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 58
    },
    {
      "id": "src.pokertool.documentation_system.FAQEntry",
      "type": "class",
      "name": "FAQEntry",
      "module": "src.pokertool.documentation_system",
      "docstring": "Frequently asked question entry.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 68
    },
    {
      "id": "src.pokertool.documentation_system.ContextHelp",
      "type": "class",
      "name": "ContextHelp",
      "module": "src.pokertool.documentation_system",
      "docstring": "Context-sensitive help mapping.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 76
    },
    {
      "id": "src.pokertool.documentation_system.DocumentationSystem",
      "type": "class",
      "name": "DocumentationSystem",
      "module": "src.pokertool.documentation_system",
      "docstring": "Manages help topics, tutorials, and context help.",
      "bases": [],
      "methods": [
        "__init__",
        "register_topic",
        "search_topics",
        "get_topic",
        "add_tutorial",
        "list_tutorials",
        "add_guide",
        "get_guide",
        "add_faq_entry",
        "list_faq",
        "register_context_help",
        "context_help",
        "export",
        "_guide_to_dict"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 15,
      "line_number": 84
    },
    {
      "id": "src.pokertool.documentation_system._sanitize",
      "type": "function",
      "name": "_sanitize",
      "module": "src.pokertool.documentation_system",
      "signature": "def _sanitize(text: str) -> str",
      "docstring": null,
      "parameters": [
        {
          "name": "text",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "strip",
        "textwrap.dedent"
      ],
      "raises": [],
      "line_number": 15
    },
    {
      "id": "src.pokertool.live_decision_engine",
      "type": "module",
      "path": "src/pokertool/live_decision_engine.py",
      "docstring": "Live Decision Engine\n====================\n\nReal-time decision engine for compact live advice window.\n\nIntegrates:\n- Confidence-aware decision API\n- Win probability calculation (Monte Carlo)\n- Ensemble decision aggregation\n- Reasoning generation\n\nProvides live updates with confidence intervals and win probability.\n\nVersion: 61.0.0\nAuthor: PokerTool Development Team",
      "version": null,
      "author": null,
      "complexity": 98,
      "loc": 945,
      "dependencies": [
        "logging",
        "compact_live_advice_window",
        "numpy",
        "time",
        "__future__",
        "typing",
        "dataclasses",
        "enum",
        "threading"
      ]
    },
    {
      "id": "src.pokertool.live_decision_engine.GameState",
      "type": "class",
      "name": "GameState",
      "module": "src.pokertool.live_decision_engine",
      "docstring": "Current game state for decision making.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 68
    },
    {
      "id": "src.pokertool.live_decision_engine.WinProbabilityCalculator",
      "type": "class",
      "name": "WinProbabilityCalculator",
      "module": "src.pokertool.live_decision_engine",
      "docstring": "Calculate win probability using Monte Carlo simulation.\n\nFast, accurate equity calculation for real-time updates.",
      "bases": [],
      "methods": [
        "__init__",
        "calculate",
        "_calculate_with_gto",
        "_calculate_fallback",
        "_estimate_hand_strength",
        "_rank_to_value",
        "_make_cache_key",
        "_calculate_confidence_interval"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 18,
      "line_number": 106
    },
    {
      "id": "src.pokertool.live_decision_engine.ReasoningGenerator",
      "type": "class",
      "name": "ReasoningGenerator",
      "module": "src.pokertool.live_decision_engine",
      "docstring": "Generate concise, actionable reasoning for decisions.\n\nTemplates limited to 40 characters for compact display.",
      "bases": [],
      "methods": [
        "generate",
        "_fold_reason",
        "_call_reason",
        "_raise_reason",
        "_allin_reason"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 29,
      "line_number": 318
    },
    {
      "id": "src.pokertool.live_decision_engine.LiveDecisionEngine",
      "type": "class",
      "name": "LiveDecisionEngine",
      "module": "src.pokertool.live_decision_engine",
      "docstring": "Main decision engine for live advice.\n\nIntegrates all decision systems and provides real-time recommendations.",
      "bases": [],
      "methods": [
        "__init__",
        "get_live_advice",
        "_validate_game_state",
        "_calculate_win_probability",
        "_get_confidence_recommendation",
        "_get_simple_recommendation",
        "_convert_to_advice_data",
        "_calculate_outs",
        "_calculate_hand_percentile",
        "_calculate_call_ev",
        "_calculate_raise_ev",
        "_generate_bet_sizes",
        "_generate_alternative_actions",
        "_update_performance_metrics",
        "get_performance_stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 46,
      "line_number": 419
    },
    {
      "id": "src.pokertool.live_decision_engine.get_live_decision_engine",
      "type": "function",
      "name": "get_live_decision_engine",
      "module": "src.pokertool.live_decision_engine",
      "signature": "def get_live_decision_engine(bankroll: float, win_calc_iterations: int) -> LiveDecisionEngine",
      "docstring": "Factory function to create LiveDecisionEngine.\n\nArgs:\n    bankroll: Current bankroll\n    win_calc_iterations: Monte Carlo iterations\n\nReturns:\n    Configured LiveDecisionEngine instance",
      "parameters": [
        {
          "name": "bankroll",
          "annotation": "float",
          "default": "10000.0",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "win_calc_iterations",
          "annotation": "int",
          "default": "10000",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "LiveDecisionEngine",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "LiveDecisionEngine"
      ],
      "raises": [],
      "line_number": 861
    },
    {
      "id": "src.pokertool.live_decision_engine.demo",
      "type": "function",
      "name": "demo",
      "module": "src.pokertool.live_decision_engine",
      "signature": "def demo()",
      "docstring": "Demo the live decision engine.",
      "parameters": [],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 4,
      "calls": [
        "get_live_decision_engine",
        "GameState",
        "GameState",
        "GameState",
        "enumerate",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "engine.get_live_advice",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "engine.get_performance_stats",
        "stats.items",
        "print"
      ],
      "raises": [],
      "line_number": 885
    },
    {
      "id": "src.pokertool.hand_range_analyzer",
      "type": "module",
      "path": "src/pokertool/hand_range_analyzer.py",
      "docstring": "Advanced hand range analysis utilities.",
      "version": null,
      "author": null,
      "complexity": 88,
      "loc": 355,
      "dependencies": [
        "random",
        "math",
        "__future__",
        "typing",
        "dataclasses",
        "itertools",
        "gto_solver"
      ]
    },
    {
      "id": "src.pokertool.hand_range_analyzer.RangeEntry",
      "type": "class",
      "name": "RangeEntry",
      "module": "src.pokertool.hand_range_analyzer",
      "docstring": "Single entry in a parsed range.",
      "bases": [],
      "methods": [
        "weight"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 23
    },
    {
      "id": "src.pokertool.hand_range_analyzer.RangeProfile",
      "type": "class",
      "name": "RangeProfile",
      "module": "src.pokertool.hand_range_analyzer",
      "docstring": "Normalized representation of a poker range.",
      "bases": [],
      "methods": [
        "as_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 37
    },
    {
      "id": "src.pokertool.hand_range_analyzer.RangeEquityResult",
      "type": "class",
      "name": "RangeEquityResult",
      "module": "src.pokertool.hand_range_analyzer",
      "docstring": "Return payload for equity computations.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 61
    },
    {
      "id": "src.pokertool.hand_range_analyzer.RangeHeatMap",
      "type": "class",
      "name": "RangeHeatMap",
      "module": "src.pokertool.hand_range_analyzer",
      "docstring": "Matrix representation of range coverage.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 71
    },
    {
      "id": "src.pokertool.hand_range_analyzer.RangeParsingError",
      "type": "class",
      "name": "RangeParsingError",
      "module": "src.pokertool.hand_range_analyzer",
      "docstring": "Raised when range text cannot be parsed.",
      "bases": [
        "ValueError"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 78
    },
    {
      "id": "src.pokertool.hand_range_analyzer.HandRangeAnalyzer",
      "type": "class",
      "name": "HandRangeAnalyzer",
      "module": "src.pokertool.hand_range_analyzer",
      "docstring": "Perform range parsing, equity evaluation, and visualisation support.",
      "bases": [],
      "methods": [
        "__init__",
        "parse_range",
        "build_heatmap",
        "combination_weights",
        "calculate_equity",
        "reduce_by_frequency",
        "reduce_with_board",
        "_parse_token",
        "_categorize",
        "_combo_count",
        "_hand_ranks",
        "_validate_label",
        "_expand_weighted_combos",
        "_expand_entry",
        "_combo_conflicts"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 86,
      "line_number": 82
    },
    {
      "id": "src.pokertool.scrape",
      "type": "module",
      "path": "src/pokertool/scrape.py",
      "docstring": "PokerTool Screen Scraping Module\n=================================\n\nAdvanced screen scraping and OCR capabilities for monitoring online\npoker tables and extracting game state information in real-time.\n\nModule: pokertool.scrape\nVersion: 20.0.0\nLast Modified: 2025-09-29\nAuthor: PokerTool Development Team\nLicense: MIT\n\nDependencies:\n    - requests >= 2.32.0: HTTP client\n    - beautifulsoup4 >= 4.12.0: HTML parsing\n    - Pillow: Image processing\n    - pytesseract: OCR capabilities (optional)\n\nScraping Features:\n    - Multi-platform screen capture\n    - OCR text recognition\n    - Table layout detection\n    - Real-time tracking\n    - Anti-detection measures\n    - Error recovery\n    - Multiple site support\n\nSupported Sites:\n    - Generic table layout\n    - Custom profiles per site\n    - Configurable detection\n\nIMPORTANT:\n    This module is for educational purposes only.\n    Users must comply with all applicable terms of service\n    and local regulations when using screen scraping features.\n\nChange Log:\n    - v28.0.0 (2025-09-29): Enhanced documentation, improved OCR\n    - v19.0.0 (2025-09-18): Multi-site support\n    - v18.0.0 (2025-09-15): Initial scraping implementation",
      "version": "'20.0.0'",
      "author": "'PokerTool Development Team'",
      "complexity": 150,
      "loc": 1074,
      "dependencies": [
        "logging",
        "concurrency",
        "pathlib",
        "time",
        "typing",
        "dataclasses",
        "core",
        "error_handling",
        "concurrent",
        "numpy",
        "threading",
        "thread_utils",
        "storage"
      ]
    },
    {
      "id": "src.pokertool.scrape.RecognitionStats",
      "type": "class",
      "name": "RecognitionStats",
      "module": "src.pokertool.scrape",
      "docstring": "Lightweight statistics tracker for OCR recognition quality.",
      "bases": [],
      "methods": [
        "record_capture",
        "record_success",
        "record_failure",
        "snapshot"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 129
    },
    {
      "id": "src.pokertool.scrape._FallbackScraperBridge",
      "type": "class",
      "name": "_FallbackScraperBridge",
      "module": "src.pokertool.scrape",
      "docstring": "Minimal bridge used when the native bridge is unavailable (e.g. tests).",
      "bases": [],
      "methods": [
        "__init__",
        "register_callback",
        "process_update",
        "convert_to_game_state"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 10,
      "line_number": 167
    },
    {
      "id": "src.pokertool.scrape.EnhancedScraperManager",
      "type": "class",
      "name": "EnhancedScraperManager",
      "module": "src.pokertool.scrape",
      "docstring": "Enhanced scraper manager with OCR integration and real-time analysis.\nSupports multiple poker sites with anti-detection mechanisms.",
      "bases": [],
      "methods": [
        "__init__",
        "initialize",
        "register_callback",
        "_configure_ocr",
        "_strip_table_image",
        "_should_process_update",
        "_schedule_state_persistence",
        "_prepare_image",
        "_on_table_update",
        "_enhance_with_ocr",
        "_save_table_state",
        "start_continuous_capture",
        "_start_update_processor",
        "stop_continuous_capture",
        "capture_single_state",
        "get_latest_state",
        "get_recognition_stats",
        "save_debug_image",
        "_save_debug_regions"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 104,
      "line_number": 209
    },
    {
      "id": "src.pokertool.scrape.run_screen_scraper",
      "type": "function",
      "name": "run_screen_scraper",
      "module": "src.pokertool.scrape",
      "signature": "def run_screen_scraper(site: str, continuous: bool, interval: float, enable_ocr: bool) -> Dict[str, Any]",
      "docstring": "Run the enhanced screen scraper with OCR support.\n\nArgs:\n    site: Poker site to scrape ('GENERIC', 'POKERSTARS', etc.)\n    continuous: Whether to run continuously\n    interval: Capture interval in seconds (for continuous mode)\n    enable_ocr: Whether to enable OCR card recognition\n\nReturns:\n    Dict containing scraper status and results",
      "parameters": [
        {
          "name": "site",
          "annotation": "str",
          "default": "'GENERIC'",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "continuous",
          "annotation": "bool",
          "default": "False",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "interval",
          "annotation": "float",
          "default": "1.0",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "enable_ocr",
          "annotation": "bool",
          "default": "True",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Dict[str, Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "_scraper_manager.initialize",
        "_scraper_manager.start_continuous_capture",
        "_scraper_manager.get_recognition_stats",
        "_scraper_manager.capture_single_state"
      ],
      "raises": [],
      "line_number": 711
    },
    {
      "id": "src.pokertool.scrape.stop_screen_scraper",
      "type": "function",
      "name": "stop_screen_scraper",
      "module": "src.pokertool.scrape",
      "signature": "def stop_screen_scraper() -> Dict[str, Any]",
      "docstring": "Stop the continuous screen scraper.",
      "parameters": [],
      "return_type": "Dict[str, Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "_scraper_manager.stop_continuous_capture",
        "_scraper_manager.get_recognition_stats"
      ],
      "raises": [],
      "line_number": 755
    },
    {
      "id": "src.pokertool.scrape.get_scraper_status",
      "type": "function",
      "name": "get_scraper_status",
      "module": "src.pokertool.scrape",
      "signature": "def get_scraper_status() -> Dict[str, Any]",
      "docstring": "Get current scraper status with OCR information.",
      "parameters": [],
      "return_type": "Dict[str, Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "_scraper_manager.get_recognition_stats"
      ],
      "raises": [],
      "line_number": 766
    },
    {
      "id": "src.pokertool.scrape.run_desktop_independent_scraper",
      "type": "function",
      "name": "run_desktop_independent_scraper",
      "module": "src.pokertool.scrape",
      "signature": "def run_desktop_independent_scraper(detection_mode: str, continuous: bool, interval: float) -> Dict[str, Any]",
      "docstring": "Run the desktop-independent screen scraper that works across all desktops/workspaces.\n\nArgs:\n    detection_mode: Poker detection mode ('WINDOW_TITLE', 'PROCESS_NAME', 'COMBINED', 'FUZZY_MATCH')\n    continuous: Whether to run continuously\n    interval: Capture interval in seconds (for continuous mode)\n    \nReturns:\n    Dict containing scraper status and results",
      "parameters": [
        {
          "name": "detection_mode",
          "annotation": "str",
          "default": "'COMBINED'",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "continuous",
          "annotation": "bool",
          "default": "False",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "interval",
          "annotation": "float",
          "default": "2.0",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Dict[str, Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 12,
      "calls": [
        "create_desktop_scraper",
        "mode_map.get",
        "detection_mode.upper",
        "_desktop_scraper.scan_for_poker_windows",
        "_desktop_scraper.get_platform_capabilities",
        "capture_result.get",
        "capture_result.get",
        "capture_result.get",
        "capture_result.get",
        "capture_result.get",
        "capture_result.get",
        "capture_result.get",
        "capture_result.get",
        "capture_result.get",
        "capture_result.get",
        "capture_result.get",
        "capture_result.get",
        "capture_result.get",
        "capture_result.get",
        "capture_result.get",
        "callback",
        "logger.error",
        "_desktop_scraper.register_callback",
        "_desktop_scraper.start_continuous_monitoring",
        "len",
        "len",
        "_desktop_scraper.get_platform_capabilities",
        "_desktop_scraper.capture_window",
        "results.append",
        "capture_result.get",
        "capture_result.get",
        "capture_result.get",
        "capture_result.get",
        "capture_result.get",
        "capture_result.get",
        "len",
        "len",
        "_desktop_scraper.get_platform_capabilities",
        "logger.error",
        "str",
        "str"
      ],
      "raises": [],
      "line_number": 785
    },
    {
      "id": "src.pokertool.scrape.stop_desktop_scraper",
      "type": "function",
      "name": "stop_desktop_scraper",
      "module": "src.pokertool.scrape",
      "signature": "def stop_desktop_scraper() -> Dict[str, Any]",
      "docstring": "Stop the desktop-independent scraper.",
      "parameters": [],
      "return_type": "Dict[str, Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "_desktop_scraper.stop_monitoring"
      ],
      "raises": [],
      "line_number": 917
    },
    {
      "id": "src.pokertool.scrape.get_desktop_scraper_status",
      "type": "function",
      "name": "get_desktop_scraper_status",
      "module": "src.pokertool.scrape",
      "signature": "def get_desktop_scraper_status() -> Dict[str, Any]",
      "docstring": "Get desktop scraper status and capabilities.",
      "parameters": [],
      "return_type": "Dict[str, Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 4,
      "calls": [
        "create_desktop_scraper",
        "temp_scraper.get_platform_capabilities",
        "str",
        "len",
        "_desktop_scraper.get_platform_capabilities"
      ],
      "raises": [],
      "line_number": 933
    },
    {
      "id": "src.pokertool.scrape.save_debug_screenshots_all_desktops",
      "type": "function",
      "name": "save_debug_screenshots_all_desktops",
      "module": "src.pokertool.scrape",
      "signature": "def save_debug_screenshots_all_desktops(output_dir: str) -> Dict[str, Any]",
      "docstring": "Save debug screenshots of all poker windows found across all desktops.\n\nArgs:\n    output_dir: Directory to save screenshots\n    \nReturns:\n    Dict with results",
      "parameters": [
        {
          "name": "output_dir",
          "annotation": "str",
          "default": "'debug_screenshots'",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Dict[str, Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 5,
      "calls": [
        "create_desktop_scraper",
        "_desktop_scraper.scan_for_poker_windows",
        "_desktop_scraper.save_debug_screenshots",
        "len",
        "len",
        "logger.error",
        "str",
        "str"
      ],
      "raises": [],
      "line_number": 974
    },
    {
      "id": "src.pokertool.scrape.quick_poker_window_scan",
      "type": "function",
      "name": "quick_poker_window_scan",
      "module": "src.pokertool.scrape",
      "signature": "def quick_poker_window_scan() -> Dict[str, Any]",
      "docstring": "Quick scan for poker windows across all desktops without starting monitoring.\n\nReturns:\n    Dict with scan results",
      "parameters": [],
      "return_type": "Dict[str, Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "create_desktop_scraper",
        "scraper.scan_for_poker_windows",
        "len",
        "len",
        "scraper.get_platform_capabilities",
        "logger.error",
        "str",
        "str"
      ],
      "raises": [],
      "line_number": 1018
    },
    {
      "id": "src.pokertool.thread_utils",
      "type": "module",
      "path": "src/pokertool/thread_utils.py",
      "docstring": "Threading utilities for PokerTool.\nProvides thread-safe utilities and helpers for concurrent operations.",
      "version": null,
      "author": null,
      "complexity": 56,
      "loc": 265,
      "dependencies": [
        "functools",
        "logging",
        "__future__",
        "typing",
        "concurrent",
        "enum",
        "threading"
      ]
    },
    {
      "id": "src.pokertool.thread_utils.ThreadSafeDict",
      "type": "class",
      "name": "ThreadSafeDict",
      "module": "src.pokertool.thread_utils",
      "docstring": "A thread-safe dictionary implementation.",
      "bases": [],
      "methods": [
        "__init__",
        "__getitem__",
        "__setitem__",
        "__delitem__",
        "__contains__",
        "get",
        "keys",
        "values",
        "items",
        "clear"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 19,
      "line_number": 26
    },
    {
      "id": "src.pokertool.thread_utils.ThreadSafeCounter",
      "type": "class",
      "name": "ThreadSafeCounter",
      "module": "src.pokertool.thread_utils",
      "docstring": "A thread-safe counter.",
      "bases": [],
      "methods": [
        "__init__",
        "increment",
        "decrement",
        "value"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 7,
      "line_number": 70
    },
    {
      "id": "src.pokertool.thread_utils.TaskPriority",
      "type": "class",
      "name": "TaskPriority",
      "module": "src.pokertool.thread_utils",
      "docstring": "Task priority levels for the thread pool.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 93
    },
    {
      "id": "src.pokertool.thread_utils.AsyncCallback",
      "type": "class",
      "name": "AsyncCallback",
      "module": "src.pokertool.thread_utils",
      "docstring": "Manages asynchronous callbacks.",
      "bases": [],
      "methods": [
        "__init__",
        "register",
        "unregister",
        "trigger"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 10,
      "line_number": 179
    },
    {
      "id": "src.pokertool.thread_utils.get_thread_pool",
      "type": "function",
      "name": "get_thread_pool",
      "module": "src.pokertool.thread_utils",
      "signature": "def get_thread_pool(max_workers: int) -> ThreadPoolExecutor",
      "docstring": "Get or create the global thread pool.",
      "parameters": [
        {
          "name": "max_workers",
          "annotation": "int",
          "default": "4",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "ThreadPoolExecutor",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "ThreadPoolExecutor",
        "logger.debug"
      ],
      "raises": [],
      "line_number": 102
    },
    {
      "id": "src.pokertool.thread_utils.shutdown_thread_pool",
      "type": "function",
      "name": "shutdown_thread_pool",
      "module": "src.pokertool.thread_utils",
      "signature": "def shutdown_thread_pool(wait: bool) -> None",
      "docstring": "Shutdown the global thread pool.",
      "parameters": [
        {
          "name": "wait",
          "annotation": "bool",
          "default": "True",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "None",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "_thread_pool.shutdown",
        "logger.debug"
      ],
      "raises": [],
      "line_number": 116
    },
    {
      "id": "src.pokertool.thread_utils.run_in_thread",
      "type": "function",
      "name": "run_in_thread",
      "module": "src.pokertool.thread_utils",
      "signature": "def run_in_thread(func: Callable, args: Any, kwargs: Any) -> Future",
      "docstring": "Run a function in the thread pool.",
      "parameters": [
        {
          "name": "func",
          "annotation": "Callable",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "args",
          "annotation": "Any",
          "default": null,
          "kind": "VAR_POSITIONAL"
        },
        {
          "name": "kwargs",
          "annotation": "Any",
          "default": null,
          "kind": "VAR_KEYWORD"
        }
      ],
      "return_type": "Future",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_thread_pool",
        "pool.submit"
      ],
      "raises": [],
      "line_number": 127
    },
    {
      "id": "src.pokertool.thread_utils.thread_safe",
      "type": "function",
      "name": "thread_safe",
      "module": "src.pokertool.thread_utils",
      "signature": "def thread_safe(func: Callable) -> Callable",
      "docstring": "Decorator to make a function thread-safe using a lock.",
      "parameters": [
        {
          "name": "func",
          "annotation": "Callable",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Callable",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "threading.RLock",
        "func",
        "functools.wraps"
      ],
      "raises": [],
      "line_number": 133
    },
    {
      "id": "src.pokertool.thread_utils.with_timeout",
      "type": "function",
      "name": "with_timeout",
      "module": "src.pokertool.thread_utils",
      "signature": "def with_timeout(timeout: float) -> Callable",
      "docstring": "Decorator to add timeout to a function.",
      "parameters": [
        {
          "name": "timeout",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Callable",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 4,
      "calls": [
        "func",
        "threading.Thread",
        "thread.start",
        "thread.join",
        "thread.is_alive",
        "logger.warning",
        "TimeoutError",
        "functools.wraps"
      ],
      "raises": [
        "TimeoutError"
      ],
      "line_number": 145
    },
    {
      "id": "src.pokertool.thread_utils.register_callback",
      "type": "function",
      "name": "register_callback",
      "module": "src.pokertool.thread_utils",
      "signature": "def register_callback(event: str, callback: Callable) -> None",
      "docstring": "Register a global callback.",
      "parameters": [
        {
          "name": "event",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "callback",
          "annotation": "Callable",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "None",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "_callback_manager.register"
      ],
      "raises": [],
      "line_number": 216
    },
    {
      "id": "src.pokertool.thread_utils.trigger_callbacks",
      "type": "function",
      "name": "trigger_callbacks",
      "module": "src.pokertool.thread_utils",
      "signature": "def trigger_callbacks(event: str, args: Any, kwargs: Any) -> List[Future]",
      "docstring": "Trigger global callbacks.",
      "parameters": [
        {
          "name": "event",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "args",
          "annotation": "Any",
          "default": null,
          "kind": "VAR_POSITIONAL"
        },
        {
          "name": "kwargs",
          "annotation": "Any",
          "default": null,
          "kind": "VAR_KEYWORD"
        }
      ],
      "return_type": "List[Future]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "_callback_manager.trigger"
      ],
      "raises": [],
      "line_number": 221
    },
    {
      "id": "src.pokertool.thread_utils.get_thread_local",
      "type": "function",
      "name": "get_thread_local",
      "module": "src.pokertool.thread_utils",
      "signature": "def get_thread_local(key: str, default: Any) -> Any",
      "docstring": "Get a value from thread-local storage.",
      "parameters": [
        {
          "name": "key",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "default",
          "annotation": "Any",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Any",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "getattr"
      ],
      "raises": [],
      "line_number": 227
    },
    {
      "id": "src.pokertool.thread_utils.set_thread_local",
      "type": "function",
      "name": "set_thread_local",
      "module": "src.pokertool.thread_utils",
      "signature": "def set_thread_local(key: str, value: Any) -> None",
      "docstring": "Set a value in thread-local storage.",
      "parameters": [
        {
          "name": "key",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "value",
          "annotation": "Any",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "None",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "setattr"
      ],
      "raises": [],
      "line_number": 232
    },
    {
      "id": "src.pokertool.thread_utils.clear_thread_local",
      "type": "function",
      "name": "clear_thread_local",
      "module": "src.pokertool.thread_utils",
      "signature": "def clear_thread_local() -> None",
      "docstring": "Clear all thread-local storage.",
      "parameters": [],
      "return_type": "None",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "list",
        "keys",
        "vars",
        "delattr"
      ],
      "raises": [],
      "line_number": 237
    },
    {
      "id": "src.pokertool.thread_utils.cleanup_threading",
      "type": "function",
      "name": "cleanup_threading",
      "module": "src.pokertool.thread_utils",
      "signature": "def cleanup_threading() -> None",
      "docstring": "Clean up threading resources.",
      "parameters": [],
      "return_type": "None",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "shutdown_thread_pool",
        "clear_thread_local"
      ],
      "raises": [],
      "line_number": 243
    },
    {
      "id": "src.pokertool.api_versioning",
      "type": "module",
      "path": "src/pokertool/api_versioning.py",
      "docstring": "API Versioning Middleware and Utilities\n========================================\n\nProvides version management for PokerTool REST API with support for\nURL-based and header-based versioning.\n\nFeatures:\n- URL path versioning (/v1/endpoint, /v2/endpoint)\n- Header-based version negotiation (Accept-Version)\n- Deprecation warnings\n- Version lifecycle management\n- Automatic version header injection\n\nModule: pokertool.api_versioning\nVersion: 1.0.0",
      "version": null,
      "author": null,
      "complexity": 47,
      "loc": 514,
      "dependencies": [
        "starlette",
        "logging",
        "fastapi",
        "typing",
        "dataclasses",
        "re",
        "enum",
        "datetime"
      ]
    },
    {
      "id": "src.pokertool.api_versioning.VersionStatus",
      "type": "class",
      "name": "VersionStatus",
      "module": "src.pokertool.api_versioning",
      "docstring": "API version lifecycle status.",
      "bases": [
        "str",
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 35
    },
    {
      "id": "src.pokertool.api_versioning.VersionInfo",
      "type": "class",
      "name": "VersionInfo",
      "module": "src.pokertool.api_versioning",
      "docstring": "Information about an API version.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 45
    },
    {
      "id": "src.pokertool.api_versioning.APIVersionManager",
      "type": "class",
      "name": "APIVersionManager",
      "module": "src.pokertool.api_versioning",
      "docstring": "Manages API version lifecycle and metadata.\n\nFeatures:\n- Version registration and tracking\n- Status management (development, stable, deprecated, etc.)\n- Deprecation and sunset date tracking\n- Version comparison and validation",
      "bases": [],
      "methods": [
        "__init__",
        "register_version",
        "set_default_version",
        "get_default_version",
        "is_version_supported",
        "is_version_deprecated",
        "get_version_info",
        "get_all_versions",
        "get_supported_versions",
        "deprecate_version"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 19,
      "line_number": 55
    },
    {
      "id": "src.pokertool.api_versioning.APIVersionMiddleware",
      "type": "class",
      "name": "APIVersionMiddleware",
      "module": "src.pokertool.api_versioning",
      "docstring": "Middleware for API version management.\n\nFeatures:\n- Extracts version from URL path or headers\n- Validates version support\n- Adds version headers to responses\n- Handles deprecation warnings",
      "bases": [
        "BaseHTTPMiddleware"
      ],
      "methods": [
        "__init__",
        "extract_version_from_url",
        "dispatch",
        "_get_successor_version"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 16,
      "line_number": 228
    },
    {
      "id": "src.pokertool.api_versioning.get_version_manager",
      "type": "function",
      "name": "get_version_manager",
      "module": "src.pokertool.api_versioning",
      "signature": "def get_version_manager() -> APIVersionManager",
      "docstring": "Get or create global version manager instance.\n\nReturns:\n    Global APIVersionManager instance",
      "parameters": [],
      "return_type": "APIVersionManager",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "APIVersionManager"
      ],
      "raises": [],
      "line_number": 369
    },
    {
      "id": "src.pokertool.api_versioning.require_version",
      "type": "function",
      "name": "require_version",
      "module": "src.pokertool.api_versioning",
      "signature": "def require_version(request: Request, min_version: Optional[str], max_version: Optional[str]) -> str",
      "docstring": "FastAPI dependency to require specific version range.\n\nArgs:\n    request: Current request\n    min_version: Minimum required version\n    max_version: Maximum allowed version\n\nReturns:\n    Current API version\n\nRaises:\n    HTTPException: If version requirements not met",
      "parameters": [
        {
          "name": "request",
          "annotation": "Request",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "min_version",
          "annotation": "Optional[str]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "max_version",
          "annotation": "Optional[str]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": true,
      "is_generator": false,
      "is_method": false,
      "complexity": 6,
      "calls": [
        "getattr",
        "HTTPException",
        "re.match",
        "int",
        "match.group",
        "version_number",
        "version_number",
        "HTTPException",
        "version_number",
        "HTTPException"
      ],
      "raises": [
        "HTTPException",
        "HTTPException",
        "HTTPException"
      ],
      "line_number": 383
    },
    {
      "id": "src.pokertool.api_versioning.setup_api_versioning",
      "type": "function",
      "name": "setup_api_versioning",
      "module": "src.pokertool.api_versioning",
      "signature": "def setup_api_versioning(app, supported_versions: List[str], default_version: str, deprecated_versions: Optional[Dict[str, dict]])",
      "docstring": "Setup API versioning for FastAPI application.\n\nArgs:\n    app: FastAPI application instance\n    supported_versions: List of supported version identifiers\n    default_version: Default version to use\n    deprecated_versions: Dict of deprecated versions with deprecation info\n\nExample:\n    setup_api_versioning(\n        app,\n        supported_versions=[\"v1\", \"v2\"],\n        default_version=\"v2\",\n        deprecated_versions={\n            \"v1\": {\n                \"deprecation_date\": date(2026, 1, 1),\n                \"sunset_date\": date(2026, 7, 1)\n            }\n        }\n    )",
      "parameters": [
        {
          "name": "app",
          "annotation": null,
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "supported_versions",
          "annotation": "List[str]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "default_version",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "deprecated_versions",
          "annotation": "Optional[Dict[str, dict]]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 4,
      "calls": [
        "get_version_manager",
        "version_manager.register_version",
        "dep_info.get",
        "dep_info.get",
        "version_manager.register_version",
        "version_manager.set_default_version",
        "app.add_middleware",
        "version_manager.get_default_version",
        "version_manager.get_supported_versions",
        "v.release_date.isoformat",
        "v.deprecation_date.isoformat",
        "v.sunset_date.isoformat",
        "version_manager.get_all_versions",
        "app.get",
        "logger.info"
      ],
      "raises": [],
      "line_number": 437
    },
    {
      "id": "src.pokertool.ocr_ensemble",
      "type": "module",
      "path": "src/pokertool/ocr_ensemble.py",
      "docstring": "OCR Ensemble and Validator for PokerTool\n=========================================\n\nMulti-engine OCR system with ensemble voting, confidence weighting,\nand poker-specific lexical validation for maximum accuracy.\n\nFeatures:\n- Multiple OCR engines (Tesseract, PaddleOCR, EasyOCR)\n- Ensemble voting with character-level confidence fusion\n- Poker domain-specific validators\n- Improbable value rejection\n- Benchmarking and accuracy tracking\n\nVersion: 1.0.0",
      "version": null,
      "author": null,
      "complexity": 86,
      "loc": 629,
      "dependencies": [
        "logging",
        "numpy",
        "__future__",
        "typing",
        "dataclasses",
        "re",
        "enum"
      ]
    },
    {
      "id": "src.pokertool.ocr_ensemble.OCREngine",
      "type": "class",
      "name": "OCREngine",
      "module": "src.pokertool.ocr_ensemble",
      "docstring": "Available OCR engines.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 33
    },
    {
      "id": "src.pokertool.ocr_ensemble.FieldType",
      "type": "class",
      "name": "FieldType",
      "module": "src.pokertool.ocr_ensemble",
      "docstring": "Types of poker fields for validation.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 40
    },
    {
      "id": "src.pokertool.ocr_ensemble.OCRResult",
      "type": "class",
      "name": "OCRResult",
      "module": "src.pokertool.ocr_ensemble",
      "docstring": "Result from a single OCR engine.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 54
    },
    {
      "id": "src.pokertool.ocr_ensemble.EnsembleResult",
      "type": "class",
      "name": "EnsembleResult",
      "module": "src.pokertool.ocr_ensemble",
      "docstring": "Final ensemble result with metadata.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 63
    },
    {
      "id": "src.pokertool.ocr_ensemble.PokerLexicalValidator",
      "type": "class",
      "name": "PokerLexicalValidator",
      "module": "src.pokertool.ocr_ensemble",
      "docstring": "Poker-specific lexical validator.\n\nValidates OCR results against known poker terminology,\nnumeric ranges, and domain-specific patterns.",
      "bases": [],
      "methods": [
        "__init__",
        "validate",
        "_validate_player_name",
        "_validate_monetary_value",
        "_validate_card_rank",
        "_validate_card_suit",
        "_validate_timer",
        "_validate_position",
        "_validate_blind",
        "auto_correct"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 42,
      "line_number": 73
    },
    {
      "id": "src.pokertool.ocr_ensemble.OCREnsemble",
      "type": "class",
      "name": "OCREnsemble",
      "module": "src.pokertool.ocr_ensemble",
      "docstring": "Multi-engine OCR ensemble with confidence-weighted voting.\n\nCombines results from multiple OCR engines using character-level\nconfidence fusion and domain-specific validation.",
      "bases": [],
      "methods": [
        "__init__",
        "_detect_available_engines",
        "recognize",
        "_run_single_engine",
        "_run_tesseract",
        "_run_paddle",
        "_run_easyocr",
        "_ensemble_vote",
        "get_stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 42,
      "line_number": 276
    },
    {
      "id": "src.pokertool.ocr_ensemble.get_ocr_ensemble",
      "type": "function",
      "name": "get_ocr_ensemble",
      "module": "src.pokertool.ocr_ensemble",
      "signature": "def get_ocr_ensemble() -> OCREnsemble",
      "docstring": "Get the global OCR ensemble instance.",
      "parameters": [],
      "return_type": "OCREnsemble",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "OCREnsemble"
      ],
      "raises": [],
      "line_number": 595
    },
    {
      "id": "src.pokertool.gamification",
      "type": "module",
      "path": "src/pokertool/gamification.py",
      "docstring": "Gamification engine with achievements, badges, and progress tracking.",
      "version": null,
      "author": null,
      "complexity": 24,
      "loc": 170,
      "dependencies": [
        "pathlib",
        "time",
        "__future__",
        "typing",
        "dataclasses",
        "json"
      ]
    },
    {
      "id": "src.pokertool.gamification.Achievement",
      "type": "class",
      "name": "Achievement",
      "module": "src.pokertool.gamification",
      "docstring": "Achievement definition.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 16
    },
    {
      "id": "src.pokertool.gamification.Badge",
      "type": "class",
      "name": "Badge",
      "module": "src.pokertool.gamification",
      "docstring": "Badge definition.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 27
    },
    {
      "id": "src.pokertool.gamification.ProgressState",
      "type": "class",
      "name": "ProgressState",
      "module": "src.pokertool.gamification",
      "docstring": "Player gamification progress.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 37
    },
    {
      "id": "src.pokertool.gamification.GamificationEngine",
      "type": "class",
      "name": "GamificationEngine",
      "module": "src.pokertool.gamification",
      "docstring": "Manages achievements, badges, and progress.",
      "bases": [],
      "methods": [
        "__init__",
        "register_achievement",
        "register_badge",
        "add_experience",
        "record_activity",
        "award_badge",
        "progress_snapshot",
        "leaderboard",
        "export_state",
        "_load_state",
        "_persist_state"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 24,
      "line_number": 49
    },
    {
      "id": "src.pokertool.input_sanitizer",
      "type": "module",
      "path": "src/pokertool/input_sanitizer.py",
      "docstring": "Input Sanitization Module\n=========================\n\nComprehensive input sanitization and validation to prevent XSS, SQL injection,\nand other security vulnerabilities.\n\nModule: pokertool.input_sanitizer\nVersion: 1.0.0",
      "version": null,
      "author": null,
      "complexity": 44,
      "loc": 302,
      "dependencies": [
        "typing",
        "enum",
        "re",
        "html"
      ]
    },
    {
      "id": "src.pokertool.input_sanitizer.SanitizationLevel",
      "type": "class",
      "name": "SanitizationLevel",
      "module": "src.pokertool.input_sanitizer",
      "docstring": "Sanitization strictness levels",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 21
    },
    {
      "id": "src.pokertool.input_sanitizer.InputSanitizer",
      "type": "class",
      "name": "InputSanitizer",
      "module": "src.pokertool.input_sanitizer",
      "docstring": "Comprehensive input sanitization for security",
      "bases": [],
      "methods": [
        "sanitize_string",
        "sanitize_dict",
        "sanitize_list",
        "validate_email",
        "validate_username",
        "sanitize_filename",
        "sanitize_url",
        "sanitize_poker_hand",
        "sanitize_numeric"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 38,
      "line_number": 29
    },
    {
      "id": "src.pokertool.input_sanitizer.sanitize",
      "type": "function",
      "name": "sanitize",
      "module": "src.pokertool.input_sanitizer",
      "signature": "def sanitize(value: Any, level: SanitizationLevel) -> Any",
      "docstring": "Convenience function for sanitization",
      "parameters": [
        {
          "name": "value",
          "annotation": "Any",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "level",
          "annotation": "SanitizationLevel",
          "default": "SanitizationLevel.MODERATE",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Any",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 4,
      "calls": [
        "isinstance",
        "InputSanitizer.sanitize_string",
        "isinstance",
        "InputSanitizer.sanitize_dict",
        "isinstance",
        "InputSanitizer.sanitize_list"
      ],
      "raises": [],
      "line_number": 283
    },
    {
      "id": "src.pokertool.input_sanitizer.sanitize_basic",
      "type": "function",
      "name": "sanitize_basic",
      "module": "src.pokertool.input_sanitizer",
      "signature": "def sanitize_basic(value: str) -> str",
      "docstring": "Quick basic sanitization",
      "parameters": [
        {
          "name": "value",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "InputSanitizer.sanitize_string"
      ],
      "raises": [],
      "line_number": 295
    },
    {
      "id": "src.pokertool.input_sanitizer.sanitize_strict",
      "type": "function",
      "name": "sanitize_strict",
      "module": "src.pokertool.input_sanitizer",
      "signature": "def sanitize_strict(value: str) -> str",
      "docstring": "Strict sanitization",
      "parameters": [
        {
          "name": "value",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "InputSanitizer.sanitize_string"
      ],
      "raises": [],
      "line_number": 300
    },
    {
      "id": "src.pokertool.hand_converter",
      "type": "module",
      "path": "src/pokertool/hand_converter.py",
      "docstring": "Universal hand history converter with format detection.",
      "version": null,
      "author": null,
      "complexity": 39,
      "loc": 247,
      "dependencies": [
        "pathlib",
        "hashlib",
        "__future__",
        "typing",
        "dataclasses",
        "re",
        "enum"
      ]
    },
    {
      "id": "src.pokertool.hand_converter.ConversionError",
      "type": "class",
      "name": "ConversionError",
      "module": "src.pokertool.hand_converter",
      "docstring": "Raised when a hand conversion cannot be completed.",
      "bases": [
        "Exception"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 13
    },
    {
      "id": "src.pokertool.hand_converter.PokerSite",
      "type": "class",
      "name": "PokerSite",
      "module": "src.pokertool.hand_converter",
      "docstring": "Supported poker sites and canonical targets.",
      "bases": [
        "Enum"
      ],
      "methods": [
        "from_value"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 6,
      "line_number": 17
    },
    {
      "id": "src.pokertool.hand_converter.HandMetadata",
      "type": "class",
      "name": "HandMetadata",
      "module": "src.pokertool.hand_converter",
      "docstring": "Metadata preserved during conversion.",
      "bases": [],
      "methods": [
        "to_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 43
    },
    {
      "id": "src.pokertool.hand_converter.HandConversionResult",
      "type": "class",
      "name": "HandConversionResult",
      "module": "src.pokertool.hand_converter",
      "docstring": "Returned payload for each conversion.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 71
    },
    {
      "id": "src.pokertool.hand_converter.HandFormatDetector",
      "type": "class",
      "name": "HandFormatDetector",
      "module": "src.pokertool.hand_converter",
      "docstring": "Detect the originating site for a raw hand history string.",
      "bases": [],
      "methods": [
        "detect"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 78
    },
    {
      "id": "src.pokertool.hand_converter.HandConverter",
      "type": "class",
      "name": "HandConverter",
      "module": "src.pokertool.hand_converter",
      "docstring": "High-level interface for converting hand histories between formats.",
      "bases": [],
      "methods": [
        "__init__",
        "convert_hand",
        "convert_batch",
        "convert_file",
        "get_conversion_log",
        "_sanitize",
        "_extract_metadata",
        "_extract_site_label",
        "_extract_hand_id",
        "_extract_players",
        "_render_converted_hand",
        "_search"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 27,
      "line_number": 101
    },
    {
      "id": "src.pokertool.formatting_utils",
      "type": "module",
      "path": "src/pokertool/formatting_utils.py",
      "docstring": "Formatting Utilities for PokerTool\n===================================\n\nProvides consistent formatting for probabilities, percentages, currencies, and other values\nthroughout the application for improved accuracy and presentation.\n\nVersion: 64.0.0",
      "version": null,
      "author": null,
      "complexity": 34,
      "loc": 359,
      "dependencies": [
        "typing",
        "math"
      ]
    },
    {
      "id": "src.pokertool.formatting_utils.format_percentage",
      "type": "function",
      "name": "format_percentage",
      "module": "src.pokertool.formatting_utils",
      "signature": "def format_percentage(value: float, decimal_places: int, include_symbol: bool, confidence_interval: Optional[Tuple[float, float]]) -> str",
      "docstring": "Format a probability (0.0-1.0) as a percentage string.\n\nArgs:\n    value: Probability value (0.0-1.0)\n    decimal_places: Number of decimal places (default 1)\n    include_symbol: Whether to include % symbol (default True)\n    confidence_interval: Optional (lower, upper) bounds for CI display\n\nReturns:\n    Formatted percentage string\n\nExamples:\n    >>> format_percentage(0.453)\n    '45.3%'\n    >>> format_percentage(0.453, decimal_places=2)\n    '45.30%'\n    >>> format_percentage(0.453, confidence_interval=(0.42, 0.48))\n    '45.3% [42.0%-48.0%]'",
      "parameters": [
        {
          "name": "value",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "decimal_places",
          "annotation": "int",
          "default": "1",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "include_symbol",
          "annotation": "bool",
          "default": "True",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "confidence_interval",
          "annotation": "Optional[Tuple[float, float]]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "max",
        "min",
        "format_str.format",
        "max",
        "min",
        "max",
        "min",
        "format_str.format",
        "format_str.format"
      ],
      "raises": [],
      "line_number": 18
    },
    {
      "id": "src.pokertool.formatting_utils.format_currency",
      "type": "function",
      "name": "format_currency",
      "module": "src.pokertool.formatting_utils",
      "signature": "def format_currency(value: float, symbol: str, decimal_places: int, include_sign: bool) -> str",
      "docstring": "Format currency value.\n\nArgs:\n    value: Currency amount\n    symbol: Currency symbol (default $)\n    decimal_places: Number of decimal places\n    include_sign: Whether to include + for positive values\n\nReturns:\n    Formatted currency string\n\nExamples:\n    >>> format_currency(123.45)\n    '$123.45'\n    >>> format_currency(-50.0)\n    '-$50.00'\n    >>> format_currency(75.5, include_sign=True)\n    '+$75.50'",
      "parameters": [
        {
          "name": "value",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "symbol",
          "annotation": "str",
          "default": "'$'",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "decimal_places",
          "annotation": "int",
          "default": "2",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "include_sign",
          "annotation": "bool",
          "default": "True",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 4,
      "calls": [
        "format_str.format",
        "abs"
      ],
      "raises": [],
      "line_number": 70
    },
    {
      "id": "src.pokertool.formatting_utils.format_big_blinds",
      "type": "function",
      "name": "format_big_blinds",
      "module": "src.pokertool.formatting_utils",
      "signature": "def format_big_blinds(value: float, decimal_places: int, suffix: str) -> str",
      "docstring": "Format value in big blinds.\n\nArgs:\n    value: Value in big blinds\n    decimal_places: Number of decimal places\n    suffix: Suffix to append (default BB)\n\nReturns:\n    Formatted big blind string\n\nExamples:\n    >>> format_big_blinds(15.5)\n    '15.5BB'\n    >>> format_big_blinds(-3.2)\n    '-3.2BB'",
      "parameters": [
        {
          "name": "value",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "decimal_places",
          "annotation": "int",
          "default": "1",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "suffix",
          "annotation": "str",
          "default": "'BB'",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "format_str.format"
      ],
      "raises": [],
      "line_number": 108
    },
    {
      "id": "src.pokertool.formatting_utils.format_odds",
      "type": "function",
      "name": "format_odds",
      "module": "src.pokertool.formatting_utils",
      "signature": "def format_odds(pot_odds: float, format_type: str) -> str",
      "docstring": "Format pot odds.\n\nArgs:\n    pot_odds: Pot odds as decimal (e.g., 0.333 for 3:1)\n    format_type: \"percentage\", \"ratio\", or \"both\"\n\nReturns:\n    Formatted odds string\n\nExamples:\n    >>> format_odds(0.333, \"percentage\")\n    '33.3%'\n    >>> format_odds(0.333, \"ratio\")\n    '2:1'\n    >>> format_odds(0.333, \"both\")\n    '33.3% (2:1)'",
      "parameters": [
        {
          "name": "pot_odds",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "format_type",
          "annotation": "str",
          "default": "'percentage'",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 5,
      "calls": [
        "format_percentage"
      ],
      "raises": [],
      "line_number": 135
    },
    {
      "id": "src.pokertool.formatting_utils.format_confidence_band",
      "type": "function",
      "name": "format_confidence_band",
      "module": "src.pokertool.formatting_utils",
      "signature": "def format_confidence_band(win_prob: float, lower: float, upper: float, style: str) -> str",
      "docstring": "Format confidence interval for win probability.\n\nArgs:\n    win_prob: Win probability (0.0-1.0)\n    lower: Lower bound of CI\n    upper: Upper bound of CI\n    style: \"compact\", \"verbose\", or \"symbol\"\n\nReturns:\n    Formatted confidence band string\n\nExamples:\n    >>> format_confidence_band(0.55, 0.52, 0.58, \"compact\")\n    '55.0% \u00b13.0%'\n    >>> format_confidence_band(0.55, 0.52, 0.58, \"verbose\")\n    '55.0% (95% CI: 52.0%-58.0%)'\n    >>> format_confidence_band(0.55, 0.52, 0.58, \"symbol\")\n    '55.0% [52.0%-58.0%]'",
      "parameters": [
        {
          "name": "win_prob",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "lower",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "upper",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "style",
          "annotation": "str",
          "default": "'compact'",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "format_percentage",
        "format_percentage",
        "format_percentage",
        "format_percentage",
        "format_percentage"
      ],
      "raises": [],
      "line_number": 174
    },
    {
      "id": "src.pokertool.formatting_utils.format_stack_size",
      "type": "function",
      "name": "format_stack_size",
      "module": "src.pokertool.formatting_utils",
      "signature": "def format_stack_size(stack: float, big_blind: float) -> str",
      "docstring": "Format stack size with appropriate scaling.\n\nArgs:\n    stack: Stack size in chips\n    big_blind: Big blind size for BB conversion\n\nReturns:\n    Formatted stack string\n\nExamples:\n    >>> format_stack_size(1500, 10)\n    '150BB ($1,500)'\n    >>> format_stack_size(50000)\n    '50,000BB'",
      "parameters": [
        {
          "name": "stack",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "big_blind",
          "annotation": "float",
          "default": "1.0",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [],
      "raises": [],
      "line_number": 215
    },
    {
      "id": "src.pokertool.formatting_utils.get_color_for_probability",
      "type": "function",
      "name": "get_color_for_probability",
      "module": "src.pokertool.formatting_utils",
      "signature": "def get_color_for_probability(probability: float, color_scheme: str) -> str",
      "docstring": "Get color code for probability value.\n\nArgs:\n    probability: Probability value (0.0-1.0)\n    color_scheme: \"traffic_light\", \"gradient\", or \"binary\"\n\nReturns:\n    Hex color code\n\nExamples:\n    >>> get_color_for_probability(0.7, \"traffic_light\")\n    '#00C853'  # Green\n    >>> get_color_for_probability(0.3, \"traffic_light\")\n    '#DD2C00'  # Red",
      "parameters": [
        {
          "name": "probability",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "color_scheme",
          "annotation": "str",
          "default": "'traffic_light'",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 6,
      "calls": [
        "max",
        "min",
        "int",
        "int"
      ],
      "raises": [],
      "line_number": 241
    },
    {
      "id": "src.pokertool.formatting_utils.get_color_for_confidence",
      "type": "function",
      "name": "get_color_for_confidence",
      "module": "src.pokertool.formatting_utils",
      "signature": "def get_color_for_confidence(confidence: float) -> str",
      "docstring": "Get color code for confidence level.\n\nArgs:\n    confidence: Confidence value (0.0-1.0)\n\nReturns:\n    Hex color code",
      "parameters": [
        {
          "name": "confidence",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 5,
      "calls": [
        "max",
        "min"
      ],
      "raises": [],
      "line_number": 289
    },
    {
      "id": "src.pokertool.formatting_utils.format_action_display",
      "type": "function",
      "name": "format_action_display",
      "module": "src.pokertool.formatting_utils",
      "signature": "def format_action_display(action: str, amount: Optional[float], pot_size: Optional[float]) -> str",
      "docstring": "Format action display with optional bet sizing context.\n\nArgs:\n    action: Action string (fold, call, raise, etc.)\n    amount: Bet/raise amount\n    pot_size: Current pot size\n\nReturns:\n    Formatted action string\n\nExamples:\n    >>> format_action_display(\"RAISE\", 50, 100)\n    'RAISE $50 (50% pot)'\n    >>> format_action_display(\"CALL\", 25)\n    'CALL $25'",
      "parameters": [
        {
          "name": "action",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "amount",
          "annotation": "Optional[float]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "pot_size",
          "annotation": "Optional[float]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 5,
      "calls": [
        "action.upper",
        "format_currency"
      ],
      "raises": [],
      "line_number": 313
    },
    {
      "id": "src.pokertool.roi_tracker",
      "type": "module",
      "path": "src/pokertool/roi_tracker.py",
      "docstring": "Region-of-Interest (ROI) Tracking System for Poker Screen Scraper\n==================================================================\n\nTracks which screen regions change between frames and only processes those regions.\nExpected improvement: 3-4x faster when table is stable (most of the time).\n\nKey Features:\n- Standard ROI grid (pot, board, 9 seats, action buttons)\n- Fast region hashing (perceptual hash per ROI)\n- Difference detector with configurable sensitivity\n- Integration with scraper to skip unchanged regions\n- Metrics tracking (regions processed, skip rate)",
      "version": null,
      "author": null,
      "complexity": 42,
      "loc": 547,
      "dependencies": [
        "logging",
        "numpy",
        "hashlib",
        "time",
        "typing",
        "dataclasses",
        "enum"
      ]
    },
    {
      "id": "src.pokertool.roi_tracker.ROIType",
      "type": "class",
      "name": "ROIType",
      "module": "src.pokertool.roi_tracker",
      "docstring": "Types of regions of interest on poker table.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 36
    },
    {
      "id": "src.pokertool.roi_tracker.ROIDefinition",
      "type": "class",
      "name": "ROIDefinition",
      "module": "src.pokertool.roi_tracker",
      "docstring": "Definition of a region of interest.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 56
    },
    {
      "id": "src.pokertool.roi_tracker.ROIState",
      "type": "class",
      "name": "ROIState",
      "module": "src.pokertool.roi_tracker",
      "docstring": "State of a tracked ROI.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 68
    },
    {
      "id": "src.pokertool.roi_tracker.ROIChangeDetection",
      "type": "class",
      "name": "ROIChangeDetection",
      "module": "src.pokertool.roi_tracker",
      "docstring": "Result of ROI change detection.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 80
    },
    {
      "id": "src.pokertool.roi_tracker.ROITracker",
      "type": "class",
      "name": "ROITracker",
      "module": "src.pokertool.roi_tracker",
      "docstring": "Region-of-Interest tracker for efficient poker table scraping.\n\nMaintains a grid of ROIs and tracks which regions change between frames.\nOnly processes changed regions to achieve 3-4x speedup.",
      "bases": [],
      "methods": [
        "__init__",
        "_define_standard_rois",
        "detect_changes",
        "_compute_roi_hash",
        "_is_roi_changed",
        "get_roi_region",
        "get_changed_seat_rois",
        "reset",
        "get_statistics",
        "print_statistics"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 40,
      "line_number": 89
    },
    {
      "id": "src.pokertool.roi_tracker.get_roi_tracker",
      "type": "function",
      "name": "get_roi_tracker",
      "module": "src.pokertool.roi_tracker",
      "signature": "def get_roi_tracker(enable_tracking: bool) -> ROITracker",
      "docstring": "Get singleton ROI tracker instance.\n\nArgs:\n    enable_tracking: Enable ROI tracking\n\nReturns:\n    ROITracker instance",
      "parameters": [
        {
          "name": "enable_tracking",
          "annotation": "bool",
          "default": "True",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "ROITracker",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "ROITracker"
      ],
      "raises": [],
      "line_number": 496
    },
    {
      "id": "src.pokertool.threading_utils",
      "type": "module",
      "path": "src/pokertool/threading_utils.py",
      "docstring": "Threading utilities for PokerTool.\nProvides thread-safe utilities and helpers for concurrent operations.",
      "version": null,
      "author": null,
      "complexity": 56,
      "loc": 250,
      "dependencies": [
        "logging",
        "functools",
        "weakref",
        "time",
        "typing",
        "concurrent",
        "enum",
        "threading"
      ]
    },
    {
      "id": "src.pokertool.threading_utils.ThreadSafeDict",
      "type": "class",
      "name": "ThreadSafeDict",
      "module": "src.pokertool.threading_utils",
      "docstring": "A thread-safe dictionary implementation.",
      "bases": [],
      "methods": [
        "__init__",
        "__getitem__",
        "__setitem__",
        "__delitem__",
        "__contains__",
        "get",
        "keys",
        "values",
        "items",
        "clear"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 19,
      "line_number": 25
    },
    {
      "id": "src.pokertool.threading_utils.ThreadSafeCounter",
      "type": "class",
      "name": "ThreadSafeCounter",
      "module": "src.pokertool.threading_utils",
      "docstring": "A thread-safe counter.",
      "bases": [],
      "methods": [
        "__init__",
        "increment",
        "decrement",
        "value"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 7,
      "line_number": 68
    },
    {
      "id": "src.pokertool.threading_utils.TaskPriority",
      "type": "class",
      "name": "TaskPriority",
      "module": "src.pokertool.threading_utils",
      "docstring": "Task priority levels for the thread pool.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 91
    },
    {
      "id": "src.pokertool.threading_utils.AsyncCallback",
      "type": "class",
      "name": "AsyncCallback",
      "module": "src.pokertool.threading_utils",
      "docstring": "Manages asynchronous callbacks.",
      "bases": [],
      "methods": [
        "__init__",
        "register",
        "unregister",
        "trigger"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 10,
      "line_number": 170
    },
    {
      "id": "src.pokertool.threading_utils.get_thread_pool",
      "type": "function",
      "name": "get_thread_pool",
      "module": "src.pokertool.threading_utils",
      "signature": "def get_thread_pool(max_workers: int) -> ThreadPoolExecutor",
      "docstring": "Get or create the global thread pool.",
      "parameters": [
        {
          "name": "max_workers",
          "annotation": "int",
          "default": "4",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "ThreadPoolExecutor",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "ThreadPoolExecutor",
        "logger.debug"
      ],
      "raises": [],
      "line_number": 99
    },
    {
      "id": "src.pokertool.threading_utils.shutdown_thread_pool",
      "type": "function",
      "name": "shutdown_thread_pool",
      "module": "src.pokertool.threading_utils",
      "signature": "def shutdown_thread_pool(wait: bool) -> None",
      "docstring": "Shutdown the global thread pool.",
      "parameters": [
        {
          "name": "wait",
          "annotation": "bool",
          "default": "True",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "None",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "_thread_pool.shutdown",
        "logger.debug"
      ],
      "raises": [],
      "line_number": 113
    },
    {
      "id": "src.pokertool.threading_utils.run_in_thread",
      "type": "function",
      "name": "run_in_thread",
      "module": "src.pokertool.threading_utils",
      "signature": "def run_in_thread(func: Callable, args, kwargs) -> Future",
      "docstring": "Run a function in the thread pool.",
      "parameters": [
        {
          "name": "func",
          "annotation": "Callable",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "args",
          "annotation": null,
          "default": null,
          "kind": "VAR_POSITIONAL"
        },
        {
          "name": "kwargs",
          "annotation": null,
          "default": null,
          "kind": "VAR_KEYWORD"
        }
      ],
      "return_type": "Future",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "get_thread_pool",
        "pool.submit"
      ],
      "raises": [],
      "line_number": 123
    },
    {
      "id": "src.pokertool.threading_utils.thread_safe",
      "type": "function",
      "name": "thread_safe",
      "module": "src.pokertool.threading_utils",
      "signature": "def thread_safe(func: Callable) -> Callable",
      "docstring": "Decorator to make a function thread-safe using a lock.",
      "parameters": [
        {
          "name": "func",
          "annotation": "Callable",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Callable",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "threading.RLock",
        "func",
        "functools.wraps"
      ],
      "raises": [],
      "line_number": 128
    },
    {
      "id": "src.pokertool.threading_utils.with_timeout",
      "type": "function",
      "name": "with_timeout",
      "module": "src.pokertool.threading_utils",
      "signature": "def with_timeout(timeout: float)",
      "docstring": "Decorator to add timeout to a function.",
      "parameters": [
        {
          "name": "timeout",
          "annotation": "float",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 4,
      "calls": [
        "func",
        "threading.Thread",
        "thread.start",
        "thread.join",
        "thread.is_alive",
        "logger.warning",
        "TimeoutError",
        "functools.wraps"
      ],
      "raises": [
        "TimeoutError"
      ],
      "line_number": 139
    },
    {
      "id": "src.pokertool.threading_utils.register_callback",
      "type": "function",
      "name": "register_callback",
      "module": "src.pokertool.threading_utils",
      "signature": "def register_callback(event: str, callback: Callable) -> None",
      "docstring": "Register a global callback.",
      "parameters": [
        {
          "name": "event",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "callback",
          "annotation": "Callable",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "None",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "_callback_manager.register"
      ],
      "raises": [],
      "line_number": 205
    },
    {
      "id": "src.pokertool.threading_utils.trigger_callbacks",
      "type": "function",
      "name": "trigger_callbacks",
      "module": "src.pokertool.threading_utils",
      "signature": "def trigger_callbacks(event: str, args, kwargs) -> List[Future]",
      "docstring": "Trigger global callbacks.",
      "parameters": [
        {
          "name": "event",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "args",
          "annotation": null,
          "default": null,
          "kind": "VAR_POSITIONAL"
        },
        {
          "name": "kwargs",
          "annotation": null,
          "default": null,
          "kind": "VAR_KEYWORD"
        }
      ],
      "return_type": "List[Future]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "_callback_manager.trigger"
      ],
      "raises": [],
      "line_number": 209
    },
    {
      "id": "src.pokertool.threading_utils.get_thread_local",
      "type": "function",
      "name": "get_thread_local",
      "module": "src.pokertool.threading_utils",
      "signature": "def get_thread_local(key: str, default: Any) -> Any",
      "docstring": "Get a value from thread-local storage.",
      "parameters": [
        {
          "name": "key",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "default",
          "annotation": "Any",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Any",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "getattr"
      ],
      "raises": [],
      "line_number": 214
    },
    {
      "id": "src.pokertool.threading_utils.set_thread_local",
      "type": "function",
      "name": "set_thread_local",
      "module": "src.pokertool.threading_utils",
      "signature": "def set_thread_local(key: str, value: Any) -> None",
      "docstring": "Set a value in thread-local storage.",
      "parameters": [
        {
          "name": "key",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "value",
          "annotation": "Any",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "None",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "setattr"
      ],
      "raises": [],
      "line_number": 218
    },
    {
      "id": "src.pokertool.threading_utils.clear_thread_local",
      "type": "function",
      "name": "clear_thread_local",
      "module": "src.pokertool.threading_utils",
      "signature": "def clear_thread_local() -> None",
      "docstring": "Clear all thread-local storage.",
      "parameters": [],
      "return_type": "None",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "list",
        "keys",
        "vars",
        "delattr"
      ],
      "raises": [],
      "line_number": 222
    },
    {
      "id": "src.pokertool.threading_utils.cleanup_threading",
      "type": "function",
      "name": "cleanup_threading",
      "module": "src.pokertool.threading_utils",
      "signature": "def cleanup_threading() -> None",
      "docstring": "Clean up threading resources.",
      "parameters": [],
      "return_type": "None",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "shutdown_thread_pool",
        "clear_thread_local"
      ],
      "raises": [],
      "line_number": 228
    },
    {
      "id": "src.pokertool.core",
      "type": "module",
      "path": "src/pokertool/core/__init__.py",
      "docstring": null,
      "version": null,
      "author": null,
      "complexity": 58,
      "loc": 362,
      "dependencies": [
        "__future__",
        "typing",
        "dataclasses",
        "collections",
        "enum"
      ]
    },
    {
      "id": "src.pokertool.core.Rank",
      "type": "class",
      "name": "Rank",
      "module": "src.pokertool.core",
      "docstring": "Standard poker ranks with helper properties for legacy Callers.",
      "bases": [
        "Enum"
      ],
      "methods": [
        "__new__",
        "sym",
        "val",
        "from_symbol"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 11,
      "line_number": 11
    },
    {
      "id": "src.pokertool.core.Suit",
      "type": "class",
      "name": "Suit",
      "module": "src.pokertool.core",
      "docstring": "Standard suits with glyph helpers.",
      "bases": [
        "Enum"
      ],
      "methods": [
        "__new__",
        "glyph",
        "letter",
        "from_symbol"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 6,
      "line_number": 62
    },
    {
      "id": "src.pokertool.core.Position",
      "type": "class",
      "name": "Position",
      "module": "src.pokertool.core",
      "docstring": "Table positions with simple categorisation helpers.",
      "bases": [
        "Enum"
      ],
      "methods": [
        "category",
        "is_late"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 113
    },
    {
      "id": "src.pokertool.core.Card",
      "type": "class",
      "name": "Card",
      "module": "src.pokertool.core",
      "docstring": "Immutable representation of a playing card.",
      "bases": [],
      "methods": [
        "__post_init__",
        "__str__"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 145
    },
    {
      "id": "src.pokertool.core.HandAnalysisResult",
      "type": "class",
      "name": "HandAnalysisResult",
      "module": "src.pokertool.core",
      "docstring": null,
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 160
    },
    {
      "id": "src.pokertool.core.parse_card",
      "type": "function",
      "name": "parse_card",
      "module": "src.pokertool.core",
      "signature": "def parse_card(value: CardLike) -> Card",
      "docstring": "Parse a string like ``'As'`` into a :class:`Card`.",
      "parameters": [
        {
          "name": "value",
          "annotation": "CardLike",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Card",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 8,
      "calls": [
        "isinstance",
        "isinstance",
        "len",
        "ValueError",
        "Card",
        "Rank.from_symbol",
        "Suit.from_symbol",
        "strip",
        "str",
        "len",
        "ValueError",
        "ValueError",
        "Card",
        "Rank.from_symbol",
        "Suit.from_symbol",
        "ValueError"
      ],
      "raises": [
        "ValueError",
        "ValueError",
        "ValueError",
        "ValueError"
      ],
      "line_number": 166
    },
    {
      "id": "src.pokertool.core._normalise_cards",
      "type": "function",
      "name": "_normalise_cards",
      "module": "src.pokertool.core",
      "signature": "def _normalise_cards(cards: Optional[Sequence[CardLike]]) -> List[Card]",
      "docstring": null,
      "parameters": [
        {
          "name": "cards",
          "annotation": "Optional[Sequence[CardLike]]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "List[Card]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "parse_card"
      ],
      "raises": [],
      "line_number": 197
    },
    {
      "id": "src.pokertool.core.analyse_hand",
      "type": "function",
      "name": "analyse_hand",
      "module": "src.pokertool.core",
      "signature": "def analyse_hand(hole_cards: Sequence[CardLike], board_cards: Optional[Sequence[CardLike]], position: Position, pot: Optional[float], to_call: Optional[float], num_opponents: int) -> HandAnalysisResult",
      "docstring": "Lightweight strategic analysis returning a score on a 0-10 scale.",
      "parameters": [
        {
          "name": "hole_cards",
          "annotation": "Sequence[CardLike]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "board_cards",
          "annotation": "Optional[Sequence[CardLike]]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "position",
          "annotation": "Position",
          "default": "Position.MP",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "pot",
          "annotation": "Optional[float]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "to_call",
          "annotation": "Optional[float]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "num_opponents",
          "annotation": "int",
          "default": "1",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "HandAnalysisResult",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 24,
      "calls": [
        "_normalise_cards",
        "len",
        "str",
        "position.category",
        "HandAnalysisResult",
        "_normalise_cards",
        "Counter",
        "Counter",
        "sorted",
        "sorted",
        "set",
        "len",
        "range",
        "len",
        "list",
        "range",
        "wheel.issubset",
        "set",
        "next",
        "suit_counter.items",
        "is_straight",
        "is_straight",
        "sorted",
        "rank_counter.values",
        "sum",
        "rank_counter.values",
        "max",
        "rank_counter.items",
        "sorted",
        "rank_counter.items",
        "max",
        "rank_counter.items",
        "position.category",
        "max",
        "max",
        "min",
        "min",
        "max",
        "str",
        "str",
        "position.category",
        "HandAnalysisResult",
        "round"
      ],
      "raises": [],
      "line_number": 214
    },
    {
      "id": "src.pokertool.enhanced_gui_components.settings_section",
      "type": "module",
      "path": "src/pokertool/enhanced_gui_components/settings_section.py",
      "docstring": "Settings tab implementation for the enhanced GUI.",
      "version": null,
      "author": null,
      "complexity": 13,
      "loc": 179,
      "dependencies": [
        "style",
        "__future__",
        "typing",
        "pokertool",
        "tkinter"
      ]
    },
    {
      "id": "src.pokertool.enhanced_gui_components.settings_section.SettingsSection",
      "type": "class",
      "name": "SettingsSection",
      "module": "src.pokertool.enhanced_gui_components.settings_section",
      "docstring": "Encapsulates settings UI: categories and localization controls.",
      "bases": [],
      "methods": [
        "__init__",
        "_build_ui",
        "update_localization_display",
        "_on_language_changed"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 13,
      "line_number": 24
    },
    {
      "id": "src.pokertool.enhanced_gui_components.style",
      "type": "module",
      "path": "src/pokertool/enhanced_gui_components/style.py",
      "docstring": "Enhanced GUI style constants.\n\nProvides centralized color and font definitions so that individual widgets can\nshare a consistent visual language without duplicating values.",
      "version": null,
      "author": null,
      "complexity": 0,
      "loc": 43,
      "dependencies": [
        "__future__"
      ]
    },
    {
      "id": "src.pokertool.enhanced_gui_components.autopilot_panel",
      "type": "module",
      "path": "src/pokertool/enhanced_gui_components/autopilot_panel.py",
      "docstring": "Autopilot control panel for the enhanced GUI.\n\nEncapsulates the dedicated Tkinter widget that exposes Autopilot controls,\nstatistics, and status feedback. The widget keeps translation handling and UI\nstate locally while notifying the host window through callbacks.",
      "version": null,
      "author": null,
      "complexity": 43,
      "loc": 527,
      "dependencies": [
        "style",
        "__future__",
        "typing",
        "dataclasses",
        "datetime",
        "pokertool",
        "tkinter"
      ]
    },
    {
      "id": "src.pokertool.enhanced_gui_components.autopilot_panel.AutopilotState",
      "type": "class",
      "name": "AutopilotState",
      "module": "src.pokertool.enhanced_gui_components.autopilot_panel",
      "docstring": "State snapshot for Autopilot.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 33
    },
    {
      "id": "src.pokertool.enhanced_gui_components.autopilot_panel.AutopilotControlPanel",
      "type": "class",
      "name": "AutopilotControlPanel",
      "module": "src.pokertool.enhanced_gui_components.autopilot_panel",
      "docstring": "Tkinter frame that renders Autopilot controls and statistics.",
      "bases": [
        "tk.Frame"
      ],
      "methods": [
        "__init__",
        "_on_destroy",
        "_register_translation",
        "apply_translations",
        "_refresh_statistics",
        "_build_ui",
        "_toggle_autopilot",
        "_on_site_changed",
        "_start_animation",
        "_animate_status",
        "update_statistics",
        "update_table_indicator"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 43,
      "line_number": 49
    },
    {
      "id": "src.pokertool.enhanced_gui_components.manual_section",
      "type": "module",
      "path": "src/pokertool/enhanced_gui_components/manual_section.py",
      "docstring": "Manual play workspace section for the enhanced GUI.",
      "version": null,
      "author": null,
      "complexity": 9,
      "loc": 194,
      "dependencies": [
        "style",
        "__future__",
        "typing",
        "pokertool",
        "tkinter"
      ]
    },
    {
      "id": "src.pokertool.enhanced_gui_components.manual_section.ManualPlaySection",
      "type": "class",
      "name": "ManualPlaySection",
      "module": "src.pokertool.enhanced_gui_components.manual_section",
      "docstring": "Encapsulates the Manual Play tab within the enhanced GUI.",
      "bases": [],
      "methods": [
        "__init__",
        "_build_ui",
        "update_autopilot_status",
        "focus_workspace"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 9,
      "line_number": 17
    },
    {
      "id": "src.pokertool.enhanced_gui_components.coaching_section",
      "type": "module",
      "path": "src/pokertool/enhanced_gui_components/coaching_section.py",
      "docstring": "Coaching tab implementation for the enhanced GUI.",
      "version": null,
      "author": null,
      "complexity": 71,
      "loc": 573,
      "dependencies": [
        "style",
        "__future__",
        "typing",
        "datetime",
        "pokertool",
        "tkinter"
      ]
    },
    {
      "id": "src.pokertool.enhanced_gui_components.coaching_section.CoachingSection",
      "type": "class",
      "name": "CoachingSection",
      "module": "src.pokertool.enhanced_gui_components.coaching_section",
      "docstring": "Encapsulates coaching UI and interactions.",
      "bases": [],
      "methods": [
        "__init__",
        "_build_ui",
        "refresh_advice",
        "update_advice",
        "append_mistakes",
        "evaluate_recent_hand",
        "mark_selected_scenario_completed",
        "launch_training_scenario",
        "handle_table_state",
        "populate_scenarios",
        "_populate_scenarios",
        "refresh_progress_summary",
        "_refresh_progress_summary",
        "refresh_tips",
        "_refresh_tips",
        "_resolve_position",
        "_normalize_cards"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 71,
      "line_number": 21
    },
    {
      "id": "src.pokertool.utils.dependency_manager",
      "type": "module",
      "path": "src/pokertool/utils/dependency_manager.py",
      "docstring": null,
      "version": "'1'",
      "author": null,
      "complexity": 42,
      "loc": 341,
      "dependencies": [
        "logging",
        "sys",
        "platform",
        "pathlib",
        "typing",
        "subprocess"
      ]
    },
    {
      "id": "src.pokertool.utils.dependency_manager.DependencyManager",
      "type": "class",
      "name": "DependencyManager",
      "module": "src.pokertool.utils.dependency_manager",
      "docstring": "Manages automatic installation and verification of dependencies.",
      "bases": [],
      "methods": [
        "__init__",
        "check_and_install_all",
        "_check_python_packages",
        "_check_package",
        "_install_package",
        "_check_tesseract",
        "_install_tesseract",
        "_install_tesseract_macos",
        "_install_tesseract_linux",
        "_install_tesseract_windows",
        "get_installation_report",
        "print_report"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 39,
      "line_number": 58
    },
    {
      "id": "src.pokertool.utils.dependency_manager.ensure_dependencies",
      "type": "function",
      "name": "ensure_dependencies",
      "module": "src.pokertool.utils.dependency_manager",
      "signature": "def ensure_dependencies(auto_install: bool, verbose: bool) -> bool",
      "docstring": "Convenience function to check and install all dependencies.\n\nArgs:\n    auto_install: If True, automatically install missing packages\n    verbose: If True, print detailed report\n\nReturns:\n    True if all dependencies satisfied, False otherwise\n\nExample:\n    >>> if ensure_dependencies():\n    >>>     print(\"Ready to run!\")\n    >>> else:\n    >>>     print(\"Some dependencies missing\")",
      "parameters": [
        {
          "name": "auto_install",
          "annotation": "bool",
          "default": "True",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "verbose",
          "annotation": "bool",
          "default": "True",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "bool",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "logging.basicConfig",
        "DependencyManager",
        "manager.check_and_install_all",
        "manager.print_report"
      ],
      "raises": [],
      "line_number": 293
    },
    {
      "id": "src.pokertool.utils.single_instance",
      "type": "module",
      "path": "src/pokertool/utils/single_instance.py",
      "docstring": "Utility helpers to ensure only one PokerTool GUI instance runs at a time.\n\nThese helpers manage a PID lock file in the user's home directory and expose\nsimple acquire/release functions that work across platforms.",
      "version": null,
      "author": null,
      "complexity": 25,
      "loc": 133,
      "dependencies": [
        "typing",
        "os",
        "pathlib",
        "__future__"
      ]
    },
    {
      "id": "src.pokertool.utils.single_instance._sanitize_app_name",
      "type": "function",
      "name": "_sanitize_app_name",
      "module": "src.pokertool.utils.single_instance",
      "signature": "def _sanitize_app_name(app_name: str) -> str",
      "docstring": "Return a filesystem-friendly lock file stem.",
      "parameters": [
        {
          "name": "app_name",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "join",
        "ch.isalnum",
        "lower",
        "app_name.strip"
      ],
      "raises": [],
      "line_number": 21
    },
    {
      "id": "src.pokertool.utils.single_instance._lock_path",
      "type": "function",
      "name": "_lock_path",
      "module": "src.pokertool.utils.single_instance",
      "signature": "def _lock_path(app_name: str) -> Path",
      "docstring": "Compute the absolute lock file path for the given app name.",
      "parameters": [
        {
          "name": "app_name",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Path",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "Path.home",
        "_LOCK_TEMPLATE.format",
        "_sanitize_app_name"
      ],
      "raises": [],
      "line_number": 29
    },
    {
      "id": "src.pokertool.utils.single_instance._pid_is_running",
      "type": "function",
      "name": "_pid_is_running",
      "module": "src.pokertool.utils.single_instance",
      "signature": "def _pid_is_running(pid: int) -> bool",
      "docstring": "Check whether a PID is alive without terminating it.",
      "parameters": [
        {
          "name": "pid",
          "annotation": "int",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "bool",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 5,
      "calls": [
        "os.kill"
      ],
      "raises": [],
      "line_number": 34
    },
    {
      "id": "src.pokertool.utils.single_instance.acquire_lock",
      "type": "function",
      "name": "acquire_lock",
      "module": "src.pokertool.utils.single_instance",
      "signature": "def acquire_lock(app_name: str, force_cleanup: bool) -> Tuple[Optional[Path], Optional[int]]",
      "docstring": "Attempt to acquire the single-instance lock.\n\nArgs:\n    app_name: Application name for the lock file\n    force_cleanup: If True, forcefully kill any previous instance to ensure only newest runs\n\nReturns a tuple of (lock_path, existing_pid). If lock_path is None and\nexisting_pid is not None, another process already holds the lock. If both\nvalues are None, an unexpected filesystem error occurred.",
      "parameters": [
        {
          "name": "app_name",
          "annotation": "str",
          "default": "_DEFAULT_APP_NAME",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "force_cleanup",
          "annotation": "bool",
          "default": "True",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Tuple[Optional[Path], Optional[int]]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 12,
      "calls": [
        "_lock_path",
        "lock_path.exists",
        "int",
        "strip",
        "lock_path.read_text",
        "_pid_is_running",
        "print",
        "os.kill",
        "time.sleep",
        "_pid_is_running",
        "print",
        "os.kill",
        "time.sleep",
        "print",
        "print",
        "print",
        "lock_path.unlink",
        "lock_path.write_text",
        "str",
        "os.getpid",
        "print"
      ],
      "raises": [],
      "line_number": 53
    },
    {
      "id": "src.pokertool.utils.single_instance.release_lock",
      "type": "function",
      "name": "release_lock",
      "module": "src.pokertool.utils.single_instance",
      "signature": "def release_lock(lock_path: Optional[Path]) -> None",
      "docstring": "Remove the lock file if it still exists.",
      "parameters": [
        {
          "name": "lock_path",
          "annotation": "Optional[Path]",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "None",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 4,
      "calls": [
        "lock_path.exists",
        "lock_path.unlink",
        "print"
      ],
      "raises": [],
      "line_number": 121
    },
    {
      "id": "src.pokertool.modules.autoconfirm",
      "type": "module",
      "path": "src/pokertool/modules/autoconfirm.py",
      "docstring": null,
      "version": "'20'",
      "author": null,
      "complexity": 0,
      "loc": 18,
      "dependencies": [
        "os",
        "pokertool",
        "builtins"
      ]
    },
    {
      "id": "src.pokertool.modules.ocr_engine",
      "type": "module",
      "path": "src/pokertool/modules/ocr_engine.py",
      "docstring": null,
      "version": "'1'",
      "author": null,
      "complexity": 55,
      "loc": 527,
      "dependencies": [
        "logging",
        "typing",
        "dataclasses",
        "re",
        "numpy"
      ]
    },
    {
      "id": "src.pokertool.modules.ocr_engine.OCRResult",
      "type": "class",
      "name": "OCRResult",
      "module": "src.pokertool.modules.ocr_engine",
      "docstring": "Result of OCR operation.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 62
    },
    {
      "id": "src.pokertool.modules.ocr_engine.PokerOCREngine",
      "type": "class",
      "name": "PokerOCREngine",
      "module": "src.pokertool.modules.ocr_engine",
      "docstring": "Advanced OCR engine optimized for poker table text recognition.\n\nHandles:\n- Pot amounts with currency symbols\n- Stack sizes\n- Player names\n- Time remaining\n- Button labels",
      "bases": [],
      "methods": [
        "__init__",
        "extract_pot_amount",
        "extract_stack_size",
        "extract_player_name",
        "extract_time_remaining",
        "_preprocess_for_numbers",
        "_preprocess_for_text",
        "_parse_currency_amount",
        "_parse_time_string",
        "_is_valid_player_name",
        "batch_extract_numbers",
        "get_ocr_info"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 53,
      "line_number": 70
    },
    {
      "id": "src.pokertool.modules.ocr_engine.get_ocr_engine",
      "type": "function",
      "name": "get_ocr_engine",
      "module": "src.pokertool.modules.ocr_engine",
      "signature": "def get_ocr_engine() -> PokerOCREngine",
      "docstring": "Get singleton OCR engine instance.",
      "parameters": [],
      "return_type": "PokerOCREngine",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "PokerOCREngine"
      ],
      "raises": [],
      "line_number": 493
    },
    {
      "id": "src.pokertool.modules.chrome_devtools_scraper",
      "type": "module",
      "path": "src/pokertool/modules/chrome_devtools_scraper.py",
      "docstring": "Chrome DevTools Protocol Scraper for Betfair Poker\n===================================================\n\nFast, reliable poker table data extraction using Chrome DevTools Protocol.\nThis provides direct DOM access without screenshot OCR, resulting in:\n- 10-50x faster data extraction\n- 99.9% accuracy (no OCR errors)\n- Real-time updates (< 10ms extraction time)\n- Access to all page data including hidden stats",
      "version": null,
      "author": null,
      "complexity": 79,
      "loc": 984,
      "dependencies": [
        "logging",
        "socket",
        "platform",
        "pathlib",
        "time",
        "shutil",
        "typing",
        "dataclasses",
        "subprocess",
        "json",
        "enum",
        "os",
        "asyncio"
      ]
    },
    {
      "id": "src.pokertool.modules.chrome_devtools_scraper.ChromeConnection",
      "type": "class",
      "name": "ChromeConnection",
      "module": "src.pokertool.modules.chrome_devtools_scraper",
      "docstring": "Connection details for Chrome DevTools Protocol.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 49
    },
    {
      "id": "src.pokertool.modules.chrome_devtools_scraper.BetfairTableData",
      "type": "class",
      "name": "BetfairTableData",
      "module": "src.pokertool.modules.chrome_devtools_scraper",
      "docstring": "Complete Betfair poker table data extracted via CDP.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 58
    },
    {
      "id": "src.pokertool.modules.chrome_devtools_scraper.ChromeDevToolsScraper",
      "type": "class",
      "name": "ChromeDevToolsScraper",
      "module": "src.pokertool.modules.chrome_devtools_scraper",
      "docstring": "Fast poker table scraper using Chrome DevTools Protocol.\n\nFeatures:\n- **AUTOMATIC** Chrome detection and launch\n- **AUTOMATIC** connection with retry logic\n- Connection health monitoring\n- Timeout protection\n- Graceful degradation on failure\n\nUsage:\n    scraper = ChromeDevToolsScraper(auto_launch=True)\n    if scraper.connect():\n        data = scraper.extract_table_data()",
      "bases": [],
      "methods": [
        "__init__",
        "_is_port_available",
        "_is_chrome_running_with_debug",
        "_find_chrome_executable",
        "_launch_chrome",
        "connect",
        "disconnect",
        "_check_connection_health",
        "_send_command",
        "_execute_js",
        "extract_table_data",
        "get_connection_stats",
        "is_connected"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 70,
      "line_number": 91
    },
    {
      "id": "src.pokertool.modules.chrome_devtools_scraper.create_auto_scraper",
      "type": "function",
      "name": "create_auto_scraper",
      "module": "src.pokertool.modules.chrome_devtools_scraper",
      "signature": "def create_auto_scraper(poker_url: str, auto_launch: bool) -> ChromeDevToolsScraper",
      "docstring": "Create a ChromeDevToolsScraper with automatic setup.\n\nThis is the easiest way to get started - just call this function\nand it will handle everything automatically:\n- Detects if Chrome is running\n- Launches Chrome if needed\n- Opens the poker site\n- Connects to the tab\n\nArgs:\n    poker_url: Poker site URL to open\n    auto_launch: Automatically launch Chrome if not running\n\nReturns:\n    ChromeDevToolsScraper instance ready to use\n\nExample:\n    scraper = create_auto_scraper()\n    if scraper.connect():\n        table_data = scraper.extract_table_data()\n        print(f\"Pot: ${table_data.pot_size}\")",
      "parameters": [
        {
          "name": "poker_url",
          "annotation": "str",
          "default": "'https://poker-com-ngm.bfcdl.com/poker'",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "auto_launch",
          "annotation": "bool",
          "default": "True",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "ChromeDevToolsScraper",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "ChromeDevToolsScraper"
      ],
      "raises": [],
      "line_number": 805
    },
    {
      "id": "src.pokertool.modules.chrome_devtools_scraper.launch_chrome_for_debugging",
      "type": "function",
      "name": "launch_chrome_for_debugging",
      "module": "src.pokertool.modules.chrome_devtools_scraper",
      "signature": "def launch_chrome_for_debugging(url: str, port: int) -> bool",
      "docstring": "Launch Chrome with remote debugging enabled.\n\nArgs:\n    url: URL to open (default: empty for no initial page)\n    port: Remote debugging port (default: 9222)\n\nReturns:\n    True if Chrome launched successfully",
      "parameters": [
        {
          "name": "url",
          "annotation": "str",
          "default": "''",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "port",
          "annotation": "int",
          "default": "9222",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "bool",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 8,
      "calls": [
        "lower",
        "platform.system",
        "logger.error",
        "chrome_paths.get",
        "os.path.exists",
        "logger.error",
        "subprocess.Popen",
        "logger.info",
        "logger.info",
        "logger.error"
      ],
      "raises": [],
      "line_number": 839
    },
    {
      "id": "src.pokertool.modules.note_taking_system",
      "type": "module",
      "path": "src/pokertool/modules/note_taking_system.py",
      "docstring": "Note Taking System Module\n\nThis module provides comprehensive player note management for poker analysis.\nSupports color coding, search functionality, auto-note generation, and templates.\n\nPublic API:\n    - NoteTakingSystem: Main note management class\n    - PlayerNote: Represents a single note\n    - NoteDatabase: Database operations for notes\n    - NoteSearch: Search and filter functionality\n    - NoteTemplate: Pre-defined note templates\n    - AutoNoteGenerator: Automatic note generation from hand history\n\nDependencies:\n    - logger (for logging)\n    - sqlite3, json, datetime (standard library)\n\nLast Reviewed: 2025-09-30",
      "version": null,
      "author": null,
      "complexity": 62,
      "loc": 645,
      "dependencies": [
        "sqlite3",
        "pathlib",
        "__future__",
        "typing",
        "dataclasses",
        "collections",
        "json",
        "enum",
        "datetime"
      ]
    },
    {
      "id": "src.pokertool.modules.note_taking_system.NoteColor",
      "type": "class",
      "name": "NoteColor",
      "module": "src.pokertool.modules.note_taking_system",
      "docstring": "Enumeration of note color categories.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 61
    },
    {
      "id": "src.pokertool.modules.note_taking_system.NoteCategory",
      "type": "class",
      "name": "NoteCategory",
      "module": "src.pokertool.modules.note_taking_system",
      "docstring": "Enumeration of note categories.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 72
    },
    {
      "id": "src.pokertool.modules.note_taking_system.PlayerNote",
      "type": "class",
      "name": "PlayerNote",
      "module": "src.pokertool.modules.note_taking_system",
      "docstring": "Represents a single player note.",
      "bases": [],
      "methods": [
        "to_dict",
        "from_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 4,
      "line_number": 85
    },
    {
      "id": "src.pokertool.modules.note_taking_system.NoteDatabase",
      "type": "class",
      "name": "NoteDatabase",
      "module": "src.pokertool.modules.note_taking_system",
      "docstring": "Database operations for player notes.",
      "bases": [],
      "methods": [
        "__init__",
        "_initialize_database",
        "add_note",
        "update_note",
        "delete_note",
        "get_note",
        "get_notes_by_player",
        "get_all_notes",
        "_row_to_note",
        "close"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 14,
      "line_number": 128
    },
    {
      "id": "src.pokertool.modules.note_taking_system.NoteSearch",
      "type": "class",
      "name": "NoteSearch",
      "module": "src.pokertool.modules.note_taking_system",
      "docstring": "Search and filter functionality for notes.",
      "bases": [],
      "methods": [
        "__init__",
        "search_by_text",
        "search_by_color",
        "search_by_category",
        "search_by_tags",
        "search_important",
        "advanced_search"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 14,
      "line_number": 265
    },
    {
      "id": "src.pokertool.modules.note_taking_system.NoteTemplate",
      "type": "class",
      "name": "NoteTemplate",
      "module": "src.pokertool.modules.note_taking_system",
      "docstring": "Pre-defined note templates.",
      "bases": [],
      "methods": [
        "get_template",
        "list_templates"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 3,
      "line_number": 346
    },
    {
      "id": "src.pokertool.modules.note_taking_system.AutoNoteGenerator",
      "type": "class",
      "name": "AutoNoteGenerator",
      "module": "src.pokertool.modules.note_taking_system",
      "docstring": "Automatic note generation from hand history and statistics.",
      "bases": [],
      "methods": [
        "__init__",
        "generate_from_stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 6,
      "line_number": 409
    },
    {
      "id": "src.pokertool.modules.note_taking_system.NoteTakingSystem",
      "type": "class",
      "name": "NoteTakingSystem",
      "module": "src.pokertool.modules.note_taking_system",
      "docstring": "Main note taking system.",
      "bases": [],
      "methods": [
        "__init__",
        "create_note",
        "create_from_template",
        "update_note",
        "delete_note",
        "get_player_notes",
        "get_player_summary",
        "generate_auto_notes",
        "export_notes",
        "import_notes",
        "close"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 21,
      "line_number": 465
    },
    {
      "id": "src.pokertool.modules.run_pokertool",
      "type": "module",
      "path": "src/pokertool/modules/run_pokertool.py",
      "docstring": "Simple launcher that bypasses syntax scanning.",
      "version": null,
      "author": null,
      "complexity": 6,
      "loc": 62,
      "dependencies": [
        "sys",
        "start",
        "pathlib",
        "subprocess",
        "os"
      ]
    },
    {
      "id": "src.pokertool.modules.run_pokertool.ensure_critical_dependencies",
      "type": "function",
      "name": "ensure_critical_dependencies",
      "module": "src.pokertool.modules.run_pokertool",
      "signature": "def ensure_critical_dependencies()",
      "docstring": "Ensure critical dependencies are installed before startup.",
      "parameters": [],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 6,
      "calls": [
        "__import__",
        "missing.append",
        "print",
        "print",
        "print",
        "print",
        "subprocess.check_call",
        "print",
        "print",
        "print",
        "print"
      ],
      "raises": [],
      "line_number": 24
    },
    {
      "id": "src.pokertool.modules.accuracy_validator",
      "type": "module",
      "path": "src/pokertool/modules/accuracy_validator.py",
      "docstring": "Accuracy Validation System\n===========================\n\nAdvanced validation and consensus mechanisms for poker screen scraping accuracy.\n\nFeatures:\n- Multi-frame card recognition consensus\n- Pot amount validation with game logic\n- Player stack tracking with delta detection\n- Bet amount spatial validation\n- Action button state machine validation\n- OCR confidence thresholding with re-extraction\n- Community card sequence validation\n- Table boundary detection and auto-calibration\n\nVersion: 62.0.0\nAuthor: PokerTool Development Team",
      "version": null,
      "author": null,
      "complexity": 139,
      "loc": 1712,
      "dependencies": [
        "logging",
        "time",
        "__future__",
        "hashlib",
        "typing",
        "dataclasses",
        "collections",
        "enum",
        "numpy"
      ]
    },
    {
      "id": "src.pokertool.modules.accuracy_validator.ValidationStatus",
      "type": "class",
      "name": "ValidationStatus",
      "module": "src.pokertool.modules.accuracy_validator",
      "docstring": "Validation status for extracted data.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 50
    },
    {
      "id": "src.pokertool.modules.accuracy_validator.CardRecognitionResult",
      "type": "class",
      "name": "CardRecognitionResult",
      "module": "src.pokertool.modules.accuracy_validator",
      "docstring": "Result from card recognition.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 59
    },
    {
      "id": "src.pokertool.modules.accuracy_validator.ConsensusResult",
      "type": "class",
      "name": "ConsensusResult",
      "module": "src.pokertool.modules.accuracy_validator",
      "docstring": "Result from multi-frame consensus.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 69
    },
    {
      "id": "src.pokertool.modules.accuracy_validator.ValidationResult",
      "type": "class",
      "name": "ValidationResult",
      "module": "src.pokertool.modules.accuracy_validator",
      "docstring": "Result from validation check.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 80
    },
    {
      "id": "src.pokertool.modules.accuracy_validator.StackDelta",
      "type": "class",
      "name": "StackDelta",
      "module": "src.pokertool.modules.accuracy_validator",
      "docstring": "Stack size change detection.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 90
    },
    {
      "id": "src.pokertool.modules.accuracy_validator.MultiFrameCardRecognizer",
      "type": "class",
      "name": "MultiFrameCardRecognizer",
      "module": "src.pokertool.modules.accuracy_validator",
      "docstring": "Multi-frame card recognition with consensus voting.\n\nImproves accuracy by:\n- Collecting results from multiple frames (3-5 frames)\n- Voting on most common result\n- Confidence-weighted averaging\n- Temporal consistency checking\n- Automatic outlier detection\n\nExpected improvement: +15-20% accuracy, 95%+ for stable cards",
      "bases": [],
      "methods": [
        "__init__",
        "add_recognition",
        "get_consensus",
        "_check_temporal_consistency",
        "get_all_consensus",
        "clear_position",
        "clear_all",
        "get_stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 23,
      "line_number": 105
    },
    {
      "id": "src.pokertool.modules.accuracy_validator.PotAmountValidator",
      "type": "class",
      "name": "PotAmountValidator",
      "module": "src.pokertool.modules.accuracy_validator",
      "docstring": "Validate pot amounts using game logic and betting history.\n\nImprovements:\n- Track betting actions and verify pot matches expected value\n- Detect impossible pot amounts (negative, illogical jumps)\n- Cross-reference with player bets\n- Historical pot progression validation\n- Automatic correction suggestions\n\nExpected improvement: 90%+ pot amount accuracy, catches 95%+ of errors",
      "bases": [],
      "methods": [
        "__init__",
        "validate_pot",
        "reset",
        "get_stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 16,
      "line_number": 325
    },
    {
      "id": "src.pokertool.modules.accuracy_validator.StackDeltaTracker",
      "type": "class",
      "name": "StackDeltaTracker",
      "module": "src.pokertool.modules.accuracy_validator",
      "docstring": "Track player stack changes with delta detection and validation.\n\nImprovements:\n- Detect stack changes and validate against betting actions\n- Track delta history for each player\n- Identify anomalous stack changes\n- Cross-reference with pot changes\n- Auto-correction for OCR errors\n\nExpected improvement: 85%+ stack accuracy, detects 90%+ of errors",
      "bases": [],
      "methods": [
        "__init__",
        "update_stack",
        "get_delta_history",
        "get_average_delta",
        "reset_seat",
        "get_stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 16,
      "line_number": 520
    },
    {
      "id": "src.pokertool.modules.accuracy_validator.BetAmountSpatialValidator",
      "type": "class",
      "name": "BetAmountSpatialValidator",
      "module": "src.pokertool.modules.accuracy_validator",
      "docstring": "Validate bet amounts using spatial relationship analysis.\n\nImprovements:\n- Verify bet is physically near player position\n- Check for overlapping bet regions (impossible)\n- Validate bet amount vs stack size (can't bet more than stack)\n- Detect OCR errors by spatial inconsistency\n- Auto-correction using spatial constraints\n\nExpected improvement: 80%+ bet accuracy, catches 85%+ of spatial errors",
      "bases": [],
      "methods": [
        "__init__",
        "set_player_position",
        "validate_bet",
        "_bboxes_overlap",
        "clear_bets",
        "get_stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 18,
      "line_number": 680
    },
    {
      "id": "src.pokertool.modules.accuracy_validator.ActionButtonState",
      "type": "class",
      "name": "ActionButtonState",
      "module": "src.pokertool.modules.accuracy_validator",
      "docstring": "Action button states.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 858
    },
    {
      "id": "src.pokertool.modules.accuracy_validator.ButtonTransition",
      "type": "class",
      "name": "ButtonTransition",
      "module": "src.pokertool.modules.accuracy_validator",
      "docstring": "Action button state transition.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 871
    },
    {
      "id": "src.pokertool.modules.accuracy_validator.ActionButtonStateMachine",
      "type": "class",
      "name": "ActionButtonStateMachine",
      "module": "src.pokertool.modules.accuracy_validator",
      "docstring": "Validate action buttons using state machine logic.\n\nImprovements:\n- Track valid button state transitions\n- Detect impossible button combinations (e.g., check + call)\n- Validate button availability based on game state\n- Identify OCR errors by invalid states\n- Auto-correction using game rules\n\nExpected improvement: 90%+ button detection accuracy, catches 95%+ of impossible states",
      "bases": [],
      "methods": [
        "__init__",
        "validate_buttons",
        "get_stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 14,
      "line_number": 880
    },
    {
      "id": "src.pokertool.modules.accuracy_validator.OCRReExtractor",
      "type": "class",
      "name": "OCRReExtractor",
      "module": "src.pokertool.modules.accuracy_validator",
      "docstring": "OCR confidence thresholding with automatic re-extraction.\n\nImprovements:\n- Threshold OCR results by confidence level\n- Automatic re-extraction with improved preprocessing\n- Multiple extraction strategies (tesseract configs)\n- Adaptive thresholding based on field type\n- Quality-based retry logic\n\nExpected improvement: +10-15% OCR accuracy, 80%+ for low-confidence retries",
      "bases": [],
      "methods": [
        "__init__",
        "extract_with_confidence",
        "_extract_ocr",
        "get_stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 15,
      "line_number": 1036
    },
    {
      "id": "src.pokertool.modules.accuracy_validator.CommunityCardSequenceValidator",
      "type": "class",
      "name": "CommunityCardSequenceValidator",
      "module": "src.pokertool.modules.accuracy_validator",
      "docstring": "Validate community card sequences follow poker rules.\n\nImprovements:\n- Verify card sequence progression (0 -> 3 -> 4 -> 5)\n- Detect impossible transitions (e.g., 5 cards -> 3 cards)\n- Check for card duplication across board\n- Validate street progression\n- Auto-correction for sequence errors\n\nExpected improvement: 95%+ sequence validity, catches 99%+ of impossible sequences",
      "bases": [],
      "methods": [
        "__init__",
        "validate_sequence",
        "reset",
        "get_stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 13,
      "line_number": 1223
    },
    {
      "id": "src.pokertool.modules.accuracy_validator.TableBoundaryDetector",
      "type": "class",
      "name": "TableBoundaryDetector",
      "module": "src.pokertool.modules.accuracy_validator",
      "docstring": "Detect table boundaries and auto-calibrate extraction regions.\n\nImprovements:\n- Automatically detect poker table boundaries\n- Calibrate all extraction regions relative to table\n- Detect table movement/resizing\n- Auto-adjust regions when table moves\n- Continuous boundary tracking\n\nExpected improvement: 90%+ region accuracy, auto-adapts to table changes",
      "bases": [],
      "methods": [
        "__init__",
        "detect_table_boundary",
        "calibrate_region",
        "get_absolute_region",
        "_calculate_movement",
        "get_stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 19,
      "line_number": 1375
    },
    {
      "id": "src.pokertool.modules.accuracy_validator.AccuracyValidationSystem",
      "type": "class",
      "name": "AccuracyValidationSystem",
      "module": "src.pokertool.modules.accuracy_validator",
      "docstring": "Integrated system combining all accuracy validation components.\n\nProvides unified API for all validation features.",
      "bases": [],
      "methods": [
        "__init__",
        "get_all_stats",
        "reset_all"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 3,
      "line_number": 1592
    },
    {
      "id": "src.pokertool.modules.accuracy_validator.get_accuracy_validation_system",
      "type": "function",
      "name": "get_accuracy_validation_system",
      "module": "src.pokertool.modules.accuracy_validator",
      "signature": "def get_accuracy_validation_system() -> AccuracyValidationSystem",
      "docstring": "Get global accuracy validation system instance (singleton).",
      "parameters": [],
      "return_type": "AccuracyValidationSystem",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "AccuracyValidationSystem"
      ],
      "raises": [],
      "line_number": 1642
    },
    {
      "id": "src.pokertool.modules.logger",
      "type": "module",
      "path": "src/pokertool/modules/logger.py",
      "docstring": null,
      "version": null,
      "author": null,
      "complexity": 59,
      "loc": 300,
      "dependencies": [
        "sys",
        "traceback",
        "pathlib",
        "json",
        "datetime",
        "os",
        "inspect",
        "threading"
      ]
    },
    {
      "id": "src.pokertool.modules.logger.MasterLogger",
      "type": "class",
      "name": "MasterLogger",
      "module": "src.pokertool.modules.logger",
      "docstring": "Simple but comprehensive logger for debugging - pure Python, no dependencies.",
      "bases": [],
      "methods": [
        "__new__",
        "__init__",
        "_initialize_log_file",
        "_get_caller_info",
        "log",
        "error",
        "critical",
        "warning",
        "info",
        "debug"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 55,
      "line_number": 22
    },
    {
      "id": "src.pokertool.modules.logger.log_exceptions",
      "type": "function",
      "name": "log_exceptions",
      "module": "src.pokertool.modules.logger",
      "signature": "def log_exceptions(func)",
      "docstring": "Decorator to automatically log exceptions from any function.",
      "parameters": [
        {
          "name": "func",
          "annotation": null,
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "func",
        "logger.error",
        "repr",
        "repr"
      ],
      "raises": [],
      "line_number": 260
    },
    {
      "id": "src.pokertool.modules.logger.setup_global_exception_handler",
      "type": "function",
      "name": "setup_global_exception_handler",
      "module": "src.pokertool.modules.logger",
      "signature": "def setup_global_exception_handler()",
      "docstring": "Set up a global handler for uncaught exceptions.",
      "parameters": [],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "issubclass",
        "sys.__excepthook__",
        "logger.critical",
        "str",
        "traceback.format_tb",
        "sys.__excepthook__"
      ],
      "raises": [],
      "line_number": 281
    },
    {
      "id": "src.pokertool.modules.scraper_optimization_suite",
      "type": "module",
      "path": "src/pokertool/modules/scraper_optimization_suite.py",
      "docstring": "Comprehensive Screen Scraper Optimization Suite\n================================================\n\nAll-in-one module implementing 35 high-impact improvements for speed, accuracy, and reliability.\n\nVersion: 1.0.0 (v49.0.0)\nDate: 2025-10-14\n\nImprovements Implemented:\n-------------------------\n\n\ud83d\ude80 SPEED (12 improvements):\n- SCRAPE-015: ROI Tracking System (3-4x faster)\n- SCRAPE-016: Frame Differencing Engine (5-10x faster during idle)\n- SCRAPE-017: Smart OCR Result Caching (2-3x faster for stable elements)\n- SCRAPE-018: Parallel Multi-Region Extraction (2-3x faster extraction)\n- SCRAPE-019: Memory-Mapped Screen Capture (40-60% faster capture)\n- SCRAPE-020: Compiled Preprocessing Kernels (2-4x faster preprocessing)\n- SCRAPE-021: Batch Region Processing (1.5-2x faster with GPU)\n- SCRAPE-022: Adaptive Sampling Rate (50% reduced CPU)\n- SCRAPE-023: Incremental Table Updates (2-3x faster partial updates)\n- SCRAPE-024: Hardware Decode Acceleration (30-50% faster capture)\n- SCRAPE-025: OCR Engine Prioritization (40-60% faster OCR)\n- SCRAPE-026: Lazy Extraction Strategy (30-50% faster when partial needed)\n\n\ud83c\udfaf ACCURACY (13 improvements):\n- SCRAPE-027: Multi-Frame Temporal Consensus (90%+ numeric accuracy)\n- SCRAPE-028: Context-Aware Pot Validation (95%+ pot accuracy)\n- SCRAPE-029: Card Recognition ML Model (99%+ card accuracy)\n- SCRAPE-030: Spatial Relationship Validator (80%+ false extraction elimination)\n- SCRAPE-031: Geometric Calibration System (10-15% accuracy improvement)\n- SCRAPE-032: Adaptive Regional Thresholding (15-20% OCR improvement)\n- SCRAPE-033: Confidence-Based Re-extraction (10-15% fewer failures)\n- SCRAPE-034: Player Action State Machine (70%+ action error elimination)\n- SCRAPE-035: Card Suit Color Validation (5-10% fewer suit errors)\n- SCRAPE-036: Blinds Consistency Checker (95%+ blind accuracy)\n- SCRAPE-037: Stack Change Tracking (60%+ stack error elimination)\n- SCRAPE-038: OCR Post-Processing Rules (10-15% OCR improvement)\n- SCRAPE-039: Multi-Strategy Fusion (98%+ accuracy through redundancy)\n\n\ud83d\udee1\ufe0f RELIABILITY (10 improvements):\n- SCRAPE-040: Automatic Recovery Manager (99.9% uptime)\n- SCRAPE-041: Redundant Extraction Paths (99%+ extraction success)\n- SCRAPE-042: Health Monitoring Dashboard (proactive issue detection)\n- SCRAPE-043: Graceful Degradation System (always return usable data)\n- SCRAPE-044: State Persistence Layer (zero state loss)\n- SCRAPE-045: Error Pattern Detector (faster root cause identification)\n- SCRAPE-046: Watchdog Timer System (no hung operations)\n- SCRAPE-047: Resource Leak Detection (zero resource leaks)\n- SCRAPE-048: Extraction Quality Metrics (data-driven optimization)\n- SCRAPE-049: Automatic Recalibration (self-healing system)\n\nTotal Expected Improvements:\n- Speed: 2-5x faster overall (10-30ms vs 40-80ms)\n- Accuracy: 95%+ reliable extraction (vs 85-90%)\n- Reliability: 99.9% uptime with automatic recovery",
      "version": null,
      "author": null,
      "complexity": 144,
      "loc": 1274,
      "dependencies": [
        "logging",
        "functools",
        "numpy",
        "pathlib",
        "hashlib",
        "time",
        "__future__",
        "typing",
        "dataclasses",
        "collections",
        "json",
        "concurrent",
        "enum",
        "threading"
      ]
    },
    {
      "id": "src.pokertool.modules.scraper_optimization_suite.ROI",
      "type": "class",
      "name": "ROI",
      "module": "src.pokertool.modules.scraper_optimization_suite",
      "docstring": "Region of Interest definition.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 109
    },
    {
      "id": "src.pokertool.modules.scraper_optimization_suite.ROITracker",
      "type": "class",
      "name": "ROITracker",
      "module": "src.pokertool.modules.scraper_optimization_suite",
      "docstring": "Track which screen regions change between frames.\n\nOnly processes regions that have changed, achieving 3-4x speedup\nwhen table is stable.",
      "bases": [],
      "methods": [
        "__init__",
        "_define_standard_rois",
        "scale_rois",
        "compute_region_hash",
        "detect_changed_regions",
        "get_roi_rect",
        "get_skip_rate"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 18,
      "line_number": 121
    },
    {
      "id": "src.pokertool.modules.scraper_optimization_suite.FrameDiffEngine",
      "type": "class",
      "name": "FrameDiffEngine",
      "module": "src.pokertool.modules.scraper_optimization_suite",
      "docstring": "Skip entire frame processing if screen unchanged (<5% difference).\n\nAchieves 5-10x speedup during idle periods.",
      "bases": [],
      "methods": [
        "__init__",
        "should_process_frame",
        "_compute_similarity",
        "get_skip_rate"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 10,
      "line_number": 247
    },
    {
      "id": "src.pokertool.modules.scraper_optimization_suite.OCRCache",
      "type": "class",
      "name": "OCRCache",
      "module": "src.pokertool.modules.scraper_optimization_suite",
      "docstring": "Cache OCR results with intelligent invalidation.\n\nAchieves 2-3x speedup for stable elements (player names, blinds).",
      "bases": [],
      "methods": [
        "__init__",
        "_make_key",
        "get",
        "set",
        "invalidate_region",
        "get_hit_rate",
        "clear"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 15,
      "line_number": 327
    },
    {
      "id": "src.pokertool.modules.scraper_optimization_suite.ParallelExtractor",
      "type": "class",
      "name": "ParallelExtractor",
      "module": "src.pokertool.modules.scraper_optimization_suite",
      "docstring": "Extract pot, cards, and all seat information concurrently.\n\nAchieves 2-3x speedup through parallelization.",
      "bases": [],
      "methods": [
        "__init__",
        "extract_parallel",
        "shutdown"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 7,
      "line_number": 419
    },
    {
      "id": "src.pokertool.modules.scraper_optimization_suite.FastScreenCapture",
      "type": "class",
      "name": "FastScreenCapture",
      "module": "src.pokertool.modules.scraper_optimization_suite",
      "docstring": "Memory-mapped and hardware-accelerated screen capture.\n\nAchieves 40-60% faster capture.",
      "bases": [],
      "methods": [
        "__init__",
        "_init_platform_capture",
        "capture"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 15,
      "line_number": 479
    },
    {
      "id": "src.pokertool.modules.scraper_optimization_suite.TemporalConsensus",
      "type": "class",
      "name": "TemporalConsensus",
      "module": "src.pokertool.modules.scraper_optimization_suite",
      "docstring": "Smooth pot, stack, and bet values over 3-5 frames.\n\nAchieves 90%+ accuracy for numeric fields.",
      "bases": [],
      "methods": [
        "__init__",
        "add_value",
        "get_consensus",
        "clear"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 10,
      "line_number": 567
    },
    {
      "id": "src.pokertool.modules.scraper_optimization_suite.PotValidator",
      "type": "class",
      "name": "PotValidator",
      "module": "src.pokertool.modules.scraper_optimization_suite",
      "docstring": "Validate pot size using game state continuity.\n\nAchieves 95%+ pot accuracy with auto-correction.",
      "bases": [],
      "methods": [
        "__init__",
        "validate_pot"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 636
    },
    {
      "id": "src.pokertool.modules.scraper_optimization_suite.CardRecognitionModel",
      "type": "class",
      "name": "CardRecognitionModel",
      "module": "src.pokertool.modules.scraper_optimization_suite",
      "docstring": "CNN-based card detection for 99%+ accuracy.\n\nMuch faster and more accurate than OCR.",
      "bases": [],
      "methods": [
        "__init__",
        "_try_load_model",
        "recognize_card",
        "recognize_cards"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 7,
      "line_number": 711
    },
    {
      "id": "src.pokertool.modules.scraper_optimization_suite.SpatialValidator",
      "type": "class",
      "name": "SpatialValidator",
      "module": "src.pokertool.modules.scraper_optimization_suite",
      "docstring": "Validate geometric consistency of extracted elements.\n\nEliminates 80%+ of false extractions.",
      "bases": [],
      "methods": [
        "__init__",
        "validate_position",
        "get_violation_rate"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 7,
      "line_number": 778
    },
    {
      "id": "src.pokertool.modules.scraper_optimization_suite.RecoveryManager",
      "type": "class",
      "name": "RecoveryManager",
      "module": "src.pokertool.modules.scraper_optimization_suite",
      "docstring": "Detect extraction failures and automatically recover.\n\nAchieves 99.9% uptime.",
      "bases": [],
      "methods": [
        "__init__",
        "record_result",
        "get_success_rate",
        "should_trigger_recovery",
        "trigger_recovery",
        "_recovery_recalibrate",
        "_recovery_restart_ocr",
        "_recovery_fallback_mode"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 14,
      "line_number": 849
    },
    {
      "id": "src.pokertool.modules.scraper_optimization_suite.RedundantExtractor",
      "type": "class",
      "name": "RedundantExtractor",
      "module": "src.pokertool.modules.scraper_optimization_suite",
      "docstring": "CDP primary, OCR backup, Vision tertiary fallback.\n\nAchieves 99%+ extraction success rate.",
      "bases": [],
      "methods": [
        "__init__",
        "extract_with_fallback",
        "get_method_stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 14,
      "line_number": 952
    },
    {
      "id": "src.pokertool.modules.scraper_optimization_suite.HealthMetrics",
      "type": "class",
      "name": "HealthMetrics",
      "module": "src.pokertool.modules.scraper_optimization_suite",
      "docstring": "Health metrics for extraction fields.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 1046
    },
    {
      "id": "src.pokertool.modules.scraper_optimization_suite.HealthMonitor",
      "type": "class",
      "name": "HealthMonitor",
      "module": "src.pokertool.modules.scraper_optimization_suite",
      "docstring": "Track extraction success rates per field.\n\nEnables proactive issue detection.",
      "bases": [],
      "methods": [
        "__init__",
        "record_extraction",
        "_check_alerts",
        "get_field_health",
        "get_all_metrics",
        "get_alerts",
        "clear_alerts"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 13,
      "line_number": 1057
    },
    {
      "id": "src.pokertool.modules.scraper_optimization_suite.ScraperOptimizationSuite",
      "type": "class",
      "name": "ScraperOptimizationSuite",
      "module": "src.pokertool.modules.scraper_optimization_suite",
      "docstring": "Main class integrating all 35 optimizations.\n\nProvides unified interface for speed, accuracy, and reliability improvements.",
      "bases": [],
      "methods": [
        "__init__",
        "get_summary",
        "shutdown"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 3,
      "line_number": 1143
    },
    {
      "id": "src.pokertool.modules.scraper_optimization_suite.get_optimization_suite",
      "type": "function",
      "name": "get_optimization_suite",
      "module": "src.pokertool.modules.scraper_optimization_suite",
      "signature": "def get_optimization_suite() -> ScraperOptimizationSuite",
      "docstring": "Get global optimization suite instance (singleton).",
      "parameters": [],
      "return_type": "ScraperOptimizationSuite",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 4,
      "calls": [
        "ScraperOptimizationSuite"
      ],
      "raises": [],
      "line_number": 1211
    },
    {
      "id": "src.pokertool.modules.scraper_optimization_suite.demo",
      "type": "function",
      "name": "demo",
      "module": "src.pokertool.modules.scraper_optimization_suite",
      "signature": "def demo()",
      "docstring": "Demo the optimization suite.",
      "parameters": [],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "print",
        "print",
        "get_optimization_suite",
        "print",
        "range",
        "np.random.randint",
        "suite.frame_diff.should_process_frame",
        "print",
        "print",
        "print",
        "suite.get_summary",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "suite.shutdown"
      ],
      "raises": [],
      "line_number": 1227
    },
    {
      "id": "src.pokertool.modules.scraper_learning_system",
      "type": "module",
      "path": "src/pokertool/modules/scraper_learning_system.py",
      "docstring": "Adaptive Learning System for Poker Screen Scraper\n=================================================\n\nMachine learning and adaptive optimization for OCR and detection accuracy.\n\nFeatures:\n- Environment profiling (resolution, brightness, monitor calibration)\n- OCR strategy performance tracking and auto-prioritization\n- Adaptive parameter tuning based on success metrics\n- CDP-based ground truth learning\n- Feedback loop integration with validation system\n- Persistent storage of learned parameters\n\nAuthor: Claude Code",
      "version": null,
      "author": null,
      "complexity": 117,
      "loc": 1016,
      "dependencies": [
        "logging",
        "pathlib",
        "hashlib",
        "time",
        "typing",
        "datetime",
        "dataclasses",
        "collections",
        "json",
        "enum",
        "numpy"
      ]
    },
    {
      "id": "src.pokertool.modules.scraper_learning_system.ExtractionType",
      "type": "class",
      "name": "ExtractionType",
      "module": "src.pokertool.modules.scraper_learning_system",
      "docstring": "Types of data extraction.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 39
    },
    {
      "id": "src.pokertool.modules.scraper_learning_system.EnvironmentSignature",
      "type": "class",
      "name": "EnvironmentSignature",
      "module": "src.pokertool.modules.scraper_learning_system",
      "docstring": "Unique signature for a scraping environment.",
      "bases": [],
      "methods": [
        "to_key",
        "from_image"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 3,
      "line_number": 51
    },
    {
      "id": "src.pokertool.modules.scraper_learning_system.OCRStrategyResult",
      "type": "class",
      "name": "OCRStrategyResult",
      "module": "src.pokertool.modules.scraper_learning_system",
      "docstring": "Result from a single OCR strategy attempt.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 88
    },
    {
      "id": "src.pokertool.modules.scraper_learning_system.OCRStrategyStats",
      "type": "class",
      "name": "OCRStrategyStats",
      "module": "src.pokertool.modules.scraper_learning_system",
      "docstring": "Performance statistics for an OCR strategy.",
      "bases": [],
      "methods": [
        "update_success",
        "update_failure"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 98
    },
    {
      "id": "src.pokertool.modules.scraper_learning_system.EnvironmentProfile",
      "type": "class",
      "name": "EnvironmentProfile",
      "module": "src.pokertool.modules.scraper_learning_system",
      "docstring": "Learned optimal parameters for a specific environment.",
      "bases": [],
      "methods": [
        "get_success_rate",
        "update_metrics"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 3,
      "line_number": 129
    },
    {
      "id": "src.pokertool.modules.scraper_learning_system.ExtractionFeedback",
      "type": "class",
      "name": "ExtractionFeedback",
      "module": "src.pokertool.modules.scraper_learning_system",
      "docstring": "User feedback on an extraction result.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 169
    },
    {
      "id": "src.pokertool.modules.scraper_learning_system.CDPGroundTruth",
      "type": "class",
      "name": "CDPGroundTruth",
      "module": "src.pokertool.modules.scraper_learning_system",
      "docstring": "Ground truth data from Chrome DevTools Protocol.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 180
    },
    {
      "id": "src.pokertool.modules.scraper_learning_system.ScraperLearningSystem",
      "type": "class",
      "name": "ScraperLearningSystem",
      "module": "src.pokertool.modules.scraper_learning_system",
      "docstring": "Adaptive learning system for poker screen scraper.\n\nLearns from:\n1. Multiple extraction attempts (track which strategies work best)\n2. Environment variations (screen resolution, brightness, color profiles)\n3. CDP ground truth data (when available)\n4. User feedback/corrections (validation loop)\n5. Historical performance data",
      "bases": [],
      "methods": [
        "__init__",
        "get_environment_profile",
        "update_environment_profile",
        "record_ocr_attempt",
        "record_ocr_success",
        "record_ocr_failure",
        "get_best_ocr_strategies",
        "get_adaptive_parameters",
        "update_adaptive_parameters",
        "record_detection_result",
        "record_cdp_ground_truth",
        "compare_ocr_vs_cdp",
        "get_cdp_learning_stats",
        "record_user_feedback",
        "get_feedback_stats",
        "validate_extraction_with_patterns",
        "get_learning_report",
        "print_learning_report",
        "_save_to_disk",
        "_load_from_disk",
        "save",
        "reset_learning_data"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 108,
      "line_number": 195
    },
    {
      "id": "src.pokertool.modules.scraper_learning_system.create_learning_system",
      "type": "function",
      "name": "create_learning_system",
      "module": "src.pokertool.modules.scraper_learning_system",
      "signature": "def create_learning_system(storage_dir: Optional[Path]) -> ScraperLearningSystem",
      "docstring": "Create a new learning system instance.\n\nArgs:\n    storage_dir: Optional custom storage directory\n\nReturns:\n    Configured ScraperLearningSystem",
      "parameters": [
        {
          "name": "storage_dir",
          "annotation": "Optional[Path]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "ScraperLearningSystem",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "ScraperLearningSystem"
      ],
      "raises": [],
      "line_number": 968
    },
    {
      "id": "src.pokertool.modules.betfair_accuracy_improvements",
      "type": "module",
      "path": "src/pokertool/modules/betfair_accuracy_improvements.py",
      "docstring": "Betfair Scraping Accuracy Improvements\n=======================================\n\nThis module implements critical accuracy improvements for Betfair poker table scraping\nbased on analysis of BF_TEST.jpg and the specific challenges of Betfair's UI.\n\nImplements Phase 1 (Critical) tasks from docs/TODO.md:\n- BF-001: Robust OCR for mixed-case player names\n- BF-004: Robust \u00a3 symbol detection\n- BF-006: Distinguish stack sizes from pot amounts\n- BF-011: Enhanced card suit detection\n- BF-013: Dealer button detection\n- BF-025: Betfair 6-max seat position mapping\n\nModule: pokertool.modules.betfair_accuracy_improvements",
      "version": null,
      "author": null,
      "complexity": 120,
      "loc": 1131,
      "dependencies": [
        "logging",
        "pytesseract",
        "typing",
        "cv2",
        "dataclasses",
        "re",
        "enum",
        "numpy"
      ]
    },
    {
      "id": "src.pokertool.modules.betfair_accuracy_improvements.SeatPosition",
      "type": "class",
      "name": "SeatPosition",
      "module": "src.pokertool.modules.betfair_accuracy_improvements",
      "docstring": "6-max table seat positions for Betfair",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 38
    },
    {
      "id": "src.pokertool.modules.betfair_accuracy_improvements.BetfairROI",
      "type": "class",
      "name": "BetfairROI",
      "module": "src.pokertool.modules.betfair_accuracy_improvements",
      "docstring": "Region of Interest coordinates for Betfair table elements",
      "bases": [],
      "methods": [
        "extract",
        "contains_point"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 3,
      "line_number": 49
    },
    {
      "id": "src.pokertool.modules.betfair_accuracy_improvements.SeatMapping",
      "type": "class",
      "name": "SeatMapping",
      "module": "src.pokertool.modules.betfair_accuracy_improvements",
      "docstring": "Complete seat position mapping for a Betfair 6-max table",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 67
    },
    {
      "id": "src.pokertool.modules.betfair_accuracy_improvements.PlayerNameExtractor",
      "type": "class",
      "name": "PlayerNameExtractor",
      "module": "src.pokertool.modules.betfair_accuracy_improvements",
      "docstring": "Enhanced player name extraction for Betfair.\n\nHandles:\n- Mixed-case names: \"FourBoysUnited\", \"ThelongbluevEin\", \"GmanLDN\"\n- Numbers in names: \"FourBoysUnited\" contains \"4\"\n- Variable name lengths (3-20 characters)",
      "bases": [],
      "methods": [
        "__init__",
        "extract_player_name",
        "_enhance_for_mixed_case_ocr",
        "_validate_player_name",
        "_fuzzy_match_name",
        "_levenshtein_distance",
        "learn_name"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 35,
      "line_number": 82
    },
    {
      "id": "src.pokertool.modules.betfair_accuracy_improvements.CurrencyExtractor",
      "type": "class",
      "name": "CurrencyExtractor",
      "module": "src.pokertool.modules.betfair_accuracy_improvements",
      "docstring": "Enhanced currency and amount extraction for Betfair (\u00a3 symbol).\n\nHandles:\n- Unicode pound symbol: \u00a3\n- Decimal precision: \u00a32.22, \u00a30.08\n- Zero amounts: \u00a30.00, \u00a30",
      "bases": [],
      "methods": [
        "extract_currency_amount",
        "_enhance_for_currency",
        "_parse_currency_text"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 12,
      "line_number": 300
    },
    {
      "id": "src.pokertool.modules.betfair_accuracy_improvements.StackPotDistinguisher",
      "type": "class",
      "name": "StackPotDistinguisher",
      "module": "src.pokertool.modules.betfair_accuracy_improvements",
      "docstring": "Distinguish between stack sizes and pot amounts based on position.\n\nBetfair layout:\n- Stack sizes: Below player names\n- Pot amounts: Center of table with \"Pot:\" label or pot chip icon",
      "bases": [],
      "methods": [
        "__init__",
        "classify_currency_location",
        "extract_pot_with_validation",
        "_extract_pot_label",
        "_extract_pot_chips"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 18,
      "line_number": 410
    },
    {
      "id": "src.pokertool.modules.betfair_accuracy_improvements.BetfairCardDetector",
      "type": "class",
      "name": "BetfairCardDetector",
      "module": "src.pokertool.modules.betfair_accuracy_improvements",
      "docstring": "Enhanced card and suit detection optimized for Betfair.\n\nHandles:\n- Red suits: \u2666 (diamonds), \u2665 (hearts)\n- Black suits: \u2660 (spades), \u2663 (clubs)\n- Card values: A, K, Q, J, 10, 9, 8, 7, 6, 5, 4, 3, 2\n- White card borders\n- Large clear card images",
      "bases": [],
      "methods": [
        "__init__",
        "detect_community_cards",
        "_detect_card_regions",
        "_recognize_single_card",
        "_detect_suit_by_color",
        "_distinguish_red_suits",
        "_distinguish_black_suits",
        "_extract_suit_symbol_region",
        "_detect_card_value"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 30,
      "line_number": 537
    },
    {
      "id": "src.pokertool.modules.betfair_accuracy_improvements.DealerButtonDetector",
      "type": "class",
      "name": "DealerButtonDetector",
      "module": "src.pokertool.modules.betfair_accuracy_improvements",
      "docstring": "Detect dealer button (yellow \"D\" indicator) on Betfair tables.\n\nApproach:\n- Color detection: Yellow circular button\n- Shape matching: Circular shape\n- OCR validation: \"D\" text",
      "bases": [],
      "methods": [
        "__init__",
        "detect_dealer_button"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 12,
      "line_number": 754
    },
    {
      "id": "src.pokertool.modules.betfair_accuracy_improvements.BetfairSeatMapper",
      "type": "class",
      "name": "BetfairSeatMapper",
      "module": "src.pokertool.modules.betfair_accuracy_improvements",
      "docstring": "Create accurate seat position mappings for Betfair 6-max tables.\n\nDefines ROIs for each of 6 seats:\n- Top-left, top-center, top-right\n- Bottom-left, bottom-center (hero), bottom-right",
      "bases": [],
      "methods": [
        "__init__",
        "create_seat_mappings"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 3,
      "line_number": 830
    },
    {
      "id": "src.pokertool.modules.betfair_accuracy_improvements.BetfairAccuracyEngine",
      "type": "class",
      "name": "BetfairAccuracyEngine",
      "module": "src.pokertool.modules.betfair_accuracy_improvements",
      "docstring": "Main integration class for all Betfair accuracy improvements.\n\nUsage:\n    engine = BetfairAccuracyEngine(table_width=1200, table_height=800)\n    result = engine.extract_full_table_state(screenshot)",
      "bases": [],
      "methods": [
        "__init__",
        "extract_full_table_state",
        "_extract_player_data",
        "_calculate_accuracy_scores"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 6,
      "line_number": 929
    },
    {
      "id": "src.pokertool.modules.betfair_accuracy_improvements.create_betfair_engine",
      "type": "function",
      "name": "create_betfair_engine",
      "module": "src.pokertool.modules.betfair_accuracy_improvements",
      "signature": "def create_betfair_engine(table_width: int, table_height: int) -> BetfairAccuracyEngine",
      "docstring": "Create a configured BetfairAccuracyEngine instance.\n\nArgs:\n    table_width: Width of Betfair table window (default 1200)\n    table_height: Height of Betfair table window (default 800)\n\nReturns:\n    Configured BetfairAccuracyEngine instance",
      "parameters": [
        {
          "name": "table_width",
          "annotation": "int",
          "default": "1200",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "table_height",
          "annotation": "int",
          "default": "800",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "BetfairAccuracyEngine",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "BetfairAccuracyEngine"
      ],
      "raises": [],
      "line_number": 1076
    },
    {
      "id": "src.pokertool.modules.browser_tab_capture",
      "type": "module",
      "path": "src/pokertool/modules/browser_tab_capture.py",
      "docstring": "Utilities for capturing screenshots from a live Chrome tab via DevTools.\n\nThis module provides a light-weight bridge that connects to a Chrome\ninstance running with the remote debugging flag enabled\n(`--remote-debugging-port=9222` by default). It retrieves a screenshot of the\nactive tab (or a tab matching a user supplied filter) and exposes it as a\nNumPy array in BGR format so it can be consumed by OpenCV based pipelines.\n\nThe capture logic is intentionally conservative: it keeps a persistent\nWebSocket connection while the scraper is active and automatically retries\nif the connection drops. When Chrome is not available the module raises\n`ChromeTabCaptureError`, allowing callers to gracefully fall back to other\ncapture strategies.",
      "version": null,
      "author": null,
      "complexity": 59,
      "loc": 342,
      "dependencies": [
        "logging",
        "base64",
        "__future__",
        "typing",
        "dataclasses",
        "json",
        "numpy",
        "threading"
      ]
    },
    {
      "id": "src.pokertool.modules.browser_tab_capture.ChromeTabCaptureError",
      "type": "class",
      "name": "ChromeTabCaptureError",
      "module": "src.pokertool.modules.browser_tab_capture",
      "docstring": "Raised when Chrome tab capture cannot be initialised or executed.",
      "bases": [
        "RuntimeError"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 65
    },
    {
      "id": "src.pokertool.modules.browser_tab_capture.ChromeTabCaptureConfig",
      "type": "class",
      "name": "ChromeTabCaptureConfig",
      "module": "src.pokertool.modules.browser_tab_capture",
      "docstring": "Configuration for the Chrome tab capture bridge.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 70
    },
    {
      "id": "src.pokertool.modules.browser_tab_capture.ChromeTabCapture",
      "type": "class",
      "name": "ChromeTabCapture",
      "module": "src.pokertool.modules.browser_tab_capture",
      "docstring": "Capture screenshots from a Chrome tab using the DevTools protocol.",
      "bases": [],
      "methods": [
        "__init__",
        "capture",
        "close",
        "_ensure_connection",
        "_discover_websocket_url",
        "_next_message_id",
        "_send"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 41,
      "line_number": 81
    },
    {
      "id": "src.pokertool.modules.browser_tab_capture.ChromeWindowCaptureConfig",
      "type": "class",
      "name": "ChromeWindowCaptureConfig",
      "module": "src.pokertool.modules.browser_tab_capture",
      "docstring": "Configuration for native Chrome window capture.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 249
    },
    {
      "id": "src.pokertool.modules.browser_tab_capture.ChromeWindowCapture",
      "type": "class",
      "name": "ChromeWindowCapture",
      "module": "src.pokertool.modules.browser_tab_capture",
      "docstring": "Capture Chrome window content without DevTools.",
      "bases": [],
      "methods": [
        "__init__",
        "capture",
        "_find_window"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 18,
      "line_number": 258
    },
    {
      "id": "src.pokertool.modules.power_features",
      "type": "module",
      "path": "src/pokertool/modules/power_features.py",
      "docstring": "Power Features System\n======================\n\nAdvanced power user features for poker tool.\n\nFeatures:\n- POW-001: Multi-Table Support with Table Switcher\n- POW-002: Hand Replay with Analysis\n- POW-003: Range vs Range Equity Calculator\n- POW-004: Auto-Note Taking on Opponents\n- POW-005: Session Goals and Tracking\n- POW-006: Voice Command Integration\n- POW-007: Export Session Reports\n\nVersion: 62.0.0\nAuthor: PokerTool Development Team",
      "version": null,
      "author": null,
      "complexity": 94,
      "loc": 848,
      "dependencies": [
        "logging",
        "pathlib",
        "time",
        "__future__",
        "typing",
        "dataclasses",
        "collections",
        "json",
        "enum",
        "csv",
        "pickle"
      ]
    },
    {
      "id": "src.pokertool.modules.power_features.TableInfo",
      "type": "class",
      "name": "TableInfo",
      "module": "src.pokertool.modules.power_features",
      "docstring": "Information about a poker table.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 44
    },
    {
      "id": "src.pokertool.modules.power_features.HandRecord",
      "type": "class",
      "name": "HandRecord",
      "module": "src.pokertool.modules.power_features",
      "docstring": "Complete record of a poker hand.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 55
    },
    {
      "id": "src.pokertool.modules.power_features.OpponentNote",
      "type": "class",
      "name": "OpponentNote",
      "module": "src.pokertool.modules.power_features",
      "docstring": "Note about an opponent.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 69
    },
    {
      "id": "src.pokertool.modules.power_features.SessionGoal",
      "type": "class",
      "name": "SessionGoal",
      "module": "src.pokertool.modules.power_features",
      "docstring": "Session goal with tracking.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 79
    },
    {
      "id": "src.pokertool.modules.power_features.MultiTableManager",
      "type": "class",
      "name": "MultiTableManager",
      "module": "src.pokertool.modules.power_features",
      "docstring": "Multi-table support with intelligent table switching.\n\nFeatures:\n- Track multiple tables simultaneously\n- Priority-based table switching\n- Action detection across tables\n- Table status monitoring\n- Quick-switch hotkeys",
      "bases": [],
      "methods": [
        "__init__",
        "add_table",
        "switch_table",
        "get_active_table",
        "set_table_priority",
        "get_next_priority_table",
        "remove_table"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 15,
      "line_number": 92
    },
    {
      "id": "src.pokertool.modules.power_features.HandReplaySystem",
      "type": "class",
      "name": "HandReplaySystem",
      "module": "src.pokertool.modules.power_features",
      "docstring": "Hand replay system with detailed analysis.\n\nFeatures:\n- Record complete hand history\n- Step-by-step replay\n- Alternative action analysis\n- Equity calculations\n- Export hand histories",
      "bases": [],
      "methods": [
        "__init__",
        "start_hand",
        "add_action",
        "set_community_cards",
        "finish_hand",
        "_save_hand",
        "get_hand",
        "get_recent_hands"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 16,
      "line_number": 179
    },
    {
      "id": "src.pokertool.modules.power_features.RangeVsRangeCalculator",
      "type": "class",
      "name": "RangeVsRangeCalculator",
      "module": "src.pokertool.modules.power_features",
      "docstring": "Range vs range equity calculator.\n\nFeatures:\n- Define hand ranges\n- Calculate range vs range equity\n- Monte Carlo simulation\n- Board texture analysis\n- Export equity reports",
      "bases": [],
      "methods": [
        "__init__",
        "calculate_equity",
        "parse_range_string"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 296
    },
    {
      "id": "src.pokertool.modules.power_features.AutoNoteSystem",
      "type": "class",
      "name": "AutoNoteSystem",
      "module": "src.pokertool.modules.power_features",
      "docstring": "Automatic note-taking system for opponents.\n\nFeatures:\n- Detect notable opponent behaviors\n- Auto-generate notes\n- Tag-based organization\n- Manual note addition\n- Search and filter notes",
      "bases": [],
      "methods": [
        "__init__",
        "add_note",
        "auto_generate_note",
        "get_notes",
        "_save_notes",
        "_load_notes"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 20,
      "line_number": 383
    },
    {
      "id": "src.pokertool.modules.power_features.SessionGoalTracker",
      "type": "class",
      "name": "SessionGoalTracker",
      "module": "src.pokertool.modules.power_features",
      "docstring": "Session goal setting and tracking system.\n\nFeatures:\n- Define custom goals\n- Track progress in real-time\n- Goal completion alerts\n- Historical goal tracking\n- Performance analytics",
      "bases": [],
      "methods": [
        "__init__",
        "add_goal",
        "update_goal_progress",
        "get_goals",
        "get_completion_rate"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 10,
      "line_number": 509
    },
    {
      "id": "src.pokertool.modules.power_features.VoiceCommandHandler",
      "type": "class",
      "name": "VoiceCommandHandler",
      "module": "src.pokertool.modules.power_features",
      "docstring": "Voice command integration for hands-free control.\n\nFeatures:\n- Voice command recognition\n- Custom command mapping\n- Action callbacks\n- Voice feedback\n- Command history",
      "bases": [],
      "methods": [
        "__init__",
        "_register_default_commands",
        "register_command",
        "process_voice_input",
        "_execute_action",
        "enable",
        "disable"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 11,
      "line_number": 582
    },
    {
      "id": "src.pokertool.modules.power_features.SessionReportExporter",
      "type": "class",
      "name": "SessionReportExporter",
      "module": "src.pokertool.modules.power_features",
      "docstring": "Export comprehensive session reports.\n\nFeatures:\n- Multiple export formats (CSV, JSON, PDF)\n- Customizable report templates\n- Statistics aggregation\n- Charts and graphs\n- Email delivery",
      "bases": [],
      "methods": [
        "__init__",
        "export_session_report",
        "_export_json",
        "_export_csv",
        "_export_txt"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 14,
      "line_number": 672
    },
    {
      "id": "src.pokertool.modules.power_features.PowerFeaturesSystem",
      "type": "class",
      "name": "PowerFeaturesSystem",
      "module": "src.pokertool.modules.power_features",
      "docstring": "Integrated power features system.\n\nCombines all 7 power features into unified API.",
      "bases": [],
      "methods": [
        "__init__"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 767
    },
    {
      "id": "src.pokertool.modules.power_features.get_power_features_system",
      "type": "function",
      "name": "get_power_features_system",
      "module": "src.pokertool.modules.power_features",
      "signature": "def get_power_features_system() -> PowerFeaturesSystem",
      "docstring": "Get global power features system instance (singleton).",
      "parameters": [],
      "return_type": "PowerFeaturesSystem",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "PowerFeaturesSystem"
      ],
      "raises": [],
      "line_number": 793
    },
    {
      "id": "src.pokertool.modules.poker_screen_scraper",
      "type": "module",
      "path": "src/pokertool/modules/poker_screen_scraper.py",
      "docstring": null,
      "version": "'32'",
      "author": null,
      "complexity": 68,
      "loc": 535,
      "dependencies": [
        "logging",
        "time",
        "typing",
        "queue",
        "dataclasses",
        "numpy",
        "threading"
      ]
    },
    {
      "id": "src.pokertool.modules.poker_screen_scraper.ScreenScraperBridge",
      "type": "class",
      "name": "ScreenScraperBridge",
      "module": "src.pokertool.modules.poker_screen_scraper",
      "docstring": "Bridge class that connects the screen scraper to the application.\nHandles state updates and callbacks.",
      "bases": [],
      "methods": [
        "__init__",
        "register_callback",
        "unregister_callback",
        "process_update",
        "convert_to_game_state"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 21,
      "line_number": 83
    },
    {
      "id": "src.pokertool.modules.poker_screen_scraper.PokerScreenScraper",
      "type": "class",
      "name": "PokerScreenScraper",
      "module": "src.pokertool.modules.poker_screen_scraper",
      "docstring": "Backward-compatible wrapper around the Betfair Edition scraper.\n\nThis class delegates all calls to the enhanced scraper while maintaining\nthe exact same API as the legacy version.\n\nUsage:\n    scraper = PokerScreenScraper(site=PokerSite.BETFAIR)\n    state = scraper.analyze_table()",
      "bases": [],
      "methods": [
        "__init__",
        "detect_poker_table",
        "analyze_table",
        "capture_table",
        "calibrate",
        "get_performance_stats",
        "save_debug_image",
        "shutdown",
        "start_continuous_capture",
        "stop_continuous_capture",
        "get_state_updates",
        "get_cached_state",
        "extract_pot_size",
        "extract_hero_cards",
        "extract_board_cards",
        "extract_seat_info",
        "calibrated",
        "site"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 39,
      "line_number": 174
    },
    {
      "id": "src.pokertool.modules.poker_screen_scraper.create_scraper",
      "type": "function",
      "name": "create_scraper",
      "module": "src.pokertool.modules.poker_screen_scraper",
      "signature": "def create_scraper(site: str) -> PokerScreenScraper",
      "docstring": "Create a poker screen scraper optimized for the specified site.\n\nThis is the recommended way to create a scraper instance.\n\nArgs:\n    site: Poker site name (default: 'BETFAIR')\n          Options: 'BETFAIR', 'POKERSTARS', 'PARTYPOKER', etc.\n\nReturns:\n    Configured PokerScreenScraper instance\n\nExample:\n    >>> scraper = create_scraper('BETFAIR')\n    >>> is_poker, confidence, details = scraper.detect_poker_table()\n    >>> if is_poker:\n    >>>     state = scraper.analyze_table()",
      "parameters": [
        {
          "name": "site",
          "annotation": "str",
          "default": "'BETFAIR'",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "PokerScreenScraper",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "create_betfair_scraper",
        "PokerScreenScraper.__new__",
        "Queue",
        "Event",
        "site.upper",
        "PokerScreenScraper"
      ],
      "raises": [],
      "line_number": 379
    },
    {
      "id": "src.pokertool.modules.poker_screen_scraper.test_scraper_functionality",
      "type": "function",
      "name": "test_scraper_functionality",
      "module": "src.pokertool.modules.poker_screen_scraper",
      "signature": "def test_scraper_functionality() -> bool",
      "docstring": "Test basic scraper functionality.\n\nReturns:\n    True if test passed, False otherwise",
      "parameters": [],
      "return_type": "bool",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 5,
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "create_scraper",
        "print",
        "scraper.capture_table",
        "print",
        "print",
        "scraper.detect_poker_table",
        "print",
        "print",
        "print",
        "print",
        "details.get",
        "print",
        "details.get",
        "scraper.analyze_table",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "print",
        "traceback.print_exc"
      ],
      "raises": [],
      "line_number": 425
    },
    {
      "id": "src.pokertool.modules.poker_screen_scraper.get_scraper_info",
      "type": "function",
      "name": "get_scraper_info",
      "module": "src.pokertool.modules.poker_screen_scraper",
      "signature": "def get_scraper_info() -> Dict[str, Any]",
      "docstring": "Get information about the scraper configuration.",
      "parameters": [],
      "return_type": "Dict[str, Any]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [],
      "raises": [],
      "line_number": 485
    },
    {
      "id": "src.pokertool.modules.adaptive_ui_detector",
      "type": "module",
      "path": "src/pokertool/modules/adaptive_ui_detector.py",
      "docstring": "PokerTool Adaptive UI Change Detection Module\n============================================\n\nDetects layout, colour, and component level changes in supported poker clients\nso scraping pipelines can be updated before production regressions occur.\n\nThe detector keeps a library of canonical baseline screenshots, compares every\nnew capture against the closest baseline using perceptual hashes and regional\nsimilarity metrics, and emits rich alert reports (optionally with diff\nvisualisations) whenever the deviation exceeds configured thresholds.\n\nAll functionality in this module is intentionally dependency-light so it can\nrun inside CI and automated QA harnesses without GPU access.",
      "version": null,
      "author": null,
      "complexity": 111,
      "loc": 822,
      "dependencies": [
        "logging",
        "uuid",
        "numpy",
        "pathlib",
        "time",
        "__future__",
        "typing",
        "dataclasses",
        "cv2",
        "json",
        "datetime",
        "os"
      ]
    },
    {
      "id": "src.pokertool.modules.adaptive_ui_detector.RegionOfInterest",
      "type": "class",
      "name": "RegionOfInterest",
      "module": "src.pokertool.modules.adaptive_ui_detector",
      "docstring": "Normalised description of a region to analyse within a screenshot.\n\nCoordinates are expressed in relative units (0.0 - 1.0) so they can be\nreused across resolutions. The ``critical`` flag elevates alerts whenever\nthe region falls below its similarity threshold.",
      "bases": [
        "NamedTuple"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 44
    },
    {
      "id": "src.pokertool.modules.adaptive_ui_detector.BaselineState",
      "type": "class",
      "name": "BaselineState",
      "module": "src.pokertool.modules.adaptive_ui_detector",
      "docstring": "Serialisable description of a baseline screenshot.",
      "bases": [],
      "methods": [
        "to_dict",
        "from_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 62
    },
    {
      "id": "src.pokertool.modules.adaptive_ui_detector.ComparisonResult",
      "type": "class",
      "name": "ComparisonResult",
      "module": "src.pokertool.modules.adaptive_ui_detector",
      "docstring": "Outcome generated when comparing an image to the baseline library.",
      "bases": [],
      "methods": [
        "to_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 1,
      "line_number": 101
    },
    {
      "id": "src.pokertool.modules.adaptive_ui_detector.AdaptiveUIDetector",
      "type": "class",
      "name": "AdaptiveUIDetector",
      "module": "src.pokertool.modules.adaptive_ui_detector",
      "docstring": "High level manager for UI baseline comparison and alerting.",
      "bases": [],
      "methods": [
        "__init__",
        "_load_config",
        "_merge_dicts",
        "_initialise_regions",
        "_load_existing_baselines",
        "add_baseline_screenshot",
        "_build_baseline_id",
        "_enforce_baseline_limit",
        "_remove_baseline",
        "_persist_baseline",
        "compare_screenshot",
        "_load_image",
        "_select_candidate_baselines",
        "_ensure_same_size",
        "_compare_regions",
        "_resolve_regions",
        "_region_similarity",
        "_compute_hashes",
        "_is_match",
        "_update_statistics",
        "export_manifest",
        "_write_manifest",
        "generate_alert_report",
        "_generate_visualization",
        "_generate_recommendations",
        "get_detection_statistics"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 96,
      "line_number": 190
    },
    {
      "id": "src.pokertool.modules.adaptive_ui_detector._parse_resolution",
      "type": "function",
      "name": "_parse_resolution",
      "module": "src.pokertool.modules.adaptive_ui_detector",
      "signature": "def _parse_resolution(resolution: str) -> Tuple[int, int]",
      "docstring": null,
      "parameters": [
        {
          "name": "resolution",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "Tuple[int, int]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "split",
        "resolution.lower",
        "int",
        "int",
        "ValueError"
      ],
      "raises": [
        "ValueError"
      ],
      "line_number": 133
    },
    {
      "id": "src.pokertool.modules.adaptive_ui_detector._ensure_uint8",
      "type": "function",
      "name": "_ensure_uint8",
      "module": "src.pokertool.modules.adaptive_ui_detector",
      "signature": "def _ensure_uint8(image: np.ndarray) -> np.ndarray",
      "docstring": null,
      "parameters": [
        {
          "name": "image",
          "annotation": "np.ndarray",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "np.ndarray",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "np.clip",
        "image.astype"
      ],
      "raises": [],
      "line_number": 141
    },
    {
      "id": "src.pokertool.modules.adaptive_ui_detector._to_grayscale",
      "type": "function",
      "name": "_to_grayscale",
      "module": "src.pokertool.modules.adaptive_ui_detector",
      "signature": "def _to_grayscale(image: np.ndarray) -> np.ndarray",
      "docstring": null,
      "parameters": [
        {
          "name": "image",
          "annotation": "np.ndarray",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "np.ndarray",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "len",
        "cv2.cvtColor"
      ],
      "raises": [],
      "line_number": 148
    },
    {
      "id": "src.pokertool.modules.adaptive_ui_detector._average_hash",
      "type": "function",
      "name": "_average_hash",
      "module": "src.pokertool.modules.adaptive_ui_detector",
      "signature": "def _average_hash(image: np.ndarray, hash_size: int) -> str",
      "docstring": null,
      "parameters": [
        {
          "name": "image",
          "annotation": "np.ndarray",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "hash_size",
          "annotation": "int",
          "default": "8",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "_to_grayscale",
        "cv2.resize",
        "resized.mean",
        "flatten",
        "astype",
        "join",
        "str"
      ],
      "raises": [],
      "line_number": 154
    },
    {
      "id": "src.pokertool.modules.adaptive_ui_detector._difference_hash",
      "type": "function",
      "name": "_difference_hash",
      "module": "src.pokertool.modules.adaptive_ui_detector",
      "signature": "def _difference_hash(image: np.ndarray, hash_size: int) -> str",
      "docstring": null,
      "parameters": [
        {
          "name": "image",
          "annotation": "np.ndarray",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "hash_size",
          "annotation": "int",
          "default": "8",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "_to_grayscale",
        "cv2.resize",
        "join",
        "diff.flatten"
      ],
      "raises": [],
      "line_number": 162
    },
    {
      "id": "src.pokertool.modules.adaptive_ui_detector._phash",
      "type": "function",
      "name": "_phash",
      "module": "src.pokertool.modules.adaptive_ui_detector",
      "signature": "def _phash(image: np.ndarray, hash_size: int) -> str",
      "docstring": null,
      "parameters": [
        {
          "name": "image",
          "annotation": "np.ndarray",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "hash_size",
          "annotation": "int",
          "default": "8",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "str",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "_to_grayscale",
        "cv2.resize",
        "np.float32",
        "cv2.dct",
        "np.median",
        "join",
        "dct_low_freq.flatten"
      ],
      "raises": [],
      "line_number": 169
    },
    {
      "id": "src.pokertool.modules.adaptive_ui_detector._hamming_distance",
      "type": "function",
      "name": "_hamming_distance",
      "module": "src.pokertool.modules.adaptive_ui_detector",
      "signature": "def _hamming_distance(hash_a: str, hash_b: str) -> int",
      "docstring": null,
      "parameters": [
        {
          "name": "hash_a",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "hash_b",
          "annotation": "str",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "int",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "len",
        "len",
        "max",
        "len",
        "len",
        "sum",
        "zip"
      ],
      "raises": [],
      "line_number": 179
    },
    {
      "id": "src.pokertool.modules.adaptive_ui_detector.create_detector",
      "type": "function",
      "name": "create_detector",
      "module": "src.pokertool.modules.adaptive_ui_detector",
      "signature": "def create_detector(baseline_dir: Optional[str], reports_dir: Optional[str]) -> AdaptiveUIDetector",
      "docstring": "Factory for external callers.",
      "parameters": [
        {
          "name": "baseline_dir",
          "annotation": "Optional[str]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        },
        {
          "name": "reports_dir",
          "annotation": "Optional[str]",
          "default": "None",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "AdaptiveUIDetector",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "AdaptiveUIDetector"
      ],
      "raises": [],
      "line_number": 820
    },
    {
      "id": "src.pokertool.modules.reliability_monitor",
      "type": "module",
      "path": "src/pokertool/modules/reliability_monitor.py",
      "docstring": "Reliability Monitoring System\n==============================\n\nAdvanced reliability and fault tolerance for poker screen scraping.\n\nFeatures:\n- Automatic recovery from scraper failures\n- Graceful degradation for missing dependencies\n- Real-time health monitoring dashboard\n- Automatic error reporting and diagnostics\n- State persistence and recovery\n- Connection quality monitoring\n- Memory leak detection and prevention\n- Multi-site fallback chain\n\nVersion: 62.0.0\nAuthor: PokerTool Development Team",
      "version": null,
      "author": null,
      "complexity": 108,
      "loc": 1174,
      "dependencies": [
        "logging",
        "psutil",
        "sys",
        "traceback",
        "pathlib",
        "time",
        "__future__",
        "hashlib",
        "typing",
        "dataclasses",
        "collections",
        "json",
        "gc",
        "enum",
        "os",
        "threading",
        "pickle"
      ]
    },
    {
      "id": "src.pokertool.modules.reliability_monitor.HealthStatus",
      "type": "class",
      "name": "HealthStatus",
      "module": "src.pokertool.modules.reliability_monitor",
      "docstring": "System health status.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 50
    },
    {
      "id": "src.pokertool.modules.reliability_monitor.ComponentType",
      "type": "class",
      "name": "ComponentType",
      "module": "src.pokertool.modules.reliability_monitor",
      "docstring": "Type of system component.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 58
    },
    {
      "id": "src.pokertool.modules.reliability_monitor.HealthMetric",
      "type": "class",
      "name": "HealthMetric",
      "module": "src.pokertool.modules.reliability_monitor",
      "docstring": "Health metric for a component.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 70
    },
    {
      "id": "src.pokertool.modules.reliability_monitor.ErrorReport",
      "type": "class",
      "name": "ErrorReport",
      "module": "src.pokertool.modules.reliability_monitor",
      "docstring": "Error report for diagnostics.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 83
    },
    {
      "id": "src.pokertool.modules.reliability_monitor.AutoRecoveryManager",
      "type": "class",
      "name": "AutoRecoveryManager",
      "module": "src.pokertool.modules.reliability_monitor",
      "docstring": "Automatic recovery from scraper failures with exponential backoff.\n\nImprovements:\n- Detect scraper failures automatically\n- Exponential backoff retry strategy\n- Circuit breaker pattern\n- Automatic reconnection\n- Fallback to degraded mode\n\nExpected improvement: 99%+ uptime, auto-recovery in <5 seconds",
      "bases": [],
      "methods": [
        "__init__",
        "execute_with_recovery",
        "reset_circuit_breaker",
        "get_stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 11,
      "line_number": 98
    },
    {
      "id": "src.pokertool.modules.reliability_monitor.GracefulDegradationManager",
      "type": "class",
      "name": "GracefulDegradationManager",
      "module": "src.pokertool.modules.reliability_monitor",
      "docstring": "Graceful degradation when dependencies are missing.\n\nImprovements:\n- Detect missing dependencies at startup\n- Fallback to alternative implementations\n- Feature flags for optional components\n- Clear warnings to user\n- Maintain core functionality\n\nExpected improvement: 100% startup success, clear error messages",
      "bases": [],
      "methods": [
        "__init__",
        "_check_dependencies",
        "is_available",
        "get_fallback",
        "get_warnings",
        "get_status_report"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 15,
      "line_number": 234
    },
    {
      "id": "src.pokertool.modules.reliability_monitor.HealthMonitor",
      "type": "class",
      "name": "HealthMonitor",
      "module": "src.pokertool.modules.reliability_monitor",
      "docstring": "Real-time health monitoring for all system components.\n\nImprovements:\n- Monitor health of all components\n- Track latency, error rates, uptime\n- Real-time dashboard data\n- Automatic alerts on degradation\n- Historical health metrics\n\nExpected improvement: Full system visibility, <1 minute to detect issues",
      "bases": [],
      "methods": [
        "__init__",
        "update_component_health",
        "get_component_health",
        "get_all_health",
        "get_overall_status",
        "get_dashboard_data"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 18,
      "line_number": 338
    },
    {
      "id": "src.pokertool.modules.reliability_monitor.ErrorReporter",
      "type": "class",
      "name": "ErrorReporter",
      "module": "src.pokertool.modules.reliability_monitor",
      "docstring": "Automatic error reporting with diagnostics.\n\nImprovements:\n- Capture all errors with full context\n- Generate diagnostic reports\n- Automatic error categorization\n- Error trending analysis\n- Export reports for analysis\n\nExpected improvement: 100% error capture, detailed diagnostics",
      "bases": [],
      "methods": [
        "__init__",
        "report_error",
        "_save_report",
        "get_recent_errors",
        "get_error_summary"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 11,
      "line_number": 495
    },
    {
      "id": "src.pokertool.modules.reliability_monitor.StatePersistenceManager",
      "type": "class",
      "name": "StatePersistenceManager",
      "module": "src.pokertool.modules.reliability_monitor",
      "docstring": "State persistence and recovery for crash protection.\n\nImprovements:\n- Automatic state checkpointing\n- Fast crash recovery\n- Incremental state saving\n- Corruption detection\n- Automatic rollback\n\nExpected improvement: <30 second recovery, zero data loss",
      "bases": [],
      "methods": [
        "__init__",
        "save_state",
        "load_state",
        "_calculate_checksum",
        "delete_state"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 16,
      "line_number": 627
    },
    {
      "id": "src.pokertool.modules.reliability_monitor.ConnectionQualityMonitor",
      "type": "class",
      "name": "ConnectionQualityMonitor",
      "module": "src.pokertool.modules.reliability_monitor",
      "docstring": "Monitor connection quality for remote resources.\n\nImprovements:\n- Track connection latency\n- Detect connection drops\n- Measure bandwidth\n- Alert on degradation\n- Automatic reconnection\n\nExpected improvement: Early connection issue detection, <5s recovery",
      "bases": [],
      "methods": [
        "__init__",
        "record_request",
        "get_avg_latency",
        "get_connection_quality",
        "get_stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 13,
      "line_number": 783
    },
    {
      "id": "src.pokertool.modules.reliability_monitor.MemoryLeakDetector",
      "type": "class",
      "name": "MemoryLeakDetector",
      "module": "src.pokertool.modules.reliability_monitor",
      "docstring": "Detect and prevent memory leaks.\n\nImprovements:\n- Track memory usage over time\n- Detect memory growth patterns\n- Automatic garbage collection\n- Memory profiling\n- Leak alerts\n\nExpected improvement: 100% leak detection, automatic prevention",
      "bases": [],
      "methods": [
        "__init__",
        "check_memory",
        "get_stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 6,
      "line_number": 892
    },
    {
      "id": "src.pokertool.modules.reliability_monitor.MultiSiteFallbackChain",
      "type": "class",
      "name": "MultiSiteFallbackChain",
      "module": "src.pokertool.modules.reliability_monitor",
      "docstring": "Multi-site fallback chain for reliability.\n\nImprovements:\n- Support multiple poker sites\n- Automatic fallback on failure\n- Site priority ordering\n- Health-based site selection\n- Seamless transitions\n\nExpected improvement: 99.9%+ availability with fallbacks",
      "bases": [],
      "methods": [
        "__init__",
        "register_site",
        "get_next_site",
        "mark_site_failed",
        "mark_site_success",
        "get_stats"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 12,
      "line_number": 990
    },
    {
      "id": "src.pokertool.modules.reliability_monitor.ReliabilitySystem",
      "type": "class",
      "name": "ReliabilitySystem",
      "module": "src.pokertool.modules.reliability_monitor",
      "docstring": "Integrated reliability system combining all components.\n\nProvides unified API for all reliability features.",
      "bases": [],
      "methods": [
        "__init__",
        "get_all_stats",
        "print_status_report"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 4,
      "line_number": 1080
    },
    {
      "id": "src.pokertool.modules.reliability_monitor.get_reliability_system",
      "type": "function",
      "name": "get_reliability_system",
      "module": "src.pokertool.modules.reliability_monitor",
      "signature": "def get_reliability_system() -> ReliabilitySystem",
      "docstring": "Get global reliability system instance (singleton).",
      "parameters": [],
      "return_type": "ReliabilitySystem",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "ReliabilitySystem"
      ],
      "raises": [],
      "line_number": 1124
    },
    {
      "id": "src.pokertool.modules.hand_replay_system",
      "type": "module",
      "path": "src/pokertool/modules/hand_replay_system.py",
      "docstring": "Hand Replay System Module\n\nThis module provides visual hand replay capabilities with animation support,\nanalysis overlays, sharing mechanisms, and annotation features.\n\nPublic API:\n    - HandReplaySystem: Main replay system class\n    - ReplayFrame: Represents a single frame in the replay\n    - ReplayAnimation: Handles animation between frames\n    - AnalysisOverlay: Provides strategic analysis during replay\n    - ShareManager: Handles sharing and export functionality\n    - AnnotationManager: Manages annotations on replays\n\nDependencies:\n    - poker_config (for configuration)\n    - logger (for logging)\n    - json, datetime (standard library)\n\nLast Reviewed: 2025-09-30",
      "version": null,
      "author": null,
      "complexity": 75,
      "loc": 850,
      "dependencies": [
        "pathlib",
        "__future__",
        "typing",
        "dataclasses",
        "json",
        "enum",
        "datetime"
      ]
    },
    {
      "id": "src.pokertool.modules.hand_replay_system.ActionType",
      "type": "class",
      "name": "ActionType",
      "module": "src.pokertool.modules.hand_replay_system",
      "docstring": "Enumeration of possible poker actions.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 63
    },
    {
      "id": "src.pokertool.modules.hand_replay_system.Street",
      "type": "class",
      "name": "Street",
      "module": "src.pokertool.modules.hand_replay_system",
      "docstring": "Enumeration of poker streets.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 75
    },
    {
      "id": "src.pokertool.modules.hand_replay_system.PlayerAction",
      "type": "class",
      "name": "PlayerAction",
      "module": "src.pokertool.modules.hand_replay_system",
      "docstring": "Represents a single player action in a hand.",
      "bases": [],
      "methods": [
        "__post_init__",
        "to_dict",
        "from_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 85
    },
    {
      "id": "src.pokertool.modules.hand_replay_system.ReplayFrame",
      "type": "class",
      "name": "ReplayFrame",
      "module": "src.pokertool.modules.hand_replay_system",
      "docstring": "Represents a single frame in a hand replay.\n\nA frame captures the complete state at a specific moment during hand play.",
      "bases": [],
      "methods": [
        "to_dict",
        "from_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 3,
      "line_number": 118
    },
    {
      "id": "src.pokertool.modules.hand_replay_system.Annotation",
      "type": "class",
      "name": "Annotation",
      "module": "src.pokertool.modules.hand_replay_system",
      "docstring": "Represents an annotation on a replay frame.",
      "bases": [],
      "methods": [
        "to_dict",
        "from_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 154
    },
    {
      "id": "src.pokertool.modules.hand_replay_system.AnnotationManager",
      "type": "class",
      "name": "AnnotationManager",
      "module": "src.pokertool.modules.hand_replay_system",
      "docstring": "Manages annotations for replay frames.\n\nProvides functionality to add, edit, delete, and retrieve annotations.",
      "bases": [],
      "methods": [
        "__init__",
        "add_annotation",
        "get_annotations",
        "delete_annotation",
        "to_dict",
        "from_dict"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 10,
      "line_number": 184
    },
    {
      "id": "src.pokertool.modules.hand_replay_system.AnalysisData",
      "type": "class",
      "name": "AnalysisData",
      "module": "src.pokertool.modules.hand_replay_system",
      "docstring": "Strategic analysis data for a replay frame.",
      "bases": [],
      "methods": [
        "to_dict",
        "from_dict"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 2,
      "line_number": 285
    },
    {
      "id": "src.pokertool.modules.hand_replay_system.AnalysisOverlay",
      "type": "class",
      "name": "AnalysisOverlay",
      "module": "src.pokertool.modules.hand_replay_system",
      "docstring": "Provides strategic analysis overlay for replay frames.\n\nCalculates and displays equity, pot odds, recommended actions, and EV.",
      "bases": [],
      "methods": [
        "__init__",
        "analyze_frame",
        "_calculate_equity",
        "_recommend_action",
        "_generate_explanation"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 19,
      "line_number": 303
    },
    {
      "id": "src.pokertool.modules.hand_replay_system.ReplayAnimation",
      "type": "class",
      "name": "ReplayAnimation",
      "module": "src.pokertool.modules.hand_replay_system",
      "docstring": "Handles animation between replay frames.\n\nProvides smooth transitions and timing control.",
      "bases": [],
      "methods": [
        "__init__",
        "calculate_transition",
        "set_speed"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 6,
      "line_number": 426
    },
    {
      "id": "src.pokertool.modules.hand_replay_system.ShareManager",
      "type": "class",
      "name": "ShareManager",
      "module": "src.pokertool.modules.hand_replay_system",
      "docstring": "Manages sharing and export of hand replays.\n\nSupports multiple export formats and sharing platforms.",
      "bases": [],
      "methods": [
        "__init__",
        "export_to_json",
        "import_from_json",
        "generate_share_link"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 9,
      "line_number": 500
    },
    {
      "id": "src.pokertool.modules.hand_replay_system.HandReplaySystem",
      "type": "class",
      "name": "HandReplaySystem",
      "module": "src.pokertool.modules.hand_replay_system",
      "docstring": "Main Hand Replay System.\n\nCoordinates all replay functionality including playback, analysis,\nannotations, and sharing.",
      "bases": [],
      "methods": [
        "__init__",
        "add_frame",
        "get_frame",
        "next_frame",
        "previous_frame",
        "jump_to_frame",
        "get_current_frame",
        "analyze_current_frame",
        "export_replay",
        "import_replay",
        "get_frame_count",
        "reset"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 19,
      "line_number": 602
    },
    {
      "id": "src.pokertool.modules.poker_gui_enhanced",
      "type": "module",
      "path": "src/pokertool/modules/poker_gui_enhanced.py",
      "docstring": "Compatibility shim for legacy `poker_gui_enhanced` module.\n\nThis module re-exports the current Tkinter assistant components from\n`src.pokertool.gui` and provides lightweight stand-ins for helper classes that\nolder tests expect (e.g. `EnhancedCardEntry`, `StatusBar`).",
      "version": null,
      "author": null,
      "complexity": 38,
      "loc": 282,
      "dependencies": [
        "sys",
        "pathlib",
        "__future__",
        "typing",
        "dataclasses",
        "enum",
        "queue",
        "tkinter"
      ]
    },
    {
      "id": "src.pokertool.modules.poker_gui_enhanced.ValidationState",
      "type": "class",
      "name": "ValidationState",
      "module": "src.pokertool.modules.poker_gui_enhanced",
      "docstring": "Simple validation states for card entry widgets.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 59
    },
    {
      "id": "src.pokertool.modules.poker_gui_enhanced.UITheme",
      "type": "class",
      "name": "UITheme",
      "module": "src.pokertool.modules.poker_gui_enhanced",
      "docstring": "Minimal theme representation for legacy callers.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 69
    },
    {
      "id": "src.pokertool.modules.poker_gui_enhanced.UIState",
      "type": "class",
      "name": "UIState",
      "module": "src.pokertool.modules.poker_gui_enhanced",
      "docstring": "Lightweight UI state container used by historic tests.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 80
    },
    {
      "id": "src.pokertool.modules.poker_gui_enhanced.EnhancedCardEntry",
      "type": "class",
      "name": "EnhancedCardEntry",
      "module": "src.pokertool.modules.poker_gui_enhanced",
      "docstring": "Card entry widget with basic validation logic.",
      "bases": [
        "tk.Entry"
      ],
      "methods": [
        "__init__",
        "_normalize",
        "_validate_input",
        "get_card",
        "clear",
        "set_card"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 16,
      "line_number": 89
    },
    {
      "id": "src.pokertool.modules.poker_gui_enhanced.StatusBar",
      "type": "class",
      "name": "StatusBar",
      "module": "src.pokertool.modules.poker_gui_enhanced",
      "docstring": "Minimal status bar implementation for backwards compatibility.",
      "bases": [
        "tk.Frame"
      ],
      "methods": [
        "__init__",
        "set_status",
        "set_permanent_status"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 6,
      "line_number": 156
    },
    {
      "id": "src.pokertool.modules.poker_gui_enhanced.VisualCard",
      "type": "class",
      "name": "VisualCard",
      "module": "src.pokertool.modules.poker_gui_enhanced",
      "docstring": "Wrapper that tolerates mock parents during tests.",
      "bases": [
        "_VisualCard"
      ],
      "methods": [
        "__init__",
        "destroy"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 4,
      "line_number": 207
    },
    {
      "id": "src.pokertool.modules.poker_gui_enhanced.CardSelectionPanel",
      "type": "class",
      "name": "CardSelectionPanel",
      "module": "src.pokertool.modules.poker_gui_enhanced",
      "docstring": "Wrapper panel that creates a hidden root when tests supply mocks.",
      "bases": [
        "_CardSelectionPanel"
      ],
      "methods": [
        "__init__",
        "destroy"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 4,
      "line_number": 226
    },
    {
      "id": "src.pokertool.modules.poker_gui_enhanced.TableVisualization",
      "type": "class",
      "name": "TableVisualization",
      "module": "src.pokertool.modules.poker_gui_enhanced",
      "docstring": "Wrapper canvas that tolerates mocked parents in legacy tests.",
      "bases": [
        "_TableVisualization"
      ],
      "methods": [
        "__init__",
        "destroy"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 4,
      "line_number": 245
    },
    {
      "id": "src.pokertool.modules.poker_gui_enhanced.EnhancedPokerAssistant",
      "type": "class",
      "name": "EnhancedPokerAssistant",
      "module": "src.pokertool.modules.poker_gui_enhanced",
      "docstring": "Alias exposing the modern assistant under the legacy module name.",
      "bases": [
        "_EnhancedPokerAssistant"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 264
    },
    {
      "id": "src.pokertool.modules.poker_gui_enhanced.initialise_db_if_needed",
      "type": "function",
      "name": "initialise_db_if_needed",
      "module": "src.pokertool.modules.poker_gui_enhanced",
      "signature": "def initialise_db_if_needed() -> None",
      "docstring": "Legacy function kept for test patches.",
      "parameters": [],
      "return_type": "None",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [],
      "raises": [],
      "line_number": 187
    },
    {
      "id": "src.pokertool.modules.poker_gui_enhanced.open_db",
      "type": "function",
      "name": "open_db",
      "module": "src.pokertool.modules.poker_gui_enhanced",
      "signature": "def open_db() -> None",
      "docstring": "Legacy function kept for test patches.",
      "parameters": [],
      "return_type": "None",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [],
      "raises": [],
      "line_number": 191
    },
    {
      "id": "src.pokertool.modules.poker_gui_enhanced._ensure_parent",
      "type": "function",
      "name": "_ensure_parent",
      "module": "src.pokertool.modules.poker_gui_enhanced",
      "signature": "def _ensure_parent(parent: Any) -> tuple[tk.Misc, Optional[tk.Tk]]",
      "docstring": "Provide a safe tkinter parent even when tests pass mocks.",
      "parameters": [
        {
          "name": "parent",
          "annotation": "Any",
          "default": null,
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "tuple[tk.Misc, Optional[tk.Tk]]",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 2,
      "calls": [
        "isinstance",
        "tk.Tk",
        "fallback_root.withdraw",
        "tk.Frame",
        "shim_parent.pack_forget"
      ],
      "raises": [],
      "line_number": 195
    },
    {
      "id": "src.pokertool.modules.multi_table_segmenter",
      "type": "module",
      "path": "src/pokertool/modules/multi_table_segmenter.py",
      "docstring": "PokerTool Multi-Table Layout Segmenter\n=====================================\n\nProvides deterministic, dependency-light segmentation utilities that isolate\nindividual poker tables and their surrounding HUD components across single and\nmulti-table screenshots. The implementation is intentionally pragmatic so it\ncan execute inside continuous integration pipelines without GPU access whilst\nstill exposing hooks for more advanced models (YOLO/ONNX/Torch).",
      "version": null,
      "author": null,
      "complexity": 74,
      "loc": 574,
      "dependencies": [
        "logging",
        "math",
        "pathlib",
        "time",
        "__future__",
        "typing",
        "dataclasses",
        "cv2",
        "json",
        "itertools",
        "numpy"
      ]
    },
    {
      "id": "src.pokertool.modules.multi_table_segmenter.DetectedObject",
      "type": "class",
      "name": "DetectedObject",
      "module": "src.pokertool.modules.multi_table_segmenter",
      "docstring": "Unified representation for detected regions.",
      "bases": [
        "NamedTuple"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 51
    },
    {
      "id": "src.pokertool.modules.multi_table_segmenter.TableLayout",
      "type": "class",
      "name": "TableLayout",
      "module": "src.pokertool.modules.multi_table_segmenter",
      "docstring": "Metadata for a single detected table and related components.",
      "bases": [],
      "methods": [
        "get_component_count",
        "get_best_component"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 3,
      "line_number": 63
    },
    {
      "id": "src.pokertool.modules.multi_table_segmenter.SegmentationResult",
      "type": "class",
      "name": "SegmentationResult",
      "module": "src.pokertool.modules.multi_table_segmenter",
      "docstring": "High-level result returned by the segmenter.",
      "bases": [],
      "methods": [
        "get_table_count",
        "get_overlapping_tables",
        "_boxes_overlap"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 9,
      "line_number": 83
    },
    {
      "id": "src.pokertool.modules.multi_table_segmenter.MultiTableSegmenter",
      "type": "class",
      "name": "MultiTableSegmenter",
      "module": "src.pokertool.modules.multi_table_segmenter",
      "docstring": "Detector that isolates tables and major HUD components.",
      "bases": [],
      "methods": [
        "__init__",
        "_load_config",
        "_merge_dicts",
        "segment_image",
        "visualize_segmentation",
        "extract_table_regions",
        "get_component_crops",
        "batch_process_images",
        "export_results",
        "get_statistics",
        "_load_image",
        "_select_method",
        "_segment_traditional",
        "_confidence_from_area",
        "_detect_secondary_components",
        "_next_table_id",
        "_update_statistics"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 61,
      "line_number": 185
    },
    {
      "id": "src.pokertool.modules.multi_table_segmenter.create_segmenter",
      "type": "function",
      "name": "create_segmenter",
      "module": "src.pokertool.modules.multi_table_segmenter",
      "signature": "def create_segmenter(kwargs: Any) -> MultiTableSegmenter",
      "docstring": null,
      "parameters": [
        {
          "name": "kwargs",
          "annotation": "Any",
          "default": null,
          "kind": "VAR_KEYWORD"
        }
      ],
      "return_type": "MultiTableSegmenter",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 1,
      "calls": [
        "MultiTableSegmenter"
      ],
      "raises": [],
      "line_number": 573
    },
    {
      "id": "src.pokertool.modules.range_construction_tool",
      "type": "module",
      "path": "src/pokertool/modules/range_construction_tool.py",
      "docstring": "Range Construction Tool Module\n\nThis module provides a visual interface for constructing and manipulating poker hand ranges.\nSupports drag-and-drop, range comparison, import/export, and template management.\n\nPublic API:\n    - RangeConstructionTool: Main range construction class\n    - HandRange: Represents a poker hand range\n    - RangeGrid: Visual grid representation of ranges\n    - RangeComparator: Compare multiple ranges\n    - RangeTemplate: Pre-defined range templates\n    - RangeImportExport: Import/export functionality\n\nDependencies:\n    - logger (for logging)\n    - json, itertools (standard library)\n\nLast Reviewed: 2025-09-30",
      "version": null,
      "author": null,
      "complexity": 118,
      "loc": 650,
      "dependencies": [
        "pathlib",
        "__future__",
        "typing",
        "dataclasses",
        "json",
        "itertools",
        "enum"
      ]
    },
    {
      "id": "src.pokertool.modules.range_construction_tool.RangeFormat",
      "type": "class",
      "name": "RangeFormat",
      "module": "src.pokertool.modules.range_construction_tool",
      "docstring": "Enumeration of range format types.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 62
    },
    {
      "id": "src.pokertool.modules.range_construction_tool.HandType",
      "type": "class",
      "name": "HandType",
      "module": "src.pokertool.modules.range_construction_tool",
      "docstring": "Enumeration of hand types.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 70
    },
    {
      "id": "src.pokertool.modules.range_construction_tool.HandRange",
      "type": "class",
      "name": "HandRange",
      "module": "src.pokertool.modules.range_construction_tool",
      "docstring": "Represents a poker hand range.",
      "bases": [],
      "methods": [
        "__post_init__",
        "_validate_hands",
        "_is_valid_hand",
        "add_hand",
        "remove_hand",
        "add_range_string",
        "_parse_range_string",
        "_expand_plus_notation",
        "get_hand_count",
        "get_percentage",
        "contains",
        "clear",
        "to_dict",
        "from_dict",
        "to_string"
      ],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 41,
      "line_number": 82
    },
    {
      "id": "src.pokertool.modules.range_construction_tool.RangeGrid",
      "type": "class",
      "name": "RangeGrid",
      "module": "src.pokertool.modules.range_construction_tool",
      "docstring": "Visual grid representation of a poker hand range.",
      "bases": [],
      "methods": [
        "__init__",
        "_initialize_grid",
        "set_hand",
        "get_hand",
        "load_from_range",
        "to_range",
        "get_selected_count"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 22,
      "line_number": 237
    },
    {
      "id": "src.pokertool.modules.range_construction_tool.RangeComparator",
      "type": "class",
      "name": "RangeComparator",
      "module": "src.pokertool.modules.range_construction_tool",
      "docstring": "Compare multiple poker hand ranges.",
      "bases": [],
      "methods": [
        "__init__",
        "get_overlap",
        "get_difference",
        "get_union",
        "get_overlap_percentage",
        "compare_multiple"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 12,
      "line_number": 312
    },
    {
      "id": "src.pokertool.modules.range_construction_tool.RangeTemplate",
      "type": "class",
      "name": "RangeTemplate",
      "module": "src.pokertool.modules.range_construction_tool",
      "docstring": "Predefined poker hand range templates.",
      "bases": [],
      "methods": [
        "get_template",
        "list_templates"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 3,
      "line_number": 392
    },
    {
      "id": "src.pokertool.modules.range_construction_tool.RangeImportExport",
      "type": "class",
      "name": "RangeImportExport",
      "module": "src.pokertool.modules.range_construction_tool",
      "docstring": "Import and export poker hand ranges in various formats.",
      "bases": [],
      "methods": [
        "__init__",
        "export_to_json",
        "import_from_json",
        "export_to_text",
        "import_from_text"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 11,
      "line_number": 426
    },
    {
      "id": "src.pokertool.modules.range_construction_tool.RangeConstructionTool",
      "type": "class",
      "name": "RangeConstructionTool",
      "module": "src.pokertool.modules.range_construction_tool",
      "docstring": "Main range construction tool.",
      "bases": [],
      "methods": [
        "__init__",
        "create_range",
        "load_template",
        "set_current_range",
        "add_hand_to_current",
        "remove_hand_from_current",
        "compare_ranges",
        "export_range",
        "import_range",
        "get_range",
        "list_ranges",
        "delete_range"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 29,
      "line_number": 487
    },
    {
      "id": "src.pokertool.modules.poker_screen_scraper_betfair",
      "type": "module",
      "path": "src/pokertool/modules/poker_screen_scraper_betfair.py",
      "docstring": "Enterprise-Grade Poker Screen Scraper - Betfair Edition\n========================================================\n\nAdvanced poker table detection optimized for Betfair Poker with universal fallback.\n\nKey Features:\n- 99.2% detection accuracy on Betfair Poker\n- 40-80ms detection time (63% faster than legacy)\n- Multi-strategy parallel detection\n- Universal fallback for all poker sites\n- 0.8% false positive rate (93% reduction)",
      "version": null,
      "author": null,
      "complexity": 561,
      "loc": 3918,
      "dependencies": [
        "logging",
        "functools",
        "time",
        "copy",
        "hashlib",
        "typing",
        "dataclasses",
        "collections",
        "re",
        "enum",
        "concurrent",
        "numpy"
      ]
    },
    {
      "id": "src.pokertool.modules.poker_screen_scraper_betfair.PokerSite",
      "type": "class",
      "name": "PokerSite",
      "module": "src.pokertool.modules.poker_screen_scraper_betfair",
      "docstring": "Supported poker sites.",
      "bases": [
        "Enum"
      ],
      "methods": [],
      "decorators": [],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 94
    },
    {
      "id": "src.pokertool.modules.poker_screen_scraper_betfair.TableRegion",
      "type": "class",
      "name": "TableRegion",
      "module": "src.pokertool.modules.poker_screen_scraper_betfair",
      "docstring": "Defines a rectangular region on the poker table.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 104
    },
    {
      "id": "src.pokertool.modules.poker_screen_scraper_betfair.SeatInfo",
      "type": "class",
      "name": "SeatInfo",
      "module": "src.pokertool.modules.poker_screen_scraper_betfair",
      "docstring": "Information about a seat at the poker table.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 114
    },
    {
      "id": "src.pokertool.modules.poker_screen_scraper_betfair.TableState",
      "type": "class",
      "name": "TableState",
      "module": "src.pokertool.modules.poker_screen_scraper_betfair",
      "docstring": "Complete state of a poker table.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 135
    },
    {
      "id": "src.pokertool.modules.poker_screen_scraper_betfair.DetectionResult",
      "type": "class",
      "name": "DetectionResult",
      "module": "src.pokertool.modules.poker_screen_scraper_betfair",
      "docstring": "Result from a detection attempt.",
      "bases": [],
      "methods": [],
      "decorators": [
        "dataclass"
      ],
      "is_abstract": false,
      "complexity": 0,
      "line_number": 173
    },
    {
      "id": "src.pokertool.modules.poker_screen_scraper_betfair.Card",
      "type": "class",
      "name": "Card",
      "module": "src.pokertool.modules.poker_screen_scraper_betfair",
      "docstring": "Placeholder for card representation.",
      "bases": [],
      "methods": [
        "__init__",
        "__str__",
        "__repr__"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 5,
      "line_number": 182
    },
    {
      "id": "src.pokertool.modules.poker_screen_scraper_betfair.BetfairPokerDetector",
      "type": "class",
      "name": "BetfairPokerDetector",
      "module": "src.pokertool.modules.poker_screen_scraper_betfair",
      "docstring": "Specialized detector for Betfair Poker.",
      "bases": [],
      "methods": [
        "__init__",
        "detect",
        "_update_calibration",
        "_generate_calibrated_ranges",
        "get_detection_stats",
        "_select_optimal_scales",
        "_detect_at_scale",
        "detect_multi_scale",
        "_check_temporal_consistency",
        "detect_with_temporal_consistency",
        "record_detection_feedback",
        "_tune_detection_threshold",
        "get_adaptive_threshold_stats",
        "_cluster_circular_elements"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 93,
      "line_number": 247
    },
    {
      "id": "src.pokertool.modules.poker_screen_scraper_betfair.UniversalPokerDetector",
      "type": "class",
      "name": "UniversalPokerDetector",
      "module": "src.pokertool.modules.poker_screen_scraper_betfair",
      "docstring": "Universal poker table detector that works on any poker site.",
      "bases": [],
      "methods": [
        "__init__",
        "detect"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 15,
      "line_number": 1135
    },
    {
      "id": "src.pokertool.modules.poker_screen_scraper_betfair.PokerScreenScraper",
      "type": "class",
      "name": "PokerScreenScraper",
      "module": "src.pokertool.modules.poker_screen_scraper_betfair",
      "docstring": "Advanced poker screen scraper with multi-strategy detection.\n\nOptimized for Betfair Poker with universal fallback support.",
      "bases": [],
      "methods": [
        "__init__",
        "detect_poker_table",
        "capture_table",
        "connect_to_chrome",
        "analyze_table",
        "_validate_numeric_value",
        "_extract_pot_size",
        "_extract_hero_cards",
        "_extract_board_cards",
        "_extract_seat_info",
        "_extract_cards_in_region",
        "_detect_game_stage",
        "_extract_blinds",
        "calibrate",
        "get_performance_stats",
        "save_debug_image",
        "_convert_cdp_to_table_state",
        "_select_optimal_strategies",
        "_record_strategy_result",
        "_validate_with_ensemble",
        "_analyze_character_confidence",
        "_validate_poker_domain",
        "_levenshtein_distance",
        "_fuzzy_match_player_name",
        "_preprocess_image",
        "_compute_image_hash",
        "_get_cached_result",
        "_cache_result",
        "_find_contours_optimized",
        "_compute_image_difference",
        "get_cache_stats",
        "get_learning_report",
        "print_learning_report",
        "record_user_feedback",
        "save_learning_data",
        "shutdown"
      ],
      "decorators": [],
      "is_abstract": false,
      "complexity": 441,
      "line_number": 1233
    },
    {
      "id": "src.pokertool.modules.poker_screen_scraper_betfair.create_scraper",
      "type": "function",
      "name": "create_scraper",
      "module": "src.pokertool.modules.poker_screen_scraper_betfair",
      "signature": "def create_scraper(site: str) -> PokerScreenScraper",
      "docstring": "Create a poker screen scraper optimized for the specified site.\n\nArgs:\n    site: Site name (default: 'BETFAIR')\n\nReturns:\n    Configured PokerScreenScraper instance",
      "parameters": [
        {
          "name": "site",
          "annotation": "str",
          "default": "'BETFAIR'",
          "kind": "POSITIONAL_OR_KEYWORD"
        }
      ],
      "return_type": "PokerScreenScraper",
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 3,
      "calls": [
        "site.upper",
        "PokerScreenScraper",
        "logger.info"
      ],
      "raises": [],
      "line_number": 3829
    },
    {
      "id": "src.pokertool.modules.poker_screen_scraper_betfair.test_scraper_betfair",
      "type": "function",
      "name": "test_scraper_betfair",
      "module": "src.pokertool.modules.poker_screen_scraper_betfair",
      "signature": "def test_scraper_betfair()",
      "docstring": "Test scraper functionality on current screen.",
      "parameters": [],
      "return_type": null,
      "decorators": [],
      "is_async": false,
      "is_generator": false,
      "is_method": false,
      "complexity": 4,
      "calls": [
        "print",
        "print",
        "print",
        "print",
        "create_scraper",
        "print",
        "scraper.capture_table",
        "print",
        "print",
        "print",
        "scraper.detect_poker_table",
        "print",
        "print",
        "print",
        "print",
        "details.get",
        "print",
        "details.get",
        "print",
        "details.get",
        "print",
        "scraper.analyze_table",
        "print",
        "print",
        "print",
        "print"
      ],
      "raises": [],
      "line_number": 3853
    }
  ],
  "edges": [
    {
      "source": "src.pokertool.roi_tracking_system",
      "target": "src.pokertool.roi_tracking_system.ROI",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.roi_tracking_system",
      "target": "src.pokertool.roi_tracking_system.ROIState",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.roi_tracking_system",
      "target": "src.pokertool.roi_tracking_system.ROITrackingMetrics",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.roi_tracking_system",
      "target": "src.pokertool.roi_tracking_system.ROITrackingSystem",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.roi_tracking_system",
      "target": "src.pokertool.roi_tracking_system.get_roi_tracker",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.roi_tracking_system",
      "target": "src.pokertool.roi_tracking_system.reset_roi_tracker",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.performance_telemetry",
      "target": "src.pokertool.performance_telemetry.TelemetryEntry",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.performance_telemetry",
      "target": "src.pokertool.performance_telemetry.PerformanceTelemetry",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.performance_telemetry",
      "target": "src.pokertool.performance_telemetry.timed",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.performance_telemetry",
      "target": "src.pokertool.performance_telemetry.telemetry_section",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.performance_telemetry",
      "target": "src.pokertool.performance_telemetry.telemetry_instant",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.performance_telemetry",
      "target": "src.pokertool.performance_telemetry.init_telemetry",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.performance_telemetry",
      "target": "src.pokertool.performance_telemetry.get_telemetry",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.performance_telemetry",
      "target": "src.pokertool.performance_telemetry.shutdown_telemetry",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.performance_telemetry.timed",
      "target": "src.pokertool.performance_telemetry.get_telemetry",
      "type": "calls"
    },
    {
      "source": "src.pokertool.performance_telemetry.telemetry_section",
      "target": "src.pokertool.performance_telemetry.get_telemetry",
      "type": "calls"
    },
    {
      "source": "src.pokertool.performance_telemetry.telemetry_instant",
      "target": "src.pokertool.performance_telemetry.get_telemetry",
      "type": "calls"
    },
    {
      "source": "src.pokertool.card_recognizer",
      "target": "src.pokertool.card_recognizer.Card",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.card_recognizer",
      "target": "src.pokertool.card_recognizer.CardTemplate",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.card_recognizer",
      "target": "src.pokertool.card_recognizer.RecognitionResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.card_recognizer",
      "target": "src.pokertool.card_recognizer.CardRecognitionEngine",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.bayesian_profiler",
      "target": "src.pokertool.bayesian_profiler.PlayerTendency",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.bayesian_profiler",
      "target": "src.pokertool.bayesian_profiler.PlayerStyle",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.bayesian_profiler",
      "target": "src.pokertool.bayesian_profiler.BetaDistribution",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.bayesian_profiler",
      "target": "src.pokertool.bayesian_profiler.GaussianDistribution",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.bayesian_profiler",
      "target": "src.pokertool.bayesian_profiler.PlayerProfile",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.bayesian_profiler",
      "target": "src.pokertool.bayesian_profiler.BeliefUpdater",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.bayesian_profiler",
      "target": "src.pokertool.bayesian_profiler.ActionPredictor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.bayesian_profiler",
      "target": "src.pokertool.bayesian_profiler.BayesianOpponentProfiler",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker.HealthStatus",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker.HealthCheck",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker.SystemHealthChecker",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker._join_url",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker._http_get_status",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker.get_health_checker",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker.check_api_server_health",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker.check_database_health",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker.check_ocr_engine_health",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker.check_screen_capture_health",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker.check_model_calibration_health",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker.check_frontend_health",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker.check_poker_table_detection_health",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker.check_gto_solver_health",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker.check_opponent_modeling_health",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker.check_sequential_opponent_fusion_health",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker.check_active_learning_health",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker.check_neural_evaluator_health",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker.check_hand_range_analyzer_health",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker.check_scraping_accuracy_health",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker.check_roi_tracking_health",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker.check_tournament_support_health",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker.check_multi_table_support_health",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker.check_hand_history_database_health",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker.check_websocket_server_health",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker.check_region_extraction_health",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.system_health_checker",
      "target": "src.pokertool.system_health_checker.register_all_health_checks",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.system_health_checker.check_api_server_health",
      "target": "src.pokertool.system_health_checker._http_get_status",
      "type": "calls"
    },
    {
      "source": "src.pokertool.system_health_checker.check_frontend_health",
      "target": "src.pokertool.system_health_checker._http_get_status",
      "type": "calls"
    },
    {
      "source": "src.pokertool.system_health_checker.check_websocket_server_health",
      "target": "src.pokertool.system_health_checker._http_get_status",
      "type": "calls"
    },
    {
      "source": "src.pokertool.ml_opponent_modeling",
      "target": "src.pokertool.ml_opponent_modeling.ModelType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ml_opponent_modeling",
      "target": "src.pokertool.ml_opponent_modeling.PlayerType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ml_opponent_modeling",
      "target": "src.pokertool.ml_opponent_modeling.PlayerStats",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ml_opponent_modeling",
      "target": "src.pokertool.ml_opponent_modeling.HandHistory",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ml_opponent_modeling",
      "target": "src.pokertool.ml_opponent_modeling.ModelPrediction",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ml_opponent_modeling",
      "target": "src.pokertool.ml_opponent_modeling.FeatureEngineering",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ml_opponent_modeling",
      "target": "src.pokertool.ml_opponent_modeling.OpponentModel",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ml_opponent_modeling",
      "target": "src.pokertool.ml_opponent_modeling.RandomForestOpponentModel",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ml_opponent_modeling",
      "target": "src.pokertool.ml_opponent_modeling.NeuralNetworkOpponentModel",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ml_opponent_modeling",
      "target": "src.pokertool.ml_opponent_modeling.OpponentModelingSystem",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ml_opponent_modeling",
      "target": "src.pokertool.ml_opponent_modeling._disable_coreml_provider",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.ml_opponent_modeling",
      "target": "src.pokertool.ml_opponent_modeling.get_opponent_modeling_system",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ml_opponent_modeling",
      "target": "src.pokertool.ml_opponent_modeling.observe_opponent_hand",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ml_opponent_modeling",
      "target": "src.pokertool.ml_opponent_modeling.predict_opponent_action",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ml_opponent_modeling",
      "target": "src.pokertool.ml_opponent_modeling.get_opponent_profile",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ml_opponent_modeling",
      "target": "src.pokertool.ml_opponent_modeling.analyze_table_dynamics",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ml_opponent_modeling",
      "target": "src.pokertool.ml_opponent_modeling._generate_table_recommendations",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.ml_opponent_modeling.RandomForestOpponentModel",
      "target": "src.pokertool.ml_opponent_modeling.OpponentModel",
      "type": "extends"
    },
    {
      "source": "src.pokertool.ml_opponent_modeling.NeuralNetworkOpponentModel",
      "target": "src.pokertool.ml_opponent_modeling.OpponentModel",
      "type": "extends"
    },
    {
      "source": "src.pokertool.ml_opponent_modeling.observe_opponent_hand",
      "target": "src.pokertool.ml_opponent_modeling.get_opponent_modeling_system",
      "type": "calls"
    },
    {
      "source": "src.pokertool.ml_opponent_modeling.predict_opponent_action",
      "target": "src.pokertool.ml_opponent_modeling.get_opponent_modeling_system",
      "type": "calls"
    },
    {
      "source": "src.pokertool.ml_opponent_modeling.get_opponent_profile",
      "target": "src.pokertool.ml_opponent_modeling.get_opponent_modeling_system",
      "type": "calls"
    },
    {
      "source": "src.pokertool.ml_opponent_modeling.analyze_table_dynamics",
      "target": "src.pokertool.ml_opponent_modeling._generate_table_recommendations",
      "type": "calls"
    },
    {
      "source": "src.pokertool.global_error_handler",
      "target": "src.pokertool.global_error_handler.ErrorCategory",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.global_error_handler",
      "target": "src.pokertool.global_error_handler.ErrorSeverity",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.global_error_handler",
      "target": "src.pokertool.global_error_handler.ErrorResponse",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.global_error_handler",
      "target": "src.pokertool.global_error_handler.GlobalErrorHandler",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.global_error_handler",
      "target": "src.pokertool.global_error_handler.handle_errors",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_reliability_system",
      "target": "src.pokertool.scraping_reliability_system.RecoveryAction",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_reliability_system",
      "target": "src.pokertool.scraping_reliability_system.RecoveryStrategy",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_reliability_system",
      "target": "src.pokertool.scraping_reliability_system.AutomaticRecoveryManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_reliability_system",
      "target": "src.pokertool.scraping_reliability_system.ExtractionMethod",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_reliability_system",
      "target": "src.pokertool.scraping_reliability_system.RedundantExtractionPaths",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_reliability_system",
      "target": "src.pokertool.scraping_reliability_system.HealthMetrics",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_reliability_system",
      "target": "src.pokertool.scraping_reliability_system.HealthMonitor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_reliability_system",
      "target": "src.pokertool.scraping_reliability_system.FieldConfidence",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_reliability_system",
      "target": "src.pokertool.scraping_reliability_system.PartialState",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_reliability_system",
      "target": "src.pokertool.scraping_reliability_system.GracefulDegradation",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_reliability_system",
      "target": "src.pokertool.scraping_reliability_system.StatePersistence",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_reliability_system",
      "target": "src.pokertool.scraping_reliability_system.ErrorPattern",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_reliability_system",
      "target": "src.pokertool.scraping_reliability_system.ErrorPatternDetector",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_reliability_system",
      "target": "src.pokertool.scraping_reliability_system.WatchdogTimer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_reliability_system",
      "target": "src.pokertool.scraping_reliability_system.ResourceLeakDetector",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_reliability_system",
      "target": "src.pokertool.scraping_reliability_system.QualityMetrics",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_reliability_system",
      "target": "src.pokertool.scraping_reliability_system.AutoRecalibrator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_reliability_system",
      "target": "src.pokertool.scraping_reliability_system.ScrapingReliabilitySystem",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_reliability_system",
      "target": "src.pokertool.scraping_reliability_system.get_reliability_system",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.test_utils",
      "target": "src.pokertool.test_utils.is_test_mode",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.test_utils",
      "target": "src.pokertool.test_utils.safe_messagebox_showerror",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.test_utils",
      "target": "src.pokertool.test_utils.safe_messagebox_showwarning",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.test_utils",
      "target": "src.pokertool.test_utils.safe_messagebox_showinfo",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.desktop_independent_scraper",
      "target": "src.pokertool.desktop_independent_scraper.WindowInfo",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.desktop_independent_scraper",
      "target": "src.pokertool.desktop_independent_scraper.ScreenRegion",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.desktop_independent_scraper",
      "target": "src.pokertool.desktop_independent_scraper.PokerDetectionMode",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.desktop_independent_scraper",
      "target": "src.pokertool.desktop_independent_scraper.DesktopIndependentScraper",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.desktop_independent_scraper",
      "target": "src.pokertool.desktop_independent_scraper.create_desktop_scraper",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.desktop_independent_scraper",
      "target": "src.pokertool.desktop_independent_scraper.quick_poker_scan",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.desktop_independent_scraper",
      "target": "src.pokertool.desktop_independent_scraper.test_desktop_independence",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.desktop_independent_scraper.quick_poker_scan",
      "target": "src.pokertool.desktop_independent_scraper.create_desktop_scraper",
      "type": "calls"
    },
    {
      "source": "src.pokertool.desktop_independent_scraper.test_desktop_independence",
      "target": "src.pokertool.desktop_independent_scraper.create_desktop_scraper",
      "type": "calls"
    },
    {
      "source": "src.pokertool.cfr_plus",
      "target": "src.pokertool.cfr_plus.CFRPlusSolution",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.cfr_plus",
      "target": "src.pokertool.cfr_plus.CFRPlusSolver",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.cfr_plus",
      "target": "src.pokertool.cfr_plus._normalise",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.cfr_plus",
      "target": "src.pokertool.cfr_plus._dot",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.cfr_plus",
      "target": "src.pokertool.cfr_plus._matrix_vector_product",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.cfr_plus",
      "target": "src.pokertool.cfr_plus._transposed_matrix_vector_product",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.analytics_dashboard",
      "target": "src.pokertool.analytics_dashboard.UsageEvent",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.analytics_dashboard",
      "target": "src.pokertool.analytics_dashboard.PrivacySettings",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.analytics_dashboard",
      "target": "src.pokertool.analytics_dashboard.DashboardMetrics",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.analytics_dashboard",
      "target": "src.pokertool.analytics_dashboard.AnalyticsDashboard",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.thread_manager",
      "target": "src.pokertool.thread_manager.ThreadManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.thread_manager",
      "target": "src.pokertool.thread_manager.get_thread_manager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.thread_manager",
      "target": "src.pokertool.thread_manager.submit_task",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.thread_manager",
      "target": "src.pokertool.thread_manager.start_thread",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.thread_manager.submit_task",
      "target": "src.pokertool.thread_manager.submit_task",
      "type": "calls"
    },
    {
      "source": "src.pokertool.thread_manager.submit_task",
      "target": "src.pokertool.thread_manager.get_thread_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.thread_manager.start_thread",
      "target": "src.pokertool.thread_manager.start_thread",
      "type": "calls"
    },
    {
      "source": "src.pokertool.thread_manager.start_thread",
      "target": "src.pokertool.thread_manager.get_thread_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.sequential_opponent_fusion",
      "target": "src.pokertool.sequential_opponent_fusion.ActionType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.sequential_opponent_fusion",
      "target": "src.pokertool.sequential_opponent_fusion.Street",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.sequential_opponent_fusion",
      "target": "src.pokertool.sequential_opponent_fusion.PlayerAction",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.sequential_opponent_fusion",
      "target": "src.pokertool.sequential_opponent_fusion.HandSequence",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.sequential_opponent_fusion",
      "target": "src.pokertool.sequential_opponent_fusion.SequenceFeatures",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.sequential_opponent_fusion",
      "target": "src.pokertool.sequential_opponent_fusion.SimpleTransformer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.sequential_opponent_fusion",
      "target": "src.pokertool.sequential_opponent_fusion.SequentialOpponentFusion",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.sequential_opponent_fusion",
      "target": "src.pokertool.sequential_opponent_fusion.get_fusion_system",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.tournament_tracker",
      "target": "src.pokertool.tournament_tracker.TournamentStructure",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.tournament_tracker",
      "target": "src.pokertool.tournament_tracker.TournamentEvent",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.tournament_tracker",
      "target": "src.pokertool.tournament_tracker.TournamentResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.tournament_tracker",
      "target": "src.pokertool.tournament_tracker.SatelliteLink",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.tournament_tracker",
      "target": "src.pokertool.tournament_tracker.TournamentAlert",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.tournament_tracker",
      "target": "src.pokertool.tournament_tracker.TournamentTracker",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.version",
      "target": "src.pokertool.version._read_version",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.version",
      "target": "src.pokertool.version.get_version",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.version",
      "target": "src.pokertool.version.get_version_info",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.version",
      "target": "src.pokertool.version.get_release_history",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.version",
      "target": "src.pokertool.version.get_version_tuple",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.version",
      "target": "src.pokertool.version.is_compatible",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.version",
      "target": "src.pokertool.version.format_version",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.version",
      "target": "src.pokertool.version.print_version_info",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.version.print_version_info",
      "target": "src.pokertool.version.get_version_info",
      "type": "calls"
    },
    {
      "source": "src.pokertool.version.print_version_info",
      "target": "src.pokertool.version.format_version",
      "type": "calls"
    },
    {
      "source": "src.pokertool.version.print_version_info",
      "target": "src.pokertool.version.get_release_history",
      "type": "calls"
    },
    {
      "source": "src.pokertool.scraping_master_system",
      "target": "src.pokertool.scraping_master_system.MasterSystemMetrics",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_master_system",
      "target": "src.pokertool.scraping_master_system.ScrapingMasterSystem",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_master_system",
      "target": "src.pokertool.scraping_master_system.get_master_system",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_master_system",
      "target": "src.pokertool.scraping_master_system.process_poker_frame",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_master_system",
      "target": "src.pokertool.scraping_master_system.get_system_status",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_master_system.process_poker_frame",
      "target": "src.pokertool.scraping_master_system.get_master_system",
      "type": "calls"
    },
    {
      "source": "src.pokertool.scraping_master_system.get_system_status",
      "target": "src.pokertool.scraping_master_system.get_master_system",
      "type": "calls"
    },
    {
      "source": "src.pokertool.scraping_accuracy_system",
      "target": "src.pokertool.scraping_accuracy_system.TemporalConsensus",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_accuracy_system",
      "target": "src.pokertool.scraping_accuracy_system.PotValidator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_accuracy_system",
      "target": "src.pokertool.scraping_accuracy_system.SpatialValidator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_accuracy_system",
      "target": "src.pokertool.scraping_accuracy_system.PlayerAction",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_accuracy_system",
      "target": "src.pokertool.scraping_accuracy_system.PlayerStateMachine",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_accuracy_system",
      "target": "src.pokertool.scraping_accuracy_system.CardSuitValidator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_accuracy_system",
      "target": "src.pokertool.scraping_accuracy_system.BlindsChecker",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_accuracy_system",
      "target": "src.pokertool.scraping_accuracy_system.StackTracker",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_accuracy_system",
      "target": "src.pokertool.scraping_accuracy_system.OCRPostProcessor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_accuracy_system",
      "target": "src.pokertool.scraping_accuracy_system.ExtractionStrategy",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_accuracy_system",
      "target": "src.pokertool.scraping_accuracy_system.MultiStrategyFusion",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_accuracy_system",
      "target": "src.pokertool.scraping_accuracy_system.AccuracyMetrics",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_accuracy_system",
      "target": "src.pokertool.scraping_accuracy_system.ScrapingAccuracySystem",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_accuracy_system",
      "target": "src.pokertool.scraping_accuracy_system.get_accuracy_system",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.timing_analyzer",
      "target": "src.pokertool.timing_analyzer.TimingData",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.timing_analyzer",
      "target": "src.pokertool.timing_analyzer.TimingPattern",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.timing_analyzer",
      "target": "src.pokertool.timing_analyzer.MicrosecondPrecisionTracker",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.timing_analyzer",
      "target": "src.pokertool.timing_analyzer.ActionSequenceTimer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.timing_analyzer",
      "target": "src.pokertool.timing_analyzer.TimingDeviationDetector",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.timing_analyzer",
      "target": "src.pokertool.timing_analyzer.PatternClusterer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.timing_analyzer",
      "target": "src.pokertool.timing_analyzer.ConfidenceIntervalCalculator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.timing_analyzer",
      "target": "src.pokertool.timing_analyzer.TimingTellAnalyzer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.timing_analyzer",
      "target": "src.pokertool.timing_analyzer.analyze_timing_patterns",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.timing_analyzer",
      "target": "src.pokertool.timing_analyzer.detect_timing_tell",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.database_optimization",
      "target": "src.pokertool.database_optimization.CachedResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.database_optimization",
      "target": "src.pokertool.database_optimization.QueryRecord",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.database_optimization",
      "target": "src.pokertool.database_optimization.QueryCache",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.database_optimization",
      "target": "src.pokertool.database_optimization.QueryMonitor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.database_optimization",
      "target": "src.pokertool.database_optimization.IndexAdvisor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.database_optimization",
      "target": "src.pokertool.database_optimization.ArchiveManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.database_optimization",
      "target": "src.pokertool.database_optimization.DatabaseOptimizationManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.bankroll_management",
      "target": "src.pokertool.bankroll_management.GameType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.bankroll_management",
      "target": "src.pokertool.bankroll_management.StakeLevel",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.bankroll_management",
      "target": "src.pokertool.bankroll_management.BankrollTransaction",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.bankroll_management",
      "target": "src.pokertool.bankroll_management.BankrollSnapshot",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.bankroll_management",
      "target": "src.pokertool.bankroll_management.KellyCriterion",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.bankroll_management",
      "target": "src.pokertool.bankroll_management.VarianceCalculator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.bankroll_management",
      "target": "src.pokertool.bankroll_management.BankrollAlert",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.bankroll_management",
      "target": "src.pokertool.bankroll_management.BankrollManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.bankroll_management",
      "target": "src.pokertool.bankroll_management.get_bankroll_manager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.bankroll_management",
      "target": "src.pokertool.bankroll_management.add_session_result",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.bankroll_management",
      "target": "src.pokertool.bankroll_management.get_bankroll_summary",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.bankroll_management",
      "target": "src.pokertool.bankroll_management.get_stake_recommendation",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.bankroll_management.add_session_result",
      "target": "src.pokertool.bankroll_management.get_bankroll_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.bankroll_management.get_bankroll_summary",
      "target": "src.pokertool.bankroll_management.get_bankroll_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.bankroll_management.get_stake_recommendation",
      "target": "src.pokertool.bankroll_management.get_bankroll_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.dependency_manager",
      "target": "src.pokertool.dependency_manager.DependencyInfo",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.dependency_manager",
      "target": "src.pokertool.dependency_manager.SystemReport",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.dependency_manager",
      "target": "src.pokertool.dependency_manager.DependencyManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.dependency_manager",
      "target": "src.pokertool.dependency_manager.get_dependency_manager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.dependency_manager",
      "target": "src.pokertool.dependency_manager.validate_system",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.dependency_manager",
      "target": "src.pokertool.dependency_manager.is_system_ready",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.dependency_manager.validate_system",
      "target": "src.pokertool.dependency_manager.get_dependency_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.dependency_manager.is_system_ready",
      "target": "src.pokertool.dependency_manager.get_dependency_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.hud_profiles",
      "target": "src.pokertool.hud_profiles.list_hud_profiles",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hud_profiles",
      "target": "src.pokertool.hud_profiles.load_hud_profile",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hud_profiles",
      "target": "src.pokertool.hud_profiles.save_hud_profile",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.compliance",
      "target": "src.pokertool.compliance.ConsentType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.compliance",
      "target": "src.pokertool.compliance.DataCategory",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.compliance",
      "target": "src.pokertool.compliance.UserConsent",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.compliance",
      "target": "src.pokertool.compliance.DataRetentionPolicy",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.compliance",
      "target": "src.pokertool.compliance.ComplianceViolation",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.compliance",
      "target": "src.pokertool.compliance.PokerSiteCompliance",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.compliance",
      "target": "src.pokertool.compliance.GDPRCompliance",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.compliance",
      "target": "src.pokertool.compliance.ComplianceManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.compliance",
      "target": "src.pokertool.compliance.get_compliance_manager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.compliance",
      "target": "src.pokertool.compliance.check_feature_compliance",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.compliance",
      "target": "src.pokertool.compliance.record_user_consent",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.compliance",
      "target": "src.pokertool.compliance.get_user_privacy_report",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.compliance",
      "target": "src.pokertool.compliance.is_site_compliant",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.compliance.check_feature_compliance",
      "target": "src.pokertool.compliance.get_compliance_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.compliance.record_user_consent",
      "target": "src.pokertool.compliance.get_compliance_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.compliance.get_user_privacy_report",
      "target": "src.pokertool.compliance.get_compliance_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.compliance.is_site_compliant",
      "target": "src.pokertool.compliance.get_compliance_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.icm_calculator",
      "target": "src.pokertool.icm_calculator.TournamentState",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.icm_calculator",
      "target": "src.pokertool.icm_calculator.ICMResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.icm_calculator",
      "target": "src.pokertool.icm_calculator.ICMDecision",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.icm_calculator",
      "target": "src.pokertool.icm_calculator.MalmuthHarvilleCalculator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.icm_calculator",
      "target": "src.pokertool.icm_calculator.ICMCalculator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.coaching_system",
      "target": "src.pokertool.coaching_system.DetectedMistake",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.coaching_system",
      "target": "src.pokertool.coaching_system.RealTimeAdvice",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.coaching_system",
      "target": "src.pokertool.coaching_system.TrainingScenario",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.coaching_system",
      "target": "src.pokertool.coaching_system.CoachingProgress",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.coaching_system",
      "target": "src.pokertool.coaching_system.CoachingFeedback",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.coaching_system",
      "target": "src.pokertool.coaching_system.CoachingSystem",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_speed_optimizer",
      "target": "src.pokertool.scraping_speed_optimizer.ParallelExtractor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_speed_optimizer",
      "target": "src.pokertool.scraping_speed_optimizer.AdaptiveSamplingRate",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_speed_optimizer",
      "target": "src.pokertool.scraping_speed_optimizer.IncrementalUpdater",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_speed_optimizer",
      "target": "src.pokertool.scraping_speed_optimizer.OCREnginePriority",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_speed_optimizer",
      "target": "src.pokertool.scraping_speed_optimizer.CascadingOCR",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_speed_optimizer",
      "target": "src.pokertool.scraping_speed_optimizer.ExtractionPriority",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_speed_optimizer",
      "target": "src.pokertool.scraping_speed_optimizer.LazyExtractor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_speed_optimizer",
      "target": "src.pokertool.scraping_speed_optimizer.SpeedOptimizationMetrics",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_speed_optimizer",
      "target": "src.pokertool.scraping_speed_optimizer.ScrapingSpeedOptimizer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scraping_speed_optimizer",
      "target": "src.pokertool.scraping_speed_optimizer.get_speed_optimizer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.retry_util",
      "target": "src.pokertool.retry_util.RetryError",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.retry_util",
      "target": "src.pokertool.retry_util.RetryStrategy",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.retry_util",
      "target": "src.pokertool.retry_util.exponential_backoff",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.retry_util",
      "target": "src.pokertool.retry_util.retry_with_backoff",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.retry_util",
      "target": "src.pokertool.retry_util.retry_api_call",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.retry_util",
      "target": "src.pokertool.retry_util.retry_database_operation",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.retry_util",
      "target": "src.pokertool.retry_util.retry_network_request",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.retry_util",
      "target": "src.pokertool.retry_util.retry_ml_prediction",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.retry_util.retry_with_backoff",
      "target": "src.pokertool.retry_util.exponential_backoff",
      "type": "calls"
    },
    {
      "source": "src.pokertool.neural_evaluator",
      "target": "src.pokertool.neural_evaluator.HandState",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.neural_evaluator",
      "target": "src.pokertool.neural_evaluator.TrainingSample",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.neural_evaluator",
      "target": "src.pokertool.neural_evaluator.HandEvaluation",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.neural_evaluator",
      "target": "src.pokertool.neural_evaluator.NeuralHandStrengthEvaluator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.neural_evaluator",
      "target": "src.pokertool.neural_evaluator.CNNModelConfig",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.neural_evaluator",
      "target": "src.pokertool.neural_evaluator.TrainingProgress",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.neural_evaluator",
      "target": "src.pokertool.neural_evaluator.CNNHandStrengthModel",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.neural_evaluator",
      "target": "src.pokertool.neural_evaluator.RealTimeInferenceEngine",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.status_window",
      "target": "src.pokertool.status_window.StatusWindow",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.status_window",
      "target": "src.pokertool.status_window.main",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hud_designer",
      "target": "src.pokertool.hud_designer.HUDDesigner",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.quantum_optimizer",
      "target": "src.pokertool.quantum_optimizer.OptimizationType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.quantum_optimizer",
      "target": "src.pokertool.quantum_optimizer.QuantumState",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.quantum_optimizer",
      "target": "src.pokertool.quantum_optimizer.OptimizationResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.quantum_optimizer",
      "target": "src.pokertool.quantum_optimizer.QuantumAnnealingSimulator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.quantum_optimizer",
      "target": "src.pokertool.quantum_optimizer.SuperpositionStateExplorer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.quantum_optimizer",
      "target": "src.pokertool.quantum_optimizer.EntanglementCorrelationAnalyzer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.quantum_optimizer",
      "target": "src.pokertool.quantum_optimizer.QuantumInspiredOptimizer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.quantum_optimizer",
      "target": "src.pokertool.quantum_optimizer.quick_optimize_range",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.quantum_optimizer",
      "target": "src.pokertool.quantum_optimizer.find_optimal_action",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scrape_fix",
      "target": "src.pokertool.scrape_fix.diagnose_chrome_capture",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scrape_fix",
      "target": "src.pokertool.scrape_fix.fix_scraper_initialization",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scrape_fix",
      "target": "src.pokertool.scrape_fix.test_screen_capture",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scrape_fix",
      "target": "src.pokertool.scrape_fix.main",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scrape_fix.main",
      "target": "src.pokertool.scrape_fix.diagnose_chrome_capture",
      "type": "calls"
    },
    {
      "source": "src.pokertool.scrape_fix.main",
      "target": "src.pokertool.scrape_fix.test_screen_capture",
      "type": "calls"
    },
    {
      "source": "src.pokertool.scrape_fix.main",
      "target": "src.pokertool.scrape_fix.fix_scraper_initialization",
      "type": "calls"
    },
    {
      "source": "src.pokertool.watchdog_timer",
      "target": "src.pokertool.watchdog_timer.WatchdogAction",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.watchdog_timer",
      "target": "src.pokertool.watchdog_timer.OperationInfo",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.watchdog_timer",
      "target": "src.pokertool.watchdog_timer.WatchdogTimeoutError",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.watchdog_timer",
      "target": "src.pokertool.watchdog_timer.WatchdogTimer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.watchdog_timer",
      "target": "src.pokertool.watchdog_timer.get_watchdog",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.watchdog_timer",
      "target": "src.pokertool.watchdog_timer.watch",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.watchdog_timer",
      "target": "src.pokertool.watchdog_timer.monitor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.watchdog_timer.watch",
      "target": "src.pokertool.watchdog_timer.watch",
      "type": "calls"
    },
    {
      "source": "src.pokertool.watchdog_timer.watch",
      "target": "src.pokertool.watchdog_timer.get_watchdog",
      "type": "calls"
    },
    {
      "source": "src.pokertool.watchdog_timer.monitor",
      "target": "src.pokertool.watchdog_timer.monitor",
      "type": "calls"
    },
    {
      "source": "src.pokertool.watchdog_timer.monitor",
      "target": "src.pokertool.watchdog_timer.get_watchdog",
      "type": "calls"
    },
    {
      "source": "src.pokertool.hand_recorder",
      "target": "src.pokertool.hand_recorder.HandRecorderState",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hand_recorder",
      "target": "src.pokertool.hand_recorder.HandSnapshot",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hand_recorder",
      "target": "src.pokertool.hand_recorder.HandRecorder",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hand_recorder",
      "target": "src.pokertool.hand_recorder.get_hand_recorder",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hand_recorder",
      "target": "src.pokertool.hand_recorder.enable_hand_recording",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hand_recorder.enable_hand_recording",
      "target": "src.pokertool.hand_recorder.get_hand_recorder",
      "type": "calls"
    },
    {
      "source": "src.pokertool.active_learning",
      "target": "src.pokertool.active_learning.ActionType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.active_learning",
      "target": "src.pokertool.active_learning.StreetType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.active_learning",
      "target": "src.pokertool.active_learning.FeedbackStatus",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.active_learning",
      "target": "src.pokertool.active_learning.UncertaintyLevel",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.active_learning",
      "target": "src.pokertool.active_learning.GameState",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.active_learning",
      "target": "src.pokertool.active_learning.Prediction",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.active_learning",
      "target": "src.pokertool.active_learning.ExpertFeedback",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.active_learning",
      "target": "src.pokertool.active_learning.FeedbackEvent",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.active_learning",
      "target": "src.pokertool.active_learning.UncertaintyTriage",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.active_learning",
      "target": "src.pokertool.active_learning.FeedbackStorage",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.active_learning",
      "target": "src.pokertool.active_learning.RetrainingScheduler",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.active_learning",
      "target": "src.pokertool.active_learning.ActiveLearningFeedbackLoop",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.active_learning",
      "target": "src.pokertool.active_learning.get_active_learning",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.community_features",
      "target": "src.pokertool.community_features.ForumPost",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.community_features",
      "target": "src.pokertool.community_features.Challenge",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.community_features",
      "target": "src.pokertool.community_features.MentorshipPair",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.community_features",
      "target": "src.pokertool.community_features.CommunityTournament",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.community_features",
      "target": "src.pokertool.community_features.KnowledgeArticle",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.community_features",
      "target": "src.pokertool.community_features.CommunityPlatform",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scrape_qa_harness",
      "target": "src.pokertool.scrape_qa_harness.FieldType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scrape_qa_harness",
      "target": "src.pokertool.scrape_qa_harness.ThemeType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scrape_qa_harness",
      "target": "src.pokertool.scrape_qa_harness.GroundTruth",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scrape_qa_harness",
      "target": "src.pokertool.scrape_qa_harness.QaTestCase",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scrape_qa_harness",
      "target": "src.pokertool.scrape_qa_harness.FieldDiff",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scrape_qa_harness",
      "target": "src.pokertool.scrape_qa_harness.QaTestResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scrape_qa_harness",
      "target": "src.pokertool.scrape_qa_harness.SuiteReport",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scrape_qa_harness",
      "target": "src.pokertool.scrape_qa_harness.ScrapeQAHarness",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scrape_qa_harness",
      "target": "src.pokertool.scrape_qa_harness.create_test_case_from_screenshot",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scrape_qa_harness",
      "target": "src.pokertool.scrape_qa_harness.save_test_case",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.database",
      "target": "src.pokertool.database.DatabaseType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.database",
      "target": "src.pokertool.database.DatabaseConfig",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.database",
      "target": "src.pokertool.database.ProductionDatabase",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.database",
      "target": "src.pokertool.database.get_production_db",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.database",
      "target": "src.pokertool.database.migrate_to_production",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_solver",
      "target": "src.pokertool.gto_solver.Action",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_solver",
      "target": "src.pokertool.gto_solver.Street",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_solver",
      "target": "src.pokertool.gto_solver.Range",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_solver",
      "target": "src.pokertool.gto_solver.GameState",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_solver",
      "target": "src.pokertool.gto_solver.Strategy",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_solver",
      "target": "src.pokertool.gto_solver.GTOSolution",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_solver",
      "target": "src.pokertool.gto_solver.LRUCache",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_solver",
      "target": "src.pokertool.gto_solver.EquityCalculator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_solver",
      "target": "src.pokertool.gto_solver.GTOSolver",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_solver",
      "target": "src.pokertool.gto_solver.GTOTrainer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_solver",
      "target": "src.pokertool.gto_solver.DeviationExplorer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_solver",
      "target": "src.pokertool.gto_solver.get_gto_solver",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_solver",
      "target": "src.pokertool.gto_solver.solve_spot",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_solver",
      "target": "src.pokertool.gto_solver.create_standard_ranges",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_solver",
      "target": "src.pokertool.gto_solver.parse_range_string",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_solver",
      "target": "src.pokertool.gto_solver.calculate_range_equity",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_solver",
      "target": "src.pokertool.gto_solver.analyze_gto_spot",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_solver",
      "target": "src.pokertool.gto_solver._generate_recommendations",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.gto_solver",
      "target": "src.pokertool.gto_solver.create_training_session",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_solver",
      "target": "src.pokertool.gto_solver.export_solution",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_solver.solve_spot",
      "target": "src.pokertool.gto_solver.get_gto_solver",
      "type": "calls"
    },
    {
      "source": "src.pokertool.gto_solver.analyze_gto_spot",
      "target": "src.pokertool.gto_solver.create_standard_ranges",
      "type": "calls"
    },
    {
      "source": "src.pokertool.gto_solver.analyze_gto_spot",
      "target": "src.pokertool.gto_solver.get_gto_solver",
      "type": "calls"
    },
    {
      "source": "src.pokertool.gto_solver.analyze_gto_spot",
      "target": "src.pokertool.gto_solver._generate_recommendations",
      "type": "calls"
    },
    {
      "source": "src.pokertool.smart_poker_detector",
      "target": "src.pokertool.smart_poker_detector.WindowPriority",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.smart_poker_detector",
      "target": "src.pokertool.smart_poker_detector.SmartPokerDetector",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.smart_poker_detector",
      "target": "src.pokertool.smart_poker_detector.create_smart_detector",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.automation",
      "target": "src.pokertool.automation._hash_file",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.automation",
      "target": "src.pokertool.automation._get_git_head",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.automation",
      "target": "src.pokertool.automation._missing_modules",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.automation",
      "target": "src.pokertool.automation.ensure_ml_tests_run",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.automation.ensure_ml_tests_run",
      "target": "src.pokertool.automation._missing_modules",
      "type": "calls"
    },
    {
      "source": "src.pokertool.automation.ensure_ml_tests_run",
      "target": "src.pokertool.automation._hash_file",
      "type": "calls"
    },
    {
      "source": "src.pokertool.automation.ensure_ml_tests_run",
      "target": "src.pokertool.automation._get_git_head",
      "type": "calls"
    },
    {
      "source": "src.pokertool.game_selection",
      "target": "src.pokertool.game_selection.GameType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.game_selection",
      "target": "src.pokertool.game_selection.TablePosition",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.game_selection",
      "target": "src.pokertool.game_selection.PlayerProfile",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.game_selection",
      "target": "src.pokertool.game_selection.TableInfo",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.game_selection",
      "target": "src.pokertool.game_selection.GameRating",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.game_selection",
      "target": "src.pokertool.game_selection.TableScanner",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.game_selection",
      "target": "src.pokertool.game_selection.ProfitabilityCalculator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.game_selection",
      "target": "src.pokertool.game_selection.PlayerPoolAnalyzer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.game_selection",
      "target": "src.pokertool.game_selection.SeatSelector",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.game_selection",
      "target": "src.pokertool.game_selection.GameSelectionEngine",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.game_selection",
      "target": "src.pokertool.game_selection.analyze_single_table",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.game_selection",
      "target": "src.pokertool.game_selection.find_best_tables",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.game_selection",
      "target": "src.pokertool.game_selection.create_sample_player",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ensemble_decision",
      "target": "src.pokertool.ensemble_decision.DecisionType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ensemble_decision",
      "target": "src.pokertool.ensemble_decision.EngineDecision",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ensemble_decision",
      "target": "src.pokertool.ensemble_decision.EnsembleDecision",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ensemble_decision",
      "target": "src.pokertool.ensemble_decision.WeightOptimizer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ensemble_decision",
      "target": "src.pokertool.ensemble_decision.DisagreementResolver",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ensemble_decision",
      "target": "src.pokertool.ensemble_decision.PerformanceTracker",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ensemble_decision",
      "target": "src.pokertool.ensemble_decision.EnsembleDecisionSystem",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ensemble_decision",
      "target": "src.pokertool.ensemble_decision.create_ensemble",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.input_validation",
      "target": "src.pokertool.input_validation.ValidationResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.input_validation",
      "target": "src.pokertool.input_validation.CardValidator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.input_validation",
      "target": "src.pokertool.input_validation.BetValidator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.input_validation",
      "target": "src.pokertool.input_validation.PlayerValidator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.input_validation",
      "target": "src.pokertool.input_validation.TableValidator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.input_validation",
      "target": "src.pokertool.input_validation.validate_card",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.input_validation",
      "target": "src.pokertool.input_validation.validate_bet",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.input_validation",
      "target": "src.pokertool.input_validation.sanitize_table_data",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.enhanced_gui",
      "target": "src.pokertool.enhanced_gui.IntegratedPokerAssistant",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.enhanced_gui",
      "target": "src.pokertool.enhanced_gui._ensure_scraper_dependencies",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.enhanced_gui",
      "target": "src.pokertool.enhanced_gui.main",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.preflop_charts",
      "target": "src.pokertool.preflop_charts.ChartRecommendation",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.preflop_charts",
      "target": "src.pokertool.preflop_charts.PreflopChartManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.preflop_charts",
      "target": "src.pokertool.preflop_charts.QuickCharts",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.preflop_charts",
      "target": "src.pokertool.preflop_charts.PreflopAnalyzer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.csrf_protection",
      "target": "src.pokertool.csrf_protection.CSRFProtection",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.csrf_protection",
      "target": "src.pokertool.csrf_protection.CSRFMiddleware",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.csrf_protection",
      "target": "src.pokertool.csrf_protection.get_csrf_token",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.csrf_protection",
      "target": "src.pokertool.csrf_protection.create_csrf_protection",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.concurrency",
      "target": "src.pokertool.concurrency.TaskPriority",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.concurrency",
      "target": "src.pokertool.concurrency.TaskResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.concurrency",
      "target": "src.pokertool.concurrency.ThreadPoolConfig",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.concurrency",
      "target": "src.pokertool.concurrency.ThreadSafeCounter",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.concurrency",
      "target": "src.pokertool.concurrency.ThreadSafeDict",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.concurrency",
      "target": "src.pokertool.concurrency.TaskQueue",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.concurrency",
      "target": "src.pokertool.concurrency.PokerThreadPool",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.concurrency",
      "target": "src.pokertool.concurrency.AsyncManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.concurrency",
      "target": "src.pokertool.concurrency.PokerConcurrencyManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.concurrency",
      "target": "src.pokertool.concurrency._shutdown_global_thread_pool",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.concurrency",
      "target": "src.pokertool.concurrency.get_thread_pool",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.concurrency",
      "target": "src.pokertool.concurrency.threaded",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.concurrency",
      "target": "src.pokertool.concurrency.cpu_intensive",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.concurrency",
      "target": "src.pokertool.concurrency.get_async_manager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.concurrency",
      "target": "src.pokertool.concurrency.get_poker_concurrency_manager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.concurrency",
      "target": "src.pokertool.concurrency.managed_thread_pool",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.concurrency",
      "target": "src.pokertool.concurrency.async_context",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.concurrency",
      "target": "src.pokertool.concurrency.run_concurrent_tasks",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.concurrency",
      "target": "src.pokertool.concurrency.parallel_map",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.concurrency",
      "target": "src.pokertool.concurrency.monitor_performance",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.concurrency.threaded",
      "target": "src.pokertool.concurrency.get_thread_pool",
      "type": "calls"
    },
    {
      "source": "src.pokertool.concurrency.cpu_intensive",
      "target": "src.pokertool.concurrency.get_thread_pool",
      "type": "calls"
    },
    {
      "source": "src.pokertool.concurrency.async_context",
      "target": "src.pokertool.concurrency.get_async_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.concurrency.parallel_map",
      "target": "src.pokertool.concurrency.get_thread_pool",
      "type": "calls"
    },
    {
      "source": "src.pokertool.model_calibration",
      "target": "src.pokertool.model_calibration.DriftStatus",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.model_calibration",
      "target": "src.pokertool.model_calibration.CalibrationMethod",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.model_calibration",
      "target": "src.pokertool.model_calibration.PredictionRecord",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.model_calibration",
      "target": "src.pokertool.model_calibration.CalibrationMetrics",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.model_calibration",
      "target": "src.pokertool.model_calibration.DriftMetrics",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.model_calibration",
      "target": "src.pokertool.model_calibration.OnlineCalibrator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.model_calibration",
      "target": "src.pokertool.model_calibration.DriftDetector",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.model_calibration",
      "target": "src.pokertool.model_calibration.ModelCalibrationSystem",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.model_calibration",
      "target": "src.pokertool.model_calibration.get_calibration_system",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.node_locker",
      "target": "src.pokertool.node_locker.NodeLock",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.node_locker",
      "target": "src.pokertool.node_locker.NodeLocker",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.meta_game",
      "target": "src.pokertool.meta_game.StrategyLevel",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.meta_game",
      "target": "src.pokertool.meta_game.PlayerReputation",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.meta_game",
      "target": "src.pokertool.meta_game.MetaGameState",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.meta_game",
      "target": "src.pokertool.meta_game.StrategyAdjustment",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.meta_game",
      "target": "src.pokertool.meta_game.LevelingWarSimulator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.meta_game",
      "target": "src.pokertool.meta_game.DynamicStrategySwitcher",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.meta_game",
      "target": "src.pokertool.meta_game.ExploitationProtectionBalancer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.meta_game",
      "target": "src.pokertool.meta_game.HistoryDependentStrategy",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.meta_game",
      "target": "src.pokertool.meta_game.ReputationModel",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.meta_game",
      "target": "src.pokertool.meta_game.MetaGameOptimizer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.session_management",
      "target": "src.pokertool.session_management.SessionGoal",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.session_management",
      "target": "src.pokertool.session_management.SessionMetrics",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.session_management",
      "target": "src.pokertool.session_management.SessionReview",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.session_management",
      "target": "src.pokertool.session_management.SessionRecord",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.session_management",
      "target": "src.pokertool.session_management.SessionStorage",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.session_management",
      "target": "src.pokertool.session_management.SessionManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.session_management",
      "target": "src.pokertool.session_management._now",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.rate_limiter",
      "target": "src.pokertool.rate_limiter.RateLimitConfig",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.rate_limiter",
      "target": "src.pokertool.rate_limiter.RateLimitRecord",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.rate_limiter",
      "target": "src.pokertool.rate_limiter.RateLimiter",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.rate_limiter",
      "target": "src.pokertool.rate_limiter.AdaptiveRateLimiter",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.rate_limiter",
      "target": "src.pokertool.rate_limiter.configure_rate_limit",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.rate_limiter",
      "target": "src.pokertool.rate_limiter.check_rate_limit",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.rate_limiter",
      "target": "src.pokertool.rate_limiter.get_rate_limit_stats",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.rate_limiter",
      "target": "src.pokertool.rate_limiter.reset_rate_limits",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.rate_limiter",
      "target": "src.pokertool.rate_limiter.setup_default_rate_limits",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.rate_limiter.setup_default_rate_limits",
      "target": "src.pokertool.rate_limiter.configure_rate_limit",
      "type": "calls"
    },
    {
      "source": "src.pokertool.rbac",
      "target": "src.pokertool.rbac.Permission",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.rbac",
      "target": "src.pokertool.rbac.Role",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.rbac",
      "target": "src.pokertool.rbac.RoleDefinition",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.rbac",
      "target": "src.pokertool.rbac.RBACSystem",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.rbac",
      "target": "src.pokertool.rbac.get_rbac_system",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.rbac",
      "target": "src.pokertool.rbac.require_permission",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.rbac",
      "target": "src.pokertool.rbac.require_role",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.rbac",
      "target": "src.pokertool.rbac.requires_permission",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.rbac.require_permission",
      "target": "src.pokertool.rbac.get_rbac_system",
      "type": "calls"
    },
    {
      "source": "src.pokertool.rbac.require_role",
      "target": "src.pokertool.rbac.get_rbac_system",
      "type": "calls"
    },
    {
      "source": "src.pokertool.rbac.requires_permission",
      "target": "src.pokertool.rbac.get_rbac_system",
      "type": "calls"
    },
    {
      "source": "src.pokertool.confidence_decision_api",
      "target": "src.pokertool.confidence_decision_api.ConfidenceBand",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.confidence_decision_api",
      "target": "src.pokertool.confidence_decision_api.RiskLevel",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.confidence_decision_api",
      "target": "src.pokertool.confidence_decision_api.ConfidenceInterval",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.confidence_decision_api",
      "target": "src.pokertool.confidence_decision_api.DecisionRecommendation",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.confidence_decision_api",
      "target": "src.pokertool.confidence_decision_api.PredictiveDistribution",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.confidence_decision_api",
      "target": "src.pokertool.confidence_decision_api.ConfidenceAwareDecisionAPI",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.confidence_decision_api",
      "target": "src.pokertool.confidence_decision_api.get_confidence_decision_api",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.feature_flags",
      "target": "src.pokertool.feature_flags.FeatureState",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.feature_flags",
      "target": "src.pokertool.feature_flags.Feature",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.feature_flags",
      "target": "src.pokertool.feature_flags.FeatureFlags",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.feature_flags",
      "target": "src.pokertool.feature_flags.get_feature_flags",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.feature_flags",
      "target": "src.pokertool.feature_flags.reset_feature_flags",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.feature_flags",
      "target": "src.pokertool.feature_flags.is_feature_enabled",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.feature_flags",
      "target": "src.pokertool.feature_flags.requires_feature",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.feature_flags.is_feature_enabled",
      "target": "src.pokertool.feature_flags.get_feature_flags",
      "type": "calls"
    },
    {
      "source": "src.pokertool.feature_flags.requires_feature",
      "target": "src.pokertool.feature_flags.is_feature_enabled",
      "type": "calls"
    },
    {
      "source": "src.pokertool.production_database",
      "target": "src.pokertool.production_database.DatabaseConfig",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.production_database",
      "target": "src.pokertool.production_database.MigrationStats",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.production_database",
      "target": "src.pokertool.production_database.ProductionDatabase",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.production_database",
      "target": "src.pokertool.production_database.get_production_db",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.production_database",
      "target": "src.pokertool.production_database.initialize_production_db",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.production_database",
      "target": "src.pokertool.production_database.migrate_to_production",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.production_database.migrate_to_production",
      "target": "src.pokertool.production_database.initialize_production_db",
      "type": "calls"
    },
    {
      "source": "src.pokertool.production_database.migrate_to_production",
      "target": "src.pokertool.production_database.get_production_db",
      "type": "calls"
    },
    {
      "source": "src.pokertool.frame_differencing_engine",
      "target": "src.pokertool.frame_differencing_engine.FrameDifferenceMetrics",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.frame_differencing_engine",
      "target": "src.pokertool.frame_differencing_engine.FrameDifferencingEngine",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.frame_differencing_engine",
      "target": "src.pokertool.frame_differencing_engine.get_frame_diff_engine",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.frame_differencing_engine",
      "target": "src.pokertool.frame_differencing_engine.reset_frame_diff_engine",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.nash_solver",
      "target": "src.pokertool.nash_solver.NashResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.nash_solver",
      "target": "src.pokertool.nash_solver.AdvancedNashSolver",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.nash_solver",
      "target": "src.pokertool.nash_solver.InformationSet",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.nash_solver",
      "target": "src.pokertool.nash_solver.AbstractedNode",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.nash_solver",
      "target": "src.pokertool.nash_solver.GameTreeAbstractor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.nash_solver",
      "target": "src.pokertool.nash_solver.HistogramAbstractor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.correlation_id_middleware",
      "target": "src.pokertool.correlation_id_middleware.CorrelationIdMiddleware",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.correlation_id_middleware",
      "target": "src.pokertool.correlation_id_middleware.CorrelationIdFilter",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.correlation_id_middleware",
      "target": "src.pokertool.correlation_id_middleware.CorrelationIdPropagator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.correlation_id_middleware",
      "target": "src.pokertool.correlation_id_middleware.DatabaseQueryTracer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.correlation_id_middleware",
      "target": "src.pokertool.correlation_id_middleware.get_correlation_id",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.correlation_id_middleware",
      "target": "src.pokertool.correlation_id_middleware.set_correlation_id",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.correlation_id_middleware",
      "target": "src.pokertool.correlation_id_middleware.with_correlation_id",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.correlation_id_middleware",
      "target": "src.pokertool.correlation_id_middleware.get_logger_with_correlation_id",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.db_performance_monitor",
      "target": "src.pokertool.db_performance_monitor.PerformanceConfig",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.db_performance_monitor",
      "target": "src.pokertool.db_performance_monitor.QueryMetrics",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.db_performance_monitor",
      "target": "src.pokertool.db_performance_monitor.QueryStats",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.db_performance_monitor",
      "target": "src.pokertool.db_performance_monitor.DatabasePerformanceMonitor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.db_performance_monitor",
      "target": "src.pokertool.db_performance_monitor._QueryTracker",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.db_performance_monitor",
      "target": "src.pokertool.db_performance_monitor.get_performance_report",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.db_performance_monitor",
      "target": "src.pokertool.db_performance_monitor.reset_performance_stats",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.db_performance_monitor",
      "target": "src.pokertool.db_performance_monitor.cleanup_old_performance_data",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.leveling_war",
      "target": "src.pokertool.leveling_war.ThinkingLevel",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.leveling_war",
      "target": "src.pokertool.leveling_war.LevelingOutcome",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.leveling_war",
      "target": "src.pokertool.leveling_war.LevelEstimator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.leveling_war",
      "target": "src.pokertool.leveling_war.StrategyEvolution",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.leveling_war",
      "target": "src.pokertool.leveling_war.CounterStrategyGenerator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.leveling_war",
      "target": "src.pokertool.leveling_war.LevelingWarSimulator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.leveling_war",
      "target": "src.pokertool.leveling_war.MetaGameTracker",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.leveling_war",
      "target": "src.pokertool.leveling_war.analyze_leveling_war",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.range_generator",
      "target": "src.pokertool.range_generator.Position",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.range_generator",
      "target": "src.pokertool.range_generator.Action",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.range_generator",
      "target": "src.pokertool.range_generator.RangeParameters",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.range_generator",
      "target": "src.pokertool.range_generator.HandRange",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.range_generator",
      "target": "src.pokertool.range_generator.HandParser",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.range_generator",
      "target": "src.pokertool.range_generator.AnteAdjuster",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.range_generator",
      "target": "src.pokertool.range_generator.StraddleAdapter",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.range_generator",
      "target": "src.pokertool.range_generator.ICMAdjuster",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.range_generator",
      "target": "src.pokertool.range_generator.MultiWayAdjuster",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.range_generator",
      "target": "src.pokertool.range_generator.BaseRangeGenerator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.range_generator",
      "target": "src.pokertool.range_generator.RangeGenerator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.async_scraper_executor",
      "target": "src.pokertool.async_scraper_executor.PerformanceMetrics",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.async_scraper_executor",
      "target": "src.pokertool.async_scraper_executor.ScrapeResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.async_scraper_executor",
      "target": "src.pokertool.async_scraper_executor.AsyncScraperExecutor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.async_scraper_executor",
      "target": "src.pokertool.async_scraper_executor.get_async_executor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.async_scraper_executor",
      "target": "src.pokertool.async_scraper_executor.shutdown_async_executor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.multi_table_support",
      "target": "src.pokertool.multi_table_support.TableLayout",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.multi_table_support",
      "target": "src.pokertool.multi_table_support.TableState",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.multi_table_support",
      "target": "src.pokertool.multi_table_support.TablePriority",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.multi_table_support",
      "target": "src.pokertool.multi_table_support.TableWindow",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.multi_table_support",
      "target": "src.pokertool.multi_table_support.HotkeyAction",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.multi_table_support",
      "target": "src.pokertool.multi_table_support.TableManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.multi_table_support",
      "target": "src.pokertool.multi_table_support.get_table_manager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.multi_table_support",
      "target": "src.pokertool.multi_table_support.add_poker_table",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.multi_table_support",
      "target": "src.pokertool.multi_table_support.remove_poker_table",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.multi_table_support",
      "target": "src.pokertool.multi_table_support.tile_tables",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.multi_table_support",
      "target": "src.pokertool.multi_table_support.focus_next",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.multi_table_support",
      "target": "src.pokertool.multi_table_support.get_active_tables",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.multi_table_support",
      "target": "src.pokertool.multi_table_support.get_tables_needing_action",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.multi_table_support",
      "target": "src.pokertool.multi_table_support.setup_custom_hotkey",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.multi_table_support",
      "target": "src.pokertool.multi_table_support.save_table_session",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.multi_table_support",
      "target": "src.pokertool.multi_table_support.load_table_session",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.multi_table_support.add_poker_table",
      "target": "src.pokertool.multi_table_support.get_table_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.multi_table_support.remove_poker_table",
      "target": "src.pokertool.multi_table_support.get_table_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.multi_table_support.tile_tables",
      "target": "src.pokertool.multi_table_support.get_table_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.multi_table_support.focus_next",
      "target": "src.pokertool.multi_table_support.get_table_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.multi_table_support.get_active_tables",
      "target": "src.pokertool.multi_table_support.get_table_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.multi_table_support.get_tables_needing_action",
      "target": "src.pokertool.multi_table_support.get_table_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.multi_table_support.setup_custom_hotkey",
      "target": "src.pokertool.multi_table_support.get_table_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.multi_table_support.save_table_session",
      "target": "src.pokertool.multi_table_support.get_table_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.multi_table_support.load_table_session",
      "target": "src.pokertool.multi_table_support.get_table_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.blocker_effects",
      "target": "src.pokertool.blocker_effects.BlockerType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.blocker_effects",
      "target": "src.pokertool.blocker_effects.BlockerStrength",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.blocker_effects",
      "target": "src.pokertool.blocker_effects.BoardTextureAnalyzer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.blocker_effects",
      "target": "src.pokertool.blocker_effects.EquityAdjuster",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.blocker_effects",
      "target": "src.pokertool.blocker_effects.BluffSelector",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.blocker_effects",
      "target": "src.pokertool.blocker_effects.RangeBlockerAnalysis",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.blocker_effects",
      "target": "src.pokertool.blocker_effects.quick_blocker_eval",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.blocker_effects",
      "target": "src.pokertool.blocker_effects.get_best_bluff_combos",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.blocker_effects",
      "target": "src.pokertool.blocker_effects.calculate_blocker_equity_boost",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hand_history_db",
      "target": "src.pokertool.hand_history_db.GameStage",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hand_history_db",
      "target": "src.pokertool.hand_history_db.ActionType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hand_history_db",
      "target": "src.pokertool.hand_history_db.PlayerInfo",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hand_history_db",
      "target": "src.pokertool.hand_history_db.PlayerAction",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hand_history_db",
      "target": "src.pokertool.hand_history_db.HandHistory",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hand_history_db",
      "target": "src.pokertool.hand_history_db.HandHistoryDatabase",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hand_history_db",
      "target": "src.pokertool.hand_history_db.get_hand_history_db",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading",
      "target": "src.pokertool.threading.ThreadSafeDict",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading",
      "target": "src.pokertool.threading.ThreadSafeCounter",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading",
      "target": "src.pokertool.threading.TaskPriority",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading",
      "target": "src.pokertool.threading.AsyncCallback",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading",
      "target": "src.pokertool.threading.get_thread_pool",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading",
      "target": "src.pokertool.threading.shutdown_thread_pool",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading",
      "target": "src.pokertool.threading.run_in_thread",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading",
      "target": "src.pokertool.threading.thread_safe",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading",
      "target": "src.pokertool.threading.with_timeout",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading",
      "target": "src.pokertool.threading.register_callback",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading",
      "target": "src.pokertool.threading.trigger_callbacks",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading",
      "target": "src.pokertool.threading.get_thread_local",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading",
      "target": "src.pokertool.threading.set_thread_local",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading",
      "target": "src.pokertool.threading.clear_thread_local",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading",
      "target": "src.pokertool.threading.cleanup_threading",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading.run_in_thread",
      "target": "src.pokertool.threading.get_thread_pool",
      "type": "calls"
    },
    {
      "source": "src.pokertool.threading.cleanup_threading",
      "target": "src.pokertool.threading.shutdown_thread_pool",
      "type": "calls"
    },
    {
      "source": "src.pokertool.threading.cleanup_threading",
      "target": "src.pokertool.threading.clear_thread_local",
      "type": "calls"
    },
    {
      "source": "src.pokertool.error_handling",
      "target": "src.pokertool.error_handling.SecurityError",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.error_handling",
      "target": "src.pokertool.error_handling.CircuitBreaker",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.error_handling",
      "target": "src.pokertool.error_handling.sanitize_input",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.error_handling",
      "target": "src.pokertool.error_handling.retry_on_failure",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.error_handling",
      "target": "src.pokertool.error_handling.run_safely",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.error_handling",
      "target": "src.pokertool.error_handling.db_guard",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.structured_logger",
      "target": "src.pokertool.structured_logger.LogLevel",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.structured_logger",
      "target": "src.pokertool.structured_logger.JSONFormatter",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.structured_logger",
      "target": "src.pokertool.structured_logger.StructuredLogger",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.structured_logger",
      "target": "src.pokertool.structured_logger.get_logger",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.structured_logger",
      "target": "src.pokertool.structured_logger.setup_logging",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.structured_logger",
      "target": "src.pokertool.structured_logger.log_api_request",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.structured_logger",
      "target": "src.pokertool.structured_logger.log_ml_prediction",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.structured_logger",
      "target": "src.pokertool.structured_logger.log_error",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.structured_logger.log_api_request",
      "target": "src.pokertool.structured_logger.get_logger",
      "type": "calls"
    },
    {
      "source": "src.pokertool.structured_logger.log_ml_prediction",
      "target": "src.pokertool.structured_logger.get_logger",
      "type": "calls"
    },
    {
      "source": "src.pokertool.structured_logger.log_error",
      "target": "src.pokertool.structured_logger.get_logger",
      "type": "calls"
    },
    {
      "source": "src.pokertool.api",
      "target": "src.pokertool.api.UserRole",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api",
      "target": "src.pokertool.api.APIUser",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api",
      "target": "src.pokertool.api.AuthenticationService",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api",
      "target": "src.pokertool.api.ConnectionManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api",
      "target": "src.pokertool.api.DetectionWebSocketManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api",
      "target": "src.pokertool.api.APIServices",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api",
      "target": "src.pokertool.api.PokerToolAPI",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api",
      "target": "src.pokertool.api.get_detection_ws_manager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api",
      "target": "src.pokertool.api.broadcast_detection_event",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api",
      "target": "src.pokertool.api.get_api",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api",
      "target": "src.pokertool.api.create_app",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api",
      "target": "src.pokertool.api.run_api_server",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api",
      "target": "src.pokertool.api.main",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api.broadcast_detection_event",
      "target": "src.pokertool.api.get_detection_ws_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.api.create_app",
      "target": "src.pokertool.api.get_api",
      "type": "calls"
    },
    {
      "source": "src.pokertool.api.run_api_server",
      "target": "src.pokertool.api.create_app",
      "type": "calls"
    },
    {
      "source": "src.pokertool.api.main",
      "target": "src.pokertool.api.run_api_server",
      "type": "calls"
    },
    {
      "source": "src.pokertool.network_analysis",
      "target": "src.pokertool.network_analysis.Interaction",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.network_analysis",
      "target": "src.pokertool.network_analysis.PlayerNode",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.network_analysis",
      "target": "src.pokertool.network_analysis.EdgeMetrics",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.network_analysis",
      "target": "src.pokertool.network_analysis.NetworkAnalysis",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.qaoa_solver",
      "target": "src.pokertool.qaoa_solver.QAOAParameters",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.qaoa_solver",
      "target": "src.pokertool.qaoa_solver.QAOAResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.qaoa_solver",
      "target": "src.pokertool.qaoa_solver.QAOAProblemHamiltonian",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.qaoa_solver",
      "target": "src.pokertool.qaoa_solver.QAOAMixingHamiltonian",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.qaoa_solver",
      "target": "src.pokertool.qaoa_solver.QAOASolver",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.qaoa_solver",
      "target": "src.pokertool.qaoa_solver.PokerQAOASolver",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.qaoa_solver",
      "target": "src.pokertool.qaoa_solver.solve_maxcut_qaoa",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.qaoa_solver",
      "target": "src.pokertool.qaoa_solver.optimize_portfolio_qaoa",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hud_overlay",
      "target": "src.pokertool.hud_overlay.HUDConfig",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hud_overlay",
      "target": "src.pokertool.hud_overlay.PlayerHUDStats",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hud_overlay",
      "target": "src.pokertool.hud_overlay.HUDOverlay",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hud_overlay",
      "target": "src.pokertool.hud_overlay.get_hud_overlay",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hud_overlay",
      "target": "src.pokertool.hud_overlay.start_hud_overlay",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hud_overlay",
      "target": "src.pokertool.hud_overlay.stop_hud_overlay",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hud_overlay",
      "target": "src.pokertool.hud_overlay.update_hud_state",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hud_overlay",
      "target": "src.pokertool.hud_overlay.is_hud_running",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.pattern_detector",
      "target": "src.pokertool.pattern_detector.Pattern",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.pattern_detector",
      "target": "src.pokertool.pattern_detector.TimeSeriesAnalyzer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.pattern_detector",
      "target": "src.pokertool.pattern_detector.BehavioralPatternDetector",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.pattern_detector",
      "target": "src.pokertool.pattern_detector.SequencePatternMatcher",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.pattern_detector",
      "target": "src.pokertool.pattern_detector.AnomalyDetector",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.pattern_detector",
      "target": "src.pokertool.pattern_detector.calculate_pattern_strength",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.pattern_detector",
      "target": "src.pokertool.pattern_detector.combine_pattern_scores",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.smart_ocr_cache",
      "target": "src.pokertool.smart_ocr_cache.CachedResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.smart_ocr_cache",
      "target": "src.pokertool.smart_ocr_cache.CacheMetrics",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.smart_ocr_cache",
      "target": "src.pokertool.smart_ocr_cache.SmartOCRCache",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.smart_ocr_cache",
      "target": "src.pokertool.smart_ocr_cache.get_ocr_cache",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.smart_ocr_cache",
      "target": "src.pokertool.smart_ocr_cache.reset_ocr_cache",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.cli",
      "target": "src.pokertool.cli.main",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.cli",
      "target": "src.pokertool.cli.run_test_mode",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.cli.main",
      "target": "src.pokertool.cli.run_test_mode",
      "type": "calls"
    },
    {
      "source": "src.pokertool.circuit_breaker",
      "target": "src.pokertool.circuit_breaker.CircuitState",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.circuit_breaker",
      "target": "src.pokertool.circuit_breaker.CircuitBreakerConfig",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.circuit_breaker",
      "target": "src.pokertool.circuit_breaker.CircuitBreakerMetrics",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.circuit_breaker",
      "target": "src.pokertool.circuit_breaker.CircuitBreaker",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.circuit_breaker",
      "target": "src.pokertool.circuit_breaker.CircuitBreakerOpenError",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.circuit_breaker",
      "target": "src.pokertool.circuit_breaker.get_circuit_breaker",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.circuit_breaker",
      "target": "src.pokertool.circuit_breaker.get_all_circuit_breakers",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.circuit_breaker",
      "target": "src.pokertool.circuit_breaker.reset_all_circuit_breakers",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.user_config",
      "target": "src.pokertool.user_config.UserConfig",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.user_config",
      "target": "src.pokertool.user_config.ConfigManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.user_config",
      "target": "src.pokertool.user_config.get_config_manager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.user_config",
      "target": "src.pokertool.user_config.get_poker_handle",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.user_config",
      "target": "src.pokertool.user_config.set_poker_handle",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.user_config",
      "target": "src.pokertool.user_config.has_poker_handle",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.user_config",
      "target": "src.pokertool.user_config.prompt_for_poker_handle",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.user_config.get_poker_handle",
      "target": "src.pokertool.user_config.get_poker_handle",
      "type": "calls"
    },
    {
      "source": "src.pokertool.user_config.get_poker_handle",
      "target": "src.pokertool.user_config.get_config_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.user_config.set_poker_handle",
      "target": "src.pokertool.user_config.set_poker_handle",
      "type": "calls"
    },
    {
      "source": "src.pokertool.user_config.set_poker_handle",
      "target": "src.pokertool.user_config.get_config_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.user_config.has_poker_handle",
      "target": "src.pokertool.user_config.has_poker_handle",
      "type": "calls"
    },
    {
      "source": "src.pokertool.user_config.has_poker_handle",
      "target": "src.pokertool.user_config.get_config_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.user_config.prompt_for_poker_handle",
      "target": "src.pokertool.user_config.get_config_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.ocr_recognition",
      "target": "src.pokertool.ocr_recognition.RecognitionMethod",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ocr_recognition",
      "target": "src.pokertool.ocr_recognition.CardRegion",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ocr_recognition",
      "target": "src.pokertool.ocr_recognition.RecognitionResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ocr_recognition",
      "target": "src.pokertool.ocr_recognition.CardTemplateManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ocr_recognition",
      "target": "src.pokertool.ocr_recognition.PokerOCR",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ocr_recognition",
      "target": "src.pokertool.ocr_recognition.get_poker_ocr",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ocr_recognition",
      "target": "src.pokertool.ocr_recognition.create_card_regions",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.theme_system",
      "target": "src.pokertool.theme_system.Palette",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.theme_system",
      "target": "src.pokertool.theme_system.Typography",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.theme_system",
      "target": "src.pokertool.theme_system.Theme",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.theme_system",
      "target": "src.pokertool.theme_system.ThemeDraft",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.theme_system",
      "target": "src.pokertool.theme_system.MarketplaceEntry",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.theme_system",
      "target": "src.pokertool.theme_system.ThemeEngine",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.theme_system",
      "target": "src.pokertool.theme_system.ThemeEditor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.theme_system",
      "target": "src.pokertool.theme_system.ThemeMarketplace",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.range_merger",
      "target": "src.pokertool.range_merger.HandCategory",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.range_merger",
      "target": "src.pokertool.range_merger.HandCombo",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.range_merger",
      "target": "src.pokertool.range_merger.RangeStructure",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.range_merger",
      "target": "src.pokertool.range_merger.MinimumDefenseFrequency",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.range_merger",
      "target": "src.pokertool.range_merger.PolarizationOptimizer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.range_merger",
      "target": "src.pokertool.range_merger.RemovalEffectsCalculator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.range_merger",
      "target": "src.pokertool.range_merger.BlockerAnalyzer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.range_merger",
      "target": "src.pokertool.range_merger.RangeSimplifier",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.range_merger",
      "target": "src.pokertool.range_merger.AdvancedRangeMerger",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.mcts_optimizer",
      "target": "src.pokertool.mcts_optimizer.GameState",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.mcts_optimizer",
      "target": "src.pokertool.mcts_optimizer.MCTSNode",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.mcts_optimizer",
      "target": "src.pokertool.mcts_optimizer.MCTSConfig",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.mcts_optimizer",
      "target": "src.pokertool.mcts_optimizer.TranspositionTable",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.mcts_optimizer",
      "target": "src.pokertool.mcts_optimizer.MCTSOptimizer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.master_logging",
      "target": "src.pokertool.master_logging.LogLevel",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.master_logging",
      "target": "src.pokertool.master_logging.LogCategory",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.master_logging",
      "target": "src.pokertool.master_logging.LogContext",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.master_logging",
      "target": "src.pokertool.master_logging.ErrorDetails",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.master_logging",
      "target": "src.pokertool.master_logging.MasterLogger",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.master_logging",
      "target": "src.pokertool.master_logging.get_master_logger",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.master_logging",
      "target": "src.pokertool.master_logging.log_info",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.master_logging",
      "target": "src.pokertool.master_logging.log_error",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.master_logging",
      "target": "src.pokertool.master_logging.log_warning",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.master_logging",
      "target": "src.pokertool.master_logging.log_performance",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.master_logging",
      "target": "src.pokertool.master_logging.log_security_event",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.master_logging",
      "target": "src.pokertool.master_logging.auto_log_errors",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.master_logging.log_info",
      "target": "src.pokertool.master_logging.get_master_logger",
      "type": "calls"
    },
    {
      "source": "src.pokertool.master_logging.log_error",
      "target": "src.pokertool.master_logging.get_master_logger",
      "type": "calls"
    },
    {
      "source": "src.pokertool.master_logging.log_warning",
      "target": "src.pokertool.master_logging.get_master_logger",
      "type": "calls"
    },
    {
      "source": "src.pokertool.master_logging.log_performance",
      "target": "src.pokertool.master_logging.get_master_logger",
      "type": "calls"
    },
    {
      "source": "src.pokertool.master_logging.log_security_event",
      "target": "src.pokertool.master_logging.get_master_logger",
      "type": "calls"
    },
    {
      "source": "src.pokertool.master_logging.auto_log_errors",
      "target": "src.pokertool.master_logging.log_error",
      "type": "calls"
    },
    {
      "source": "src.pokertool.synthetic_data_generator",
      "target": "src.pokertool.synthetic_data_generator.TableTheme",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.synthetic_data_generator",
      "target": "src.pokertool.synthetic_data_generator.PlayerSeat",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.synthetic_data_generator",
      "target": "src.pokertool.synthetic_data_generator.TableState",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.synthetic_data_generator",
      "target": "src.pokertool.synthetic_data_generator.SyntheticDataGenerator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.synthetic_data_generator",
      "target": "src.pokertool.synthetic_data_generator.generate_synthetic_dataset",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.storage",
      "target": "src.pokertool.storage.SecurityError",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.storage",
      "target": "src.pokertool.storage.SecureDatabase",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.storage",
      "target": "src.pokertool.storage.get_secure_db",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.storage",
      "target": "src.pokertool.storage.init_db",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.storage",
      "target": "src.pokertool.storage.initialise_db_if_needed",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.storage.initialise_db_if_needed",
      "target": "src.pokertool.storage.init_db",
      "type": "calls"
    },
    {
      "source": "src.pokertool.performance_profiler",
      "target": "src.pokertool.performance_profiler.PerformanceSnapshot",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.performance_profiler",
      "target": "src.pokertool.performance_profiler.AlertRule",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.performance_profiler",
      "target": "src.pokertool.performance_profiler.OptimizationSuggestion",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.performance_profiler",
      "target": "src.pokertool.performance_profiler.ProfilingReport",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.performance_profiler",
      "target": "src.pokertool.performance_profiler.PerformanceProfiler",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.advanced_reporting",
      "target": "src.pokertool.advanced_reporting.ChartConfig",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.advanced_reporting",
      "target": "src.pokertool.advanced_reporting.ReportSection",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.advanced_reporting",
      "target": "src.pokertool.advanced_reporting.ReportTemplate",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.advanced_reporting",
      "target": "src.pokertool.advanced_reporting.ReportRequest",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.advanced_reporting",
      "target": "src.pokertool.advanced_reporting.ReportResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.advanced_reporting",
      "target": "src.pokertool.advanced_reporting.ReportBuilder",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.startup_validator",
      "target": "src.pokertool.startup_validator.HealthStatus",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.startup_validator",
      "target": "src.pokertool.startup_validator.ModuleHealth",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.startup_validator",
      "target": "src.pokertool.startup_validator.StartupValidator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.startup_validator",
      "target": "src.pokertool.startup_validator.DependencyCheck",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.startup_validator",
      "target": "src.pokertool.startup_validator.check_dependencies",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.startup_validator",
      "target": "src.pokertool.startup_validator.print_dependency_report",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.startup_validator",
      "target": "src.pokertool.startup_validator.validate_startup_dependencies",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.startup_validator.validate_startup_dependencies",
      "target": "src.pokertool.startup_validator.check_dependencies",
      "type": "calls"
    },
    {
      "source": "src.pokertool.startup_validator.validate_startup_dependencies",
      "target": "src.pokertool.startup_validator.print_dependency_report",
      "type": "calls"
    },
    {
      "source": "src.pokertool.tournament_support",
      "target": "src.pokertool.tournament_support.TournamentPhase",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.tournament_support",
      "target": "src.pokertool.tournament_support.TournamentType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.tournament_support",
      "target": "src.pokertool.tournament_support.TournamentStructure",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.tournament_support",
      "target": "src.pokertool.tournament_support.PayoutStructure",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.tournament_support",
      "target": "src.pokertool.tournament_support.PlayerStack",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.tournament_support",
      "target": "src.pokertool.tournament_support.TournamentState",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.tournament_support",
      "target": "src.pokertool.tournament_support.ICMCalculator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.tournament_support",
      "target": "src.pokertool.tournament_support.PushFoldCalculator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.tournament_support",
      "target": "src.pokertool.tournament_support.TournamentStrategy",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.tournament_support",
      "target": "src.pokertool.tournament_support.TournamentAnalyzer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.tournament_support",
      "target": "src.pokertool.tournament_support.get_tournament_analyzer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.tournament_support",
      "target": "src.pokertool.tournament_support.calculate_icm_equity",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.tournament_support",
      "target": "src.pokertool.tournament_support.get_tournament_strategy",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.tournament_support",
      "target": "src.pokertool.tournament_support.analyze_satellite_spot",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.i18n",
      "target": "src.pokertool.i18n.LocaleListener",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.i18n",
      "target": "src.pokertool.i18n.TranslationManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.i18n",
      "target": "src.pokertool.i18n.translate",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.i18n",
      "target": "src.pokertool.i18n.set_locale",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.i18n",
      "target": "src.pokertool.i18n.get_current_locale",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.i18n",
      "target": "src.pokertool.i18n.available_locales",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.i18n",
      "target": "src.pokertool.i18n.format_decimal",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.i18n",
      "target": "src.pokertool.i18n.format_currency",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.i18n",
      "target": "src.pokertool.i18n.convert_currency",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.i18n",
      "target": "src.pokertool.i18n.format_datetime",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.i18n",
      "target": "src.pokertool.i18n.register_locale_listener",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.i18n",
      "target": "src.pokertool.i18n.unregister_locale_listener",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gpu_preprocessing",
      "target": "src.pokertool.gpu_preprocessing.AcceleratorType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gpu_preprocessing",
      "target": "src.pokertool.gpu_preprocessing.PerformanceMetrics",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gpu_preprocessing",
      "target": "src.pokertool.gpu_preprocessing.GPUCapabilities",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gpu_preprocessing",
      "target": "src.pokertool.gpu_preprocessing.GPUPreprocessor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gpu_preprocessing",
      "target": "src.pokertool.gpu_preprocessing.get_gpu_preprocessor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gpu_preprocessing",
      "target": "src.pokertool.gpu_preprocessing.benchmark_accelerators",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.error_handler",
      "target": "src.pokertool.error_handler.ErrorSeverity",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.error_handler",
      "target": "src.pokertool.error_handler.ErrorCategory",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.error_handler",
      "target": "src.pokertool.error_handler.ErrorContext",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.error_handler",
      "target": "src.pokertool.error_handler.PokerToolError",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.error_handler",
      "target": "src.pokertool.error_handler.SystemError",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.error_handler",
      "target": "src.pokertool.error_handler.NetworkError",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.error_handler",
      "target": "src.pokertool.error_handler.DatabaseError",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.error_handler",
      "target": "src.pokertool.error_handler.MLModelError",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.error_handler",
      "target": "src.pokertool.error_handler.ScrapingError",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.error_handler",
      "target": "src.pokertool.error_handler.ValidationError",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.error_handler",
      "target": "src.pokertool.error_handler.GlobalErrorHandler",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.error_handler",
      "target": "src.pokertool.error_handler.handle_error",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.error_handler",
      "target": "src.pokertool.error_handler.get_error_stats",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.error_handler",
      "target": "src.pokertool.error_handler.setup_error_handler",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.error_handler.SystemError",
      "target": "src.pokertool.error_handler.PokerToolError",
      "type": "extends"
    },
    {
      "source": "src.pokertool.error_handler.NetworkError",
      "target": "src.pokertool.error_handler.PokerToolError",
      "type": "extends"
    },
    {
      "source": "src.pokertool.error_handler.DatabaseError",
      "target": "src.pokertool.error_handler.PokerToolError",
      "type": "extends"
    },
    {
      "source": "src.pokertool.error_handler.MLModelError",
      "target": "src.pokertool.error_handler.PokerToolError",
      "type": "extends"
    },
    {
      "source": "src.pokertool.error_handler.ScrapingError",
      "target": "src.pokertool.error_handler.PokerToolError",
      "type": "extends"
    },
    {
      "source": "src.pokertool.error_handler.ValidationError",
      "target": "src.pokertool.error_handler.PokerToolError",
      "type": "extends"
    },
    {
      "source": "src.pokertool.floating_advice_window",
      "target": "src.pokertool.floating_advice_window.ActionType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.floating_advice_window",
      "target": "src.pokertool.floating_advice_window.ConfidenceLevel",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.floating_advice_window",
      "target": "src.pokertool.floating_advice_window.Advice",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.floating_advice_window",
      "target": "src.pokertool.floating_advice_window.FloatingAdviceWindow",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.study_mode",
      "target": "src.pokertool.study_mode.Flashcard",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.study_mode",
      "target": "src.pokertool.study_mode.QuizQuestion",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.study_mode",
      "target": "src.pokertool.study_mode.QuizResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.study_mode",
      "target": "src.pokertool.study_mode.Lesson",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.study_mode",
      "target": "src.pokertool.study_mode.StudyProgress",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.study_mode",
      "target": "src.pokertool.study_mode.StudyPersistence",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.study_mode",
      "target": "src.pokertool.study_mode.SpacedRepetitionScheduler",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.study_mode",
      "target": "src.pokertool.study_mode.QuizSession",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.study_mode",
      "target": "src.pokertool.study_mode.StudyModeManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.study_mode",
      "target": "src.pokertool.study_mode._now",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.bluff_detection",
      "target": "src.pokertool.bluff_detection.ActionTiming",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.bluff_detection",
      "target": "src.pokertool.bluff_detection.ShowdownObservation",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.bluff_detection",
      "target": "src.pokertool.bluff_detection.BluffAssessment",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.bluff_detection",
      "target": "src.pokertool.bluff_detection.PlayerBluffProfile",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.bluff_detection",
      "target": "src.pokertool.bluff_detection.BluffDetectionEngine",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.solver_api",
      "target": "src.pokertool.gto_deviations",
      "type": "imports",
      "import_type": "from",
      "symbols": [
        "DeviationRequest",
        "GTODeviationEngine",
        "PopulationProfile"
      ]
    },
    {
      "source": "src.pokertool.solver_api",
      "target": "src.pokertool.solver_api.SolverQuery",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.solver_api",
      "target": "src.pokertool.solver_api.SolverResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.solver_api",
      "target": "src.pokertool.solver_api.SolverCache",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.solver_api",
      "target": "src.pokertool.solver_api.ApproximationEngine",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.solver_api",
      "target": "src.pokertool.solver_api.ProgressiveRefiner",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.solver_api",
      "target": "src.pokertool.solver_api.LatencyOptimizer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.solver_api",
      "target": "src.pokertool.solver_api.ParallelSolverExecutor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.solver_api",
      "target": "src.pokertool.solver_api.RealtimeSolverAPI",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.solver_api",
      "target": "src.pokertool.solver_api.create_solver_api",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.solver_api",
      "target": "src.pokertool.solver_api.quick_query",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.solver_api.quick_query",
      "target": "src.pokertool.solver_api.create_solver_api",
      "type": "calls"
    },
    {
      "source": "src.pokertool.gto_deviations",
      "target": "src.pokertool.gto_deviations.ActionType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_deviations",
      "target": "src.pokertool.gto_deviations.StrategyType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_deviations",
      "target": "src.pokertool.gto_deviations.PopulationTendency",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_deviations",
      "target": "src.pokertool.gto_deviations.OpponentModel",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_deviations",
      "target": "src.pokertool.gto_deviations.Deviation",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_deviations",
      "target": "src.pokertool.gto_deviations.PopulationProfile",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_deviations",
      "target": "src.pokertool.gto_deviations.DeviationRequest",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_deviations",
      "target": "src.pokertool.gto_deviations.DeviationResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_deviations",
      "target": "src.pokertool.gto_deviations.MaximumExploitationFinder",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_deviations",
      "target": "src.pokertool.gto_deviations.NodeLocker",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_deviations",
      "target": "src.pokertool.gto_deviations.StrategySimplifier",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_deviations",
      "target": "src.pokertool.gto_deviations.DeviationEVCalculator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_deviations",
      "target": "src.pokertool.gto_deviations.GTODeviationEngine",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_deviations",
      "target": "src.pokertool.gto_deviations.GTODeviationCalculator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_deviations",
      "target": "src.pokertool.gto_deviations.create_opponent_model",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gto_deviations",
      "target": "src.pokertool.gto_deviations.find_deviations",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.stats_validator",
      "target": "src.pokertool.stats_validator.TestType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.stats_validator",
      "target": "src.pokertool.stats_validator.CorrectionMethod",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.stats_validator",
      "target": "src.pokertool.stats_validator.HypothesisTestResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.stats_validator",
      "target": "src.pokertool.stats_validator.ConfidenceInterval",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.stats_validator",
      "target": "src.pokertool.stats_validator.SampleSizeRecommendation",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.stats_validator",
      "target": "src.pokertool.stats_validator.HypothesisTester",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.stats_validator",
      "target": "src.pokertool.stats_validator.ConfidenceIntervalCalculator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.stats_validator",
      "target": "src.pokertool.stats_validator.SampleSizeCalculator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.stats_validator",
      "target": "src.pokertool.stats_validator.VarianceReducer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.stats_validator",
      "target": "src.pokertool.stats_validator.PValueCorrector",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.stats_validator",
      "target": "src.pokertool.stats_validator.StatisticalValidator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.stats_validator",
      "target": "src.pokertool.stats_validator.quick_validate",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.stats_validator",
      "target": "src.pokertool.stats_validator.calculate_required_sample_size",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api_client",
      "target": "src.pokertool.api_client.APIError",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api_client",
      "target": "src.pokertool.api_client.AuthenticationError",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api_client",
      "target": "src.pokertool.api_client.RateLimitError",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api_client",
      "target": "src.pokertool.api_client.ValidationError",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api_client",
      "target": "src.pokertool.api_client.HandAnalysisRequest",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api_client",
      "target": "src.pokertool.api_client.HandAnalysisResponse",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api_client",
      "target": "src.pokertool.api_client.PokerToolClient",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api_client.AuthenticationError",
      "target": "src.pokertool.api_client.APIError",
      "type": "extends"
    },
    {
      "source": "src.pokertool.api_client.RateLimitError",
      "target": "src.pokertool.api_client.APIError",
      "type": "extends"
    },
    {
      "source": "src.pokertool.api_client.ValidationError",
      "target": "src.pokertool.api_client.APIError",
      "type": "extends"
    },
    {
      "source": "src.pokertool.rl_agent",
      "target": "src.pokertool.rl_agent.AgentLevel",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.rl_agent",
      "target": "src.pokertool.rl_agent.Action",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.rl_agent",
      "target": "src.pokertool.rl_agent.PolicyNetwork",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.rl_agent",
      "target": "src.pokertool.rl_agent.ValueNetwork",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.rl_agent",
      "target": "src.pokertool.rl_agent.ExperienceReplayBuffer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.rl_agent",
      "target": "src.pokertool.rl_agent.RewardShaper",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.rl_agent",
      "target": "src.pokertool.rl_agent.CurriculumManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.rl_agent",
      "target": "src.pokertool.rl_agent.PPOTrainer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.rl_agent",
      "target": "src.pokertool.rl_agent.RLAgent",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.rl_agent",
      "target": "src.pokertool.rl_agent.MultiAgentTrainer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.variance_calculator",
      "target": "src.pokertool.variance_calculator.SessionResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.variance_calculator",
      "target": "src.pokertool.variance_calculator.VarianceReport",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.variance_calculator",
      "target": "src.pokertool.variance_calculator.VarianceCalculator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.variance_calculator",
      "target": "src.pokertool.variance_calculator.calculate_variance",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.variance_calculator",
      "target": "src.pokertool.variance_calculator.calculate_standard_deviation",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.variance_calculator",
      "target": "src.pokertool.variance_calculator.simulate_sessions",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.variance_calculator",
      "target": "src.pokertool.variance_calculator.calculate_confidence_interval",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.variance_calculator",
      "target": "src.pokertool.variance_calculator.quick_risk_analysis",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.variance_calculator.quick_risk_analysis",
      "target": "src.pokertool.variance_calculator.calculate_confidence_interval",
      "type": "calls"
    },
    {
      "source": "src.pokertool.gui",
      "target": "src.pokertool.gui.VisualCard",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gui",
      "target": "src.pokertool.gui.CardSelectionPanel",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gui",
      "target": "src.pokertool.gui.PlayerInfo",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gui",
      "target": "src.pokertool.gui.TableVisualization",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gui",
      "target": "src.pokertool.gui.EnhancedPokerAssistantFrame",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gui",
      "target": "src.pokertool.gui.EnhancedPokerAssistant",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gui",
      "target": "src.pokertool.gui.main",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gui",
      "target": "src.pokertool.gui.run",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gui.run",
      "target": "src.pokertool.gui.main",
      "type": "calls"
    },
    {
      "source": "src.pokertool.documentation_system",
      "target": "src.pokertool.documentation_system.HelpTopic",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.documentation_system",
      "target": "src.pokertool.documentation_system.VideoTutorial",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.documentation_system",
      "target": "src.pokertool.documentation_system.GuideStep",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.documentation_system",
      "target": "src.pokertool.documentation_system.InteractiveGuide",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.documentation_system",
      "target": "src.pokertool.documentation_system.FAQEntry",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.documentation_system",
      "target": "src.pokertool.documentation_system.ContextHelp",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.documentation_system",
      "target": "src.pokertool.documentation_system.DocumentationSystem",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.documentation_system",
      "target": "src.pokertool.documentation_system._sanitize",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.live_decision_engine",
      "target": "src.pokertool.live_decision_engine.GameState",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.live_decision_engine",
      "target": "src.pokertool.live_decision_engine.WinProbabilityCalculator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.live_decision_engine",
      "target": "src.pokertool.live_decision_engine.ReasoningGenerator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.live_decision_engine",
      "target": "src.pokertool.live_decision_engine.LiveDecisionEngine",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.live_decision_engine",
      "target": "src.pokertool.live_decision_engine.get_live_decision_engine",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.live_decision_engine",
      "target": "src.pokertool.live_decision_engine.demo",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.live_decision_engine.demo",
      "target": "src.pokertool.live_decision_engine.get_live_decision_engine",
      "type": "calls"
    },
    {
      "source": "src.pokertool.hand_range_analyzer",
      "target": "src.pokertool.hand_range_analyzer.RangeEntry",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hand_range_analyzer",
      "target": "src.pokertool.hand_range_analyzer.RangeProfile",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hand_range_analyzer",
      "target": "src.pokertool.hand_range_analyzer.RangeEquityResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hand_range_analyzer",
      "target": "src.pokertool.hand_range_analyzer.RangeHeatMap",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hand_range_analyzer",
      "target": "src.pokertool.hand_range_analyzer.RangeParsingError",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hand_range_analyzer",
      "target": "src.pokertool.hand_range_analyzer.HandRangeAnalyzer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scrape",
      "target": "src.pokertool.scrape.RecognitionStats",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scrape",
      "target": "src.pokertool.scrape._FallbackScraperBridge",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.scrape",
      "target": "src.pokertool.scrape.EnhancedScraperManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scrape",
      "target": "src.pokertool.scrape.run_screen_scraper",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scrape",
      "target": "src.pokertool.scrape.stop_screen_scraper",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scrape",
      "target": "src.pokertool.scrape.get_scraper_status",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scrape",
      "target": "src.pokertool.scrape.run_desktop_independent_scraper",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scrape",
      "target": "src.pokertool.scrape.stop_desktop_scraper",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scrape",
      "target": "src.pokertool.scrape.get_desktop_scraper_status",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scrape",
      "target": "src.pokertool.scrape.save_debug_screenshots_all_desktops",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.scrape",
      "target": "src.pokertool.scrape.quick_poker_window_scan",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.thread_utils",
      "target": "src.pokertool.thread_utils.ThreadSafeDict",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.thread_utils",
      "target": "src.pokertool.thread_utils.ThreadSafeCounter",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.thread_utils",
      "target": "src.pokertool.thread_utils.TaskPriority",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.thread_utils",
      "target": "src.pokertool.thread_utils.AsyncCallback",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.thread_utils",
      "target": "src.pokertool.thread_utils.get_thread_pool",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.thread_utils",
      "target": "src.pokertool.thread_utils.shutdown_thread_pool",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.thread_utils",
      "target": "src.pokertool.thread_utils.run_in_thread",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.thread_utils",
      "target": "src.pokertool.thread_utils.thread_safe",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.thread_utils",
      "target": "src.pokertool.thread_utils.with_timeout",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.thread_utils",
      "target": "src.pokertool.thread_utils.register_callback",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.thread_utils",
      "target": "src.pokertool.thread_utils.trigger_callbacks",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.thread_utils",
      "target": "src.pokertool.thread_utils.get_thread_local",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.thread_utils",
      "target": "src.pokertool.thread_utils.set_thread_local",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.thread_utils",
      "target": "src.pokertool.thread_utils.clear_thread_local",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.thread_utils",
      "target": "src.pokertool.thread_utils.cleanup_threading",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.thread_utils.run_in_thread",
      "target": "src.pokertool.thread_utils.get_thread_pool",
      "type": "calls"
    },
    {
      "source": "src.pokertool.thread_utils.cleanup_threading",
      "target": "src.pokertool.thread_utils.shutdown_thread_pool",
      "type": "calls"
    },
    {
      "source": "src.pokertool.thread_utils.cleanup_threading",
      "target": "src.pokertool.thread_utils.clear_thread_local",
      "type": "calls"
    },
    {
      "source": "src.pokertool.api_versioning",
      "target": "src.pokertool.api_versioning.VersionStatus",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api_versioning",
      "target": "src.pokertool.api_versioning.VersionInfo",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api_versioning",
      "target": "src.pokertool.api_versioning.APIVersionManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api_versioning",
      "target": "src.pokertool.api_versioning.APIVersionMiddleware",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api_versioning",
      "target": "src.pokertool.api_versioning.get_version_manager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api_versioning",
      "target": "src.pokertool.api_versioning.require_version",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api_versioning",
      "target": "src.pokertool.api_versioning.setup_api_versioning",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.api_versioning.setup_api_versioning",
      "target": "src.pokertool.api_versioning.get_version_manager",
      "type": "calls"
    },
    {
      "source": "src.pokertool.ocr_ensemble",
      "target": "src.pokertool.ocr_ensemble.OCREngine",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ocr_ensemble",
      "target": "src.pokertool.ocr_ensemble.FieldType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ocr_ensemble",
      "target": "src.pokertool.ocr_ensemble.OCRResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ocr_ensemble",
      "target": "src.pokertool.ocr_ensemble.EnsembleResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ocr_ensemble",
      "target": "src.pokertool.ocr_ensemble.PokerLexicalValidator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ocr_ensemble",
      "target": "src.pokertool.ocr_ensemble.OCREnsemble",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.ocr_ensemble",
      "target": "src.pokertool.ocr_ensemble.get_ocr_ensemble",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gamification",
      "target": "src.pokertool.gamification.Achievement",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gamification",
      "target": "src.pokertool.gamification.Badge",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gamification",
      "target": "src.pokertool.gamification.ProgressState",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.gamification",
      "target": "src.pokertool.gamification.GamificationEngine",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.input_sanitizer",
      "target": "src.pokertool.input_sanitizer.SanitizationLevel",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.input_sanitizer",
      "target": "src.pokertool.input_sanitizer.InputSanitizer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.input_sanitizer",
      "target": "src.pokertool.input_sanitizer.sanitize",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.input_sanitizer",
      "target": "src.pokertool.input_sanitizer.sanitize_basic",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.input_sanitizer",
      "target": "src.pokertool.input_sanitizer.sanitize_strict",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hand_converter",
      "target": "src.pokertool.hand_converter.ConversionError",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hand_converter",
      "target": "src.pokertool.hand_converter.PokerSite",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hand_converter",
      "target": "src.pokertool.hand_converter.HandMetadata",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hand_converter",
      "target": "src.pokertool.hand_converter.HandConversionResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hand_converter",
      "target": "src.pokertool.hand_converter.HandFormatDetector",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.hand_converter",
      "target": "src.pokertool.hand_converter.HandConverter",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.formatting_utils",
      "target": "src.pokertool.formatting_utils.format_percentage",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.formatting_utils",
      "target": "src.pokertool.formatting_utils.format_currency",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.formatting_utils",
      "target": "src.pokertool.formatting_utils.format_big_blinds",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.formatting_utils",
      "target": "src.pokertool.formatting_utils.format_odds",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.formatting_utils",
      "target": "src.pokertool.formatting_utils.format_confidence_band",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.formatting_utils",
      "target": "src.pokertool.formatting_utils.format_stack_size",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.formatting_utils",
      "target": "src.pokertool.formatting_utils.get_color_for_probability",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.formatting_utils",
      "target": "src.pokertool.formatting_utils.get_color_for_confidence",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.formatting_utils",
      "target": "src.pokertool.formatting_utils.format_action_display",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.formatting_utils.format_odds",
      "target": "src.pokertool.formatting_utils.format_percentage",
      "type": "calls"
    },
    {
      "source": "src.pokertool.formatting_utils.format_confidence_band",
      "target": "src.pokertool.formatting_utils.format_percentage",
      "type": "calls"
    },
    {
      "source": "src.pokertool.formatting_utils.format_action_display",
      "target": "src.pokertool.formatting_utils.format_currency",
      "type": "calls"
    },
    {
      "source": "src.pokertool.roi_tracker",
      "target": "src.pokertool.roi_tracker.ROIType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.roi_tracker",
      "target": "src.pokertool.roi_tracker.ROIDefinition",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.roi_tracker",
      "target": "src.pokertool.roi_tracker.ROIState",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.roi_tracker",
      "target": "src.pokertool.roi_tracker.ROIChangeDetection",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.roi_tracker",
      "target": "src.pokertool.roi_tracker.ROITracker",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.roi_tracker",
      "target": "src.pokertool.roi_tracker.get_roi_tracker",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading_utils",
      "target": "src.pokertool.threading_utils.ThreadSafeDict",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading_utils",
      "target": "src.pokertool.threading_utils.ThreadSafeCounter",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading_utils",
      "target": "src.pokertool.threading_utils.TaskPriority",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading_utils",
      "target": "src.pokertool.threading_utils.AsyncCallback",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading_utils",
      "target": "src.pokertool.threading_utils.get_thread_pool",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading_utils",
      "target": "src.pokertool.threading_utils.shutdown_thread_pool",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading_utils",
      "target": "src.pokertool.threading_utils.run_in_thread",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading_utils",
      "target": "src.pokertool.threading_utils.thread_safe",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading_utils",
      "target": "src.pokertool.threading_utils.with_timeout",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading_utils",
      "target": "src.pokertool.threading_utils.register_callback",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading_utils",
      "target": "src.pokertool.threading_utils.trigger_callbacks",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading_utils",
      "target": "src.pokertool.threading_utils.get_thread_local",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading_utils",
      "target": "src.pokertool.threading_utils.set_thread_local",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading_utils",
      "target": "src.pokertool.threading_utils.clear_thread_local",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading_utils",
      "target": "src.pokertool.threading_utils.cleanup_threading",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.threading_utils.run_in_thread",
      "target": "src.pokertool.threading_utils.get_thread_pool",
      "type": "calls"
    },
    {
      "source": "src.pokertool.threading_utils.cleanup_threading",
      "target": "src.pokertool.threading_utils.shutdown_thread_pool",
      "type": "calls"
    },
    {
      "source": "src.pokertool.threading_utils.cleanup_threading",
      "target": "src.pokertool.threading_utils.clear_thread_local",
      "type": "calls"
    },
    {
      "source": "src.pokertool.core",
      "target": "src.pokertool.core.Rank",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.core",
      "target": "src.pokertool.core.Suit",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.core",
      "target": "src.pokertool.core.Position",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.core",
      "target": "src.pokertool.core.Card",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.core",
      "target": "src.pokertool.core.HandAnalysisResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.core",
      "target": "src.pokertool.core.parse_card",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.core",
      "target": "src.pokertool.core._normalise_cards",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.core",
      "target": "src.pokertool.core.analyse_hand",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.core._normalise_cards",
      "target": "src.pokertool.core.parse_card",
      "type": "calls"
    },
    {
      "source": "src.pokertool.core.analyse_hand",
      "target": "src.pokertool.core._normalise_cards",
      "type": "calls"
    },
    {
      "source": "src.pokertool.enhanced_gui_components.settings_section",
      "target": "src.pokertool.enhanced_gui_components.settings_section.SettingsSection",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.enhanced_gui_components.autopilot_panel",
      "target": "src.pokertool.enhanced_gui_components.autopilot_panel.AutopilotState",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.enhanced_gui_components.autopilot_panel",
      "target": "src.pokertool.enhanced_gui_components.autopilot_panel.AutopilotControlPanel",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.enhanced_gui_components.manual_section",
      "target": "src.pokertool.enhanced_gui_components.manual_section.ManualPlaySection",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.enhanced_gui_components.coaching_section",
      "target": "src.pokertool.enhanced_gui_components.coaching_section.CoachingSection",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.utils.dependency_manager",
      "target": "src.pokertool.utils.dependency_manager.DependencyManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.utils.dependency_manager",
      "target": "src.pokertool.utils.dependency_manager.ensure_dependencies",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.utils.single_instance",
      "target": "src.pokertool.utils.single_instance._sanitize_app_name",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.utils.single_instance",
      "target": "src.pokertool.utils.single_instance._lock_path",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.utils.single_instance",
      "target": "src.pokertool.utils.single_instance._pid_is_running",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.utils.single_instance",
      "target": "src.pokertool.utils.single_instance.acquire_lock",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.utils.single_instance",
      "target": "src.pokertool.utils.single_instance.release_lock",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.utils.single_instance._lock_path",
      "target": "src.pokertool.utils.single_instance._sanitize_app_name",
      "type": "calls"
    },
    {
      "source": "src.pokertool.utils.single_instance.acquire_lock",
      "target": "src.pokertool.utils.single_instance._lock_path",
      "type": "calls"
    },
    {
      "source": "src.pokertool.utils.single_instance.acquire_lock",
      "target": "src.pokertool.utils.single_instance._pid_is_running",
      "type": "calls"
    },
    {
      "source": "src.pokertool.modules.ocr_engine",
      "target": "src.pokertool.modules.ocr_engine.OCRResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.ocr_engine",
      "target": "src.pokertool.modules.ocr_engine.PokerOCREngine",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.ocr_engine",
      "target": "src.pokertool.modules.ocr_engine.get_ocr_engine",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.chrome_devtools_scraper",
      "target": "src.pokertool.modules.chrome_devtools_scraper.ChromeConnection",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.chrome_devtools_scraper",
      "target": "src.pokertool.modules.chrome_devtools_scraper.BetfairTableData",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.chrome_devtools_scraper",
      "target": "src.pokertool.modules.chrome_devtools_scraper.ChromeDevToolsScraper",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.chrome_devtools_scraper",
      "target": "src.pokertool.modules.chrome_devtools_scraper.create_auto_scraper",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.chrome_devtools_scraper",
      "target": "src.pokertool.modules.chrome_devtools_scraper.launch_chrome_for_debugging",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.note_taking_system",
      "target": "src.pokertool.modules.note_taking_system.NoteColor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.note_taking_system",
      "target": "src.pokertool.modules.note_taking_system.NoteCategory",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.note_taking_system",
      "target": "src.pokertool.modules.note_taking_system.PlayerNote",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.note_taking_system",
      "target": "src.pokertool.modules.note_taking_system.NoteDatabase",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.note_taking_system",
      "target": "src.pokertool.modules.note_taking_system.NoteSearch",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.note_taking_system",
      "target": "src.pokertool.modules.note_taking_system.NoteTemplate",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.note_taking_system",
      "target": "src.pokertool.modules.note_taking_system.AutoNoteGenerator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.note_taking_system",
      "target": "src.pokertool.modules.note_taking_system.NoteTakingSystem",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.run_pokertool",
      "target": "src.pokertool.modules.run_pokertool.ensure_critical_dependencies",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.accuracy_validator",
      "target": "src.pokertool.modules.accuracy_validator.ValidationStatus",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.accuracy_validator",
      "target": "src.pokertool.modules.accuracy_validator.CardRecognitionResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.accuracy_validator",
      "target": "src.pokertool.modules.accuracy_validator.ConsensusResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.accuracy_validator",
      "target": "src.pokertool.modules.accuracy_validator.ValidationResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.accuracy_validator",
      "target": "src.pokertool.modules.accuracy_validator.StackDelta",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.accuracy_validator",
      "target": "src.pokertool.modules.accuracy_validator.MultiFrameCardRecognizer",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.accuracy_validator",
      "target": "src.pokertool.modules.accuracy_validator.PotAmountValidator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.accuracy_validator",
      "target": "src.pokertool.modules.accuracy_validator.StackDeltaTracker",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.accuracy_validator",
      "target": "src.pokertool.modules.accuracy_validator.BetAmountSpatialValidator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.accuracy_validator",
      "target": "src.pokertool.modules.accuracy_validator.ActionButtonState",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.accuracy_validator",
      "target": "src.pokertool.modules.accuracy_validator.ButtonTransition",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.accuracy_validator",
      "target": "src.pokertool.modules.accuracy_validator.ActionButtonStateMachine",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.accuracy_validator",
      "target": "src.pokertool.modules.accuracy_validator.OCRReExtractor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.accuracy_validator",
      "target": "src.pokertool.modules.accuracy_validator.CommunityCardSequenceValidator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.accuracy_validator",
      "target": "src.pokertool.modules.accuracy_validator.TableBoundaryDetector",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.accuracy_validator",
      "target": "src.pokertool.modules.accuracy_validator.AccuracyValidationSystem",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.accuracy_validator",
      "target": "src.pokertool.modules.accuracy_validator.get_accuracy_validation_system",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.logger",
      "target": "src.pokertool.modules.logger.MasterLogger",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.logger",
      "target": "src.pokertool.modules.logger.log_exceptions",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.logger",
      "target": "src.pokertool.modules.logger.setup_global_exception_handler",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.scraper_optimization_suite",
      "target": "src.pokertool.modules.scraper_optimization_suite.ROI",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.scraper_optimization_suite",
      "target": "src.pokertool.modules.scraper_optimization_suite.ROITracker",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.scraper_optimization_suite",
      "target": "src.pokertool.modules.scraper_optimization_suite.FrameDiffEngine",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.scraper_optimization_suite",
      "target": "src.pokertool.modules.scraper_optimization_suite.OCRCache",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.scraper_optimization_suite",
      "target": "src.pokertool.modules.scraper_optimization_suite.ParallelExtractor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.scraper_optimization_suite",
      "target": "src.pokertool.modules.scraper_optimization_suite.FastScreenCapture",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.scraper_optimization_suite",
      "target": "src.pokertool.modules.scraper_optimization_suite.TemporalConsensus",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.scraper_optimization_suite",
      "target": "src.pokertool.modules.scraper_optimization_suite.PotValidator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.scraper_optimization_suite",
      "target": "src.pokertool.modules.scraper_optimization_suite.CardRecognitionModel",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.scraper_optimization_suite",
      "target": "src.pokertool.modules.scraper_optimization_suite.SpatialValidator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.scraper_optimization_suite",
      "target": "src.pokertool.modules.scraper_optimization_suite.RecoveryManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.scraper_optimization_suite",
      "target": "src.pokertool.modules.scraper_optimization_suite.RedundantExtractor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.scraper_optimization_suite",
      "target": "src.pokertool.modules.scraper_optimization_suite.HealthMetrics",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.scraper_optimization_suite",
      "target": "src.pokertool.modules.scraper_optimization_suite.HealthMonitor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.scraper_optimization_suite",
      "target": "src.pokertool.modules.scraper_optimization_suite.ScraperOptimizationSuite",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.scraper_optimization_suite",
      "target": "src.pokertool.modules.scraper_optimization_suite.get_optimization_suite",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.scraper_optimization_suite",
      "target": "src.pokertool.modules.scraper_optimization_suite.demo",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.scraper_optimization_suite.demo",
      "target": "src.pokertool.modules.scraper_optimization_suite.get_optimization_suite",
      "type": "calls"
    },
    {
      "source": "src.pokertool.modules.scraper_learning_system",
      "target": "src.pokertool.modules.scraper_learning_system.ExtractionType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.scraper_learning_system",
      "target": "src.pokertool.modules.scraper_learning_system.EnvironmentSignature",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.scraper_learning_system",
      "target": "src.pokertool.modules.scraper_learning_system.OCRStrategyResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.scraper_learning_system",
      "target": "src.pokertool.modules.scraper_learning_system.OCRStrategyStats",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.scraper_learning_system",
      "target": "src.pokertool.modules.scraper_learning_system.EnvironmentProfile",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.scraper_learning_system",
      "target": "src.pokertool.modules.scraper_learning_system.ExtractionFeedback",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.scraper_learning_system",
      "target": "src.pokertool.modules.scraper_learning_system.CDPGroundTruth",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.scraper_learning_system",
      "target": "src.pokertool.modules.scraper_learning_system.ScraperLearningSystem",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.scraper_learning_system",
      "target": "src.pokertool.modules.scraper_learning_system.create_learning_system",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.betfair_accuracy_improvements",
      "target": "src.pokertool.modules.betfair_accuracy_improvements.SeatPosition",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.betfair_accuracy_improvements",
      "target": "src.pokertool.modules.betfair_accuracy_improvements.BetfairROI",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.betfair_accuracy_improvements",
      "target": "src.pokertool.modules.betfair_accuracy_improvements.SeatMapping",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.betfair_accuracy_improvements",
      "target": "src.pokertool.modules.betfair_accuracy_improvements.PlayerNameExtractor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.betfair_accuracy_improvements",
      "target": "src.pokertool.modules.betfair_accuracy_improvements.CurrencyExtractor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.betfair_accuracy_improvements",
      "target": "src.pokertool.modules.betfair_accuracy_improvements.StackPotDistinguisher",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.betfair_accuracy_improvements",
      "target": "src.pokertool.modules.betfair_accuracy_improvements.BetfairCardDetector",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.betfair_accuracy_improvements",
      "target": "src.pokertool.modules.betfair_accuracy_improvements.DealerButtonDetector",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.betfair_accuracy_improvements",
      "target": "src.pokertool.modules.betfair_accuracy_improvements.BetfairSeatMapper",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.betfair_accuracy_improvements",
      "target": "src.pokertool.modules.betfair_accuracy_improvements.BetfairAccuracyEngine",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.betfair_accuracy_improvements",
      "target": "src.pokertool.modules.betfair_accuracy_improvements.create_betfair_engine",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.browser_tab_capture",
      "target": "src.pokertool.modules.browser_tab_capture.ChromeTabCaptureError",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.browser_tab_capture",
      "target": "src.pokertool.modules.browser_tab_capture.ChromeTabCaptureConfig",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.browser_tab_capture",
      "target": "src.pokertool.modules.browser_tab_capture.ChromeTabCapture",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.browser_tab_capture",
      "target": "src.pokertool.modules.browser_tab_capture.ChromeWindowCaptureConfig",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.browser_tab_capture",
      "target": "src.pokertool.modules.browser_tab_capture.ChromeWindowCapture",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.power_features",
      "target": "src.pokertool.modules.power_features.TableInfo",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.power_features",
      "target": "src.pokertool.modules.power_features.HandRecord",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.power_features",
      "target": "src.pokertool.modules.power_features.OpponentNote",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.power_features",
      "target": "src.pokertool.modules.power_features.SessionGoal",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.power_features",
      "target": "src.pokertool.modules.power_features.MultiTableManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.power_features",
      "target": "src.pokertool.modules.power_features.HandReplaySystem",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.power_features",
      "target": "src.pokertool.modules.power_features.RangeVsRangeCalculator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.power_features",
      "target": "src.pokertool.modules.power_features.AutoNoteSystem",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.power_features",
      "target": "src.pokertool.modules.power_features.SessionGoalTracker",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.power_features",
      "target": "src.pokertool.modules.power_features.VoiceCommandHandler",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.power_features",
      "target": "src.pokertool.modules.power_features.SessionReportExporter",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.power_features",
      "target": "src.pokertool.modules.power_features.PowerFeaturesSystem",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.power_features",
      "target": "src.pokertool.modules.power_features.get_power_features_system",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_screen_scraper",
      "target": "src.pokertool.modules.poker_screen_scraper.ScreenScraperBridge",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_screen_scraper",
      "target": "src.pokertool.modules.poker_screen_scraper.PokerScreenScraper",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_screen_scraper",
      "target": "src.pokertool.modules.poker_screen_scraper.create_scraper",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_screen_scraper",
      "target": "src.pokertool.modules.poker_screen_scraper.test_scraper_functionality",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_screen_scraper",
      "target": "src.pokertool.modules.poker_screen_scraper.get_scraper_info",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_screen_scraper.test_scraper_functionality",
      "target": "src.pokertool.modules.poker_screen_scraper.create_scraper",
      "type": "calls"
    },
    {
      "source": "src.pokertool.modules.adaptive_ui_detector",
      "target": "src.pokertool.modules.adaptive_ui_detector.RegionOfInterest",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.adaptive_ui_detector",
      "target": "src.pokertool.modules.adaptive_ui_detector.BaselineState",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.adaptive_ui_detector",
      "target": "src.pokertool.modules.adaptive_ui_detector.ComparisonResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.adaptive_ui_detector",
      "target": "src.pokertool.modules.adaptive_ui_detector.AdaptiveUIDetector",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.adaptive_ui_detector",
      "target": "src.pokertool.modules.adaptive_ui_detector._parse_resolution",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.modules.adaptive_ui_detector",
      "target": "src.pokertool.modules.adaptive_ui_detector._ensure_uint8",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.modules.adaptive_ui_detector",
      "target": "src.pokertool.modules.adaptive_ui_detector._to_grayscale",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.modules.adaptive_ui_detector",
      "target": "src.pokertool.modules.adaptive_ui_detector._average_hash",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.modules.adaptive_ui_detector",
      "target": "src.pokertool.modules.adaptive_ui_detector._difference_hash",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.modules.adaptive_ui_detector",
      "target": "src.pokertool.modules.adaptive_ui_detector._phash",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.modules.adaptive_ui_detector",
      "target": "src.pokertool.modules.adaptive_ui_detector._hamming_distance",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.modules.adaptive_ui_detector",
      "target": "src.pokertool.modules.adaptive_ui_detector.create_detector",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.adaptive_ui_detector._average_hash",
      "target": "src.pokertool.modules.adaptive_ui_detector._to_grayscale",
      "type": "calls"
    },
    {
      "source": "src.pokertool.modules.adaptive_ui_detector._difference_hash",
      "target": "src.pokertool.modules.adaptive_ui_detector._to_grayscale",
      "type": "calls"
    },
    {
      "source": "src.pokertool.modules.adaptive_ui_detector._phash",
      "target": "src.pokertool.modules.adaptive_ui_detector._to_grayscale",
      "type": "calls"
    },
    {
      "source": "src.pokertool.modules.reliability_monitor",
      "target": "src.pokertool.modules.reliability_monitor.HealthStatus",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.reliability_monitor",
      "target": "src.pokertool.modules.reliability_monitor.ComponentType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.reliability_monitor",
      "target": "src.pokertool.modules.reliability_monitor.HealthMetric",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.reliability_monitor",
      "target": "src.pokertool.modules.reliability_monitor.ErrorReport",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.reliability_monitor",
      "target": "src.pokertool.modules.reliability_monitor.AutoRecoveryManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.reliability_monitor",
      "target": "src.pokertool.modules.reliability_monitor.GracefulDegradationManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.reliability_monitor",
      "target": "src.pokertool.modules.reliability_monitor.HealthMonitor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.reliability_monitor",
      "target": "src.pokertool.modules.reliability_monitor.ErrorReporter",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.reliability_monitor",
      "target": "src.pokertool.modules.reliability_monitor.StatePersistenceManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.reliability_monitor",
      "target": "src.pokertool.modules.reliability_monitor.ConnectionQualityMonitor",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.reliability_monitor",
      "target": "src.pokertool.modules.reliability_monitor.MemoryLeakDetector",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.reliability_monitor",
      "target": "src.pokertool.modules.reliability_monitor.MultiSiteFallbackChain",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.reliability_monitor",
      "target": "src.pokertool.modules.reliability_monitor.ReliabilitySystem",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.reliability_monitor",
      "target": "src.pokertool.modules.reliability_monitor.get_reliability_system",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.hand_replay_system",
      "target": "src.pokertool.modules.hand_replay_system.ActionType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.hand_replay_system",
      "target": "src.pokertool.modules.hand_replay_system.Street",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.hand_replay_system",
      "target": "src.pokertool.modules.hand_replay_system.PlayerAction",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.hand_replay_system",
      "target": "src.pokertool.modules.hand_replay_system.ReplayFrame",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.hand_replay_system",
      "target": "src.pokertool.modules.hand_replay_system.Annotation",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.hand_replay_system",
      "target": "src.pokertool.modules.hand_replay_system.AnnotationManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.hand_replay_system",
      "target": "src.pokertool.modules.hand_replay_system.AnalysisData",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.hand_replay_system",
      "target": "src.pokertool.modules.hand_replay_system.AnalysisOverlay",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.hand_replay_system",
      "target": "src.pokertool.modules.hand_replay_system.ReplayAnimation",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.hand_replay_system",
      "target": "src.pokertool.modules.hand_replay_system.ShareManager",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.hand_replay_system",
      "target": "src.pokertool.modules.hand_replay_system.HandReplaySystem",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_gui_enhanced",
      "target": "src.pokertool.modules.poker_gui_enhanced.ValidationState",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_gui_enhanced",
      "target": "src.pokertool.modules.poker_gui_enhanced.UITheme",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_gui_enhanced",
      "target": "src.pokertool.modules.poker_gui_enhanced.UIState",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_gui_enhanced",
      "target": "src.pokertool.modules.poker_gui_enhanced.EnhancedCardEntry",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_gui_enhanced",
      "target": "src.pokertool.modules.poker_gui_enhanced.StatusBar",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_gui_enhanced",
      "target": "src.pokertool.modules.poker_gui_enhanced.VisualCard",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_gui_enhanced",
      "target": "src.pokertool.modules.poker_gui_enhanced.CardSelectionPanel",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_gui_enhanced",
      "target": "src.pokertool.modules.poker_gui_enhanced.TableVisualization",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_gui_enhanced",
      "target": "src.pokertool.modules.poker_gui_enhanced.EnhancedPokerAssistant",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_gui_enhanced",
      "target": "src.pokertool.modules.poker_gui_enhanced.initialise_db_if_needed",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_gui_enhanced",
      "target": "src.pokertool.modules.poker_gui_enhanced.open_db",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_gui_enhanced",
      "target": "src.pokertool.modules.poker_gui_enhanced._ensure_parent",
      "type": "contains",
      "visibility": "private"
    },
    {
      "source": "src.pokertool.modules.multi_table_segmenter",
      "target": "src.pokertool.modules.multi_table_segmenter.DetectedObject",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.multi_table_segmenter",
      "target": "src.pokertool.modules.multi_table_segmenter.TableLayout",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.multi_table_segmenter",
      "target": "src.pokertool.modules.multi_table_segmenter.SegmentationResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.multi_table_segmenter",
      "target": "src.pokertool.modules.multi_table_segmenter.MultiTableSegmenter",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.multi_table_segmenter",
      "target": "src.pokertool.modules.multi_table_segmenter.create_segmenter",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.range_construction_tool",
      "target": "src.pokertool.modules.range_construction_tool.RangeFormat",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.range_construction_tool",
      "target": "src.pokertool.modules.range_construction_tool.HandType",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.range_construction_tool",
      "target": "src.pokertool.modules.range_construction_tool.HandRange",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.range_construction_tool",
      "target": "src.pokertool.modules.range_construction_tool.RangeGrid",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.range_construction_tool",
      "target": "src.pokertool.modules.range_construction_tool.RangeComparator",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.range_construction_tool",
      "target": "src.pokertool.modules.range_construction_tool.RangeTemplate",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.range_construction_tool",
      "target": "src.pokertool.modules.range_construction_tool.RangeImportExport",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.range_construction_tool",
      "target": "src.pokertool.modules.range_construction_tool.RangeConstructionTool",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_screen_scraper_betfair",
      "target": "src.pokertool.modules.poker_screen_scraper_betfair.PokerSite",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_screen_scraper_betfair",
      "target": "src.pokertool.modules.poker_screen_scraper_betfair.TableRegion",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_screen_scraper_betfair",
      "target": "src.pokertool.modules.poker_screen_scraper_betfair.SeatInfo",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_screen_scraper_betfair",
      "target": "src.pokertool.modules.poker_screen_scraper_betfair.TableState",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_screen_scraper_betfair",
      "target": "src.pokertool.modules.poker_screen_scraper_betfair.DetectionResult",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_screen_scraper_betfair",
      "target": "src.pokertool.modules.poker_screen_scraper_betfair.Card",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_screen_scraper_betfair",
      "target": "src.pokertool.modules.poker_screen_scraper_betfair.BetfairPokerDetector",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_screen_scraper_betfair",
      "target": "src.pokertool.modules.poker_screen_scraper_betfair.UniversalPokerDetector",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_screen_scraper_betfair",
      "target": "src.pokertool.modules.poker_screen_scraper_betfair.PokerScreenScraper",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_screen_scraper_betfair",
      "target": "src.pokertool.modules.poker_screen_scraper_betfair.create_scraper",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_screen_scraper_betfair",
      "target": "src.pokertool.modules.poker_screen_scraper_betfair.test_scraper_betfair",
      "type": "contains",
      "visibility": "public"
    },
    {
      "source": "src.pokertool.modules.poker_screen_scraper_betfair.test_scraper_betfair",
      "target": "src.pokertool.modules.poker_screen_scraper_betfair.create_scraper",
      "type": "calls"
    }
  ],
  "metrics": {
    "node_count": 1283,
    "edge_count": 1267,
    "density": 0.0007703036102737952,
    "is_dag": false,
    "degree_centrality": {
      "src.pokertool.roi_tracking_system": 0.0046801872074883,
      "src.pokertool.roi_tracking_system.ROI": 0.00078003120124805,
      "src.pokertool.roi_tracking_system.ROIState": 0.00078003120124805,
      "src.pokertool.roi_tracking_system.ROITrackingMetrics": 0.00078003120124805,
      "src.pokertool.roi_tracking_system.ROITrackingSystem": 0.00078003120124805,
      "src.pokertool.roi_tracking_system.get_roi_tracker": 0.00078003120124805,
      "src.pokertool.roi_tracking_system.reset_roi_tracker": 0.00078003120124805,
      "src.pokertool.performance_telemetry": 0.0062402496099844,
      "src.pokertool.performance_telemetry.TelemetryEntry": 0.00078003120124805,
      "src.pokertool.performance_telemetry.PerformanceTelemetry": 0.00078003120124805,
      "src.pokertool.performance_telemetry.timed": 0.0015600624024961,
      "src.pokertool.performance_telemetry.telemetry_section": 0.0015600624024961,
      "src.pokertool.performance_telemetry.telemetry_instant": 0.0015600624024961,
      "src.pokertool.performance_telemetry.init_telemetry": 0.00078003120124805,
      "src.pokertool.performance_telemetry.get_telemetry": 0.0031201248049922,
      "src.pokertool.performance_telemetry.shutdown_telemetry": 0.00078003120124805,
      "src.pokertool.card_recognizer": 0.0031201248049922,
      "src.pokertool.card_recognizer.Card": 0.00078003120124805,
      "src.pokertool.card_recognizer.CardTemplate": 0.00078003120124805,
      "src.pokertool.card_recognizer.RecognitionResult": 0.00078003120124805,
      "src.pokertool.card_recognizer.CardRecognitionEngine": 0.00078003120124805,
      "src.pokertool.bayesian_profiler": 0.0062402496099844,
      "src.pokertool.bayesian_profiler.PlayerTendency": 0.00078003120124805,
      "src.pokertool.bayesian_profiler.PlayerStyle": 0.00078003120124805,
      "src.pokertool.bayesian_profiler.BetaDistribution": 0.00078003120124805,
      "src.pokertool.bayesian_profiler.GaussianDistribution": 0.00078003120124805,
      "src.pokertool.bayesian_profiler.PlayerProfile": 0.00078003120124805,
      "src.pokertool.bayesian_profiler.BeliefUpdater": 0.00078003120124805,
      "src.pokertool.bayesian_profiler.ActionPredictor": 0.00078003120124805,
      "src.pokertool.bayesian_profiler.BayesianOpponentProfiler": 0.00078003120124805,
      "src.pokertool.system_health_checker": 0.02106084243369735,
      "src.pokertool.system_health_checker.HealthStatus": 0.00078003120124805,
      "src.pokertool.system_health_checker.HealthCheck": 0.00078003120124805,
      "src.pokertool.system_health_checker.SystemHealthChecker": 0.00078003120124805,
      "src.pokertool.system_health_checker._join_url": 0.00078003120124805,
      "src.pokertool.system_health_checker._http_get_status": 0.0031201248049922,
      "src.pokertool.system_health_checker.get_health_checker": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_api_server_health": 0.0015600624024961,
      "src.pokertool.system_health_checker.check_database_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_ocr_engine_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_screen_capture_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_model_calibration_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_frontend_health": 0.0015600624024961,
      "src.pokertool.system_health_checker.check_poker_table_detection_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_gto_solver_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_opponent_modeling_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_sequential_opponent_fusion_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_active_learning_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_neural_evaluator_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_hand_range_analyzer_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_scraping_accuracy_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_roi_tracking_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_tournament_support_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_multi_table_support_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_hand_history_database_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_websocket_server_health": 0.0015600624024961,
      "src.pokertool.system_health_checker.check_region_extraction_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.register_all_health_checks": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling": 0.01326053042121685,
      "src.pokertool.ml_opponent_modeling.ModelType": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling.PlayerType": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling.PlayerStats": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling.HandHistory": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling.ModelPrediction": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling.FeatureEngineering": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling.OpponentModel": 0.00234009360374415,
      "src.pokertool.ml_opponent_modeling.RandomForestOpponentModel": 0.0015600624024961,
      "src.pokertool.ml_opponent_modeling.NeuralNetworkOpponentModel": 0.0015600624024961,
      "src.pokertool.ml_opponent_modeling.OpponentModelingSystem": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling._disable_coreml_provider": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling.get_opponent_modeling_system": 0.0031201248049922,
      "src.pokertool.ml_opponent_modeling.observe_opponent_hand": 0.0015600624024961,
      "src.pokertool.ml_opponent_modeling.predict_opponent_action": 0.0015600624024961,
      "src.pokertool.ml_opponent_modeling.get_opponent_profile": 0.0015600624024961,
      "src.pokertool.ml_opponent_modeling.analyze_table_dynamics": 0.0015600624024961,
      "src.pokertool.ml_opponent_modeling._generate_table_recommendations": 0.0015600624024961,
      "src.pokertool.global_error_handler": 0.0039001560062402497,
      "src.pokertool.global_error_handler.ErrorCategory": 0.00078003120124805,
      "src.pokertool.global_error_handler.ErrorSeverity": 0.00078003120124805,
      "src.pokertool.global_error_handler.ErrorResponse": 0.00078003120124805,
      "src.pokertool.global_error_handler.GlobalErrorHandler": 0.00078003120124805,
      "src.pokertool.global_error_handler.handle_errors": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system": 0.014820592823712949,
      "src.pokertool.scraping_reliability_system.RecoveryAction": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.RecoveryStrategy": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.AutomaticRecoveryManager": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.ExtractionMethod": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.RedundantExtractionPaths": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.HealthMetrics": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.HealthMonitor": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.FieldConfidence": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.PartialState": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.GracefulDegradation": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.StatePersistence": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.ErrorPattern": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.ErrorPatternDetector": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.WatchdogTimer": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.ResourceLeakDetector": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.QualityMetrics": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.AutoRecalibrator": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.ScrapingReliabilitySystem": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.get_reliability_system": 0.00078003120124805,
      "src.pokertool.test_utils": 0.0031201248049922,
      "src.pokertool.test_utils.is_test_mode": 0.00078003120124805,
      "src.pokertool.test_utils.safe_messagebox_showerror": 0.00078003120124805,
      "src.pokertool.test_utils.safe_messagebox_showwarning": 0.00078003120124805,
      "src.pokertool.test_utils.safe_messagebox_showinfo": 0.00078003120124805,
      "src.pokertool.desktop_independent_scraper": 0.00546021840873635,
      "src.pokertool.desktop_independent_scraper.WindowInfo": 0.00078003120124805,
      "src.pokertool.desktop_independent_scraper.ScreenRegion": 0.00078003120124805,
      "src.pokertool.desktop_independent_scraper.PokerDetectionMode": 0.00078003120124805,
      "src.pokertool.desktop_independent_scraper.DesktopIndependentScraper": 0.00078003120124805,
      "src.pokertool.desktop_independent_scraper.create_desktop_scraper": 0.00234009360374415,
      "src.pokertool.desktop_independent_scraper.quick_poker_scan": 0.0015600624024961,
      "src.pokertool.desktop_independent_scraper.test_desktop_independence": 0.0015600624024961,
      "src.pokertool.cfr_plus": 0.0046801872074883,
      "src.pokertool.cfr_plus.CFRPlusSolution": 0.00078003120124805,
      "src.pokertool.cfr_plus.CFRPlusSolver": 0.00078003120124805,
      "src.pokertool.cfr_plus._normalise": 0.00078003120124805,
      "src.pokertool.cfr_plus._dot": 0.00078003120124805,
      "src.pokertool.cfr_plus._matrix_vector_product": 0.00078003120124805,
      "src.pokertool.cfr_plus._transposed_matrix_vector_product": 0.00078003120124805,
      "src.pokertool.analytics_dashboard": 0.0031201248049922,
      "src.pokertool.analytics_dashboard.UsageEvent": 0.00078003120124805,
      "src.pokertool.analytics_dashboard.PrivacySettings": 0.00078003120124805,
      "src.pokertool.analytics_dashboard.DashboardMetrics": 0.00078003120124805,
      "src.pokertool.analytics_dashboard.AnalyticsDashboard": 0.00078003120124805,
      "src.pokertool.thread_manager": 0.0031201248049922,
      "src.pokertool.thread_manager.ThreadManager": 0.00078003120124805,
      "src.pokertool.thread_manager.get_thread_manager": 0.00234009360374415,
      "src.pokertool.thread_manager.submit_task": 0.0031201248049922,
      "src.pokertool.thread_manager.start_thread": 0.0031201248049922,
      "src.pokertool.sequential_opponent_fusion": 0.0062402496099844,
      "src.pokertool.sequential_opponent_fusion.ActionType": 0.00078003120124805,
      "src.pokertool.sequential_opponent_fusion.Street": 0.00078003120124805,
      "src.pokertool.sequential_opponent_fusion.PlayerAction": 0.00078003120124805,
      "src.pokertool.sequential_opponent_fusion.HandSequence": 0.00078003120124805,
      "src.pokertool.sequential_opponent_fusion.SequenceFeatures": 0.00078003120124805,
      "src.pokertool.sequential_opponent_fusion.SimpleTransformer": 0.00078003120124805,
      "src.pokertool.sequential_opponent_fusion.SequentialOpponentFusion": 0.00078003120124805,
      "src.pokertool.sequential_opponent_fusion.get_fusion_system": 0.00078003120124805,
      "src.pokertool.tournament_tracker": 0.0046801872074883,
      "src.pokertool.tournament_tracker.TournamentStructure": 0.00078003120124805,
      "src.pokertool.tournament_tracker.TournamentEvent": 0.00078003120124805,
      "src.pokertool.tournament_tracker.TournamentResult": 0.00078003120124805,
      "src.pokertool.tournament_tracker.SatelliteLink": 0.00078003120124805,
      "src.pokertool.tournament_tracker.TournamentAlert": 0.00078003120124805,
      "src.pokertool.tournament_tracker.TournamentTracker": 0.00078003120124805,
      "src.pokertool.version": 0.0062402496099844,
      "src.pokertool.version._read_version": 0.00078003120124805,
      "src.pokertool.version.get_version": 0.00078003120124805,
      "src.pokertool.version.get_version_info": 0.0015600624024961,
      "src.pokertool.version.get_release_history": 0.0015600624024961,
      "src.pokertool.version.get_version_tuple": 0.00078003120124805,
      "src.pokertool.version.is_compatible": 0.00078003120124805,
      "src.pokertool.version.format_version": 0.0015600624024961,
      "src.pokertool.version.print_version_info": 0.0031201248049922,
      "src.pokertool.scraping_master_system": 0.0039001560062402497,
      "src.pokertool.scraping_master_system.MasterSystemMetrics": 0.00078003120124805,
      "src.pokertool.scraping_master_system.ScrapingMasterSystem": 0.00078003120124805,
      "src.pokertool.scraping_master_system.get_master_system": 0.00234009360374415,
      "src.pokertool.scraping_master_system.process_poker_frame": 0.0015600624024961,
      "src.pokertool.scraping_master_system.get_system_status": 0.0015600624024961,
      "src.pokertool.scraping_accuracy_system": 0.0109204368174727,
      "src.pokertool.scraping_accuracy_system.TemporalConsensus": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system.PotValidator": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system.SpatialValidator": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system.PlayerAction": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system.PlayerStateMachine": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system.CardSuitValidator": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system.BlindsChecker": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system.StackTracker": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system.OCRPostProcessor": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system.ExtractionStrategy": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system.MultiStrategyFusion": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system.AccuracyMetrics": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system.ScrapingAccuracySystem": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system.get_accuracy_system": 0.00078003120124805,
      "src.pokertool.timing_analyzer": 0.0078003120124804995,
      "src.pokertool.timing_analyzer.TimingData": 0.00078003120124805,
      "src.pokertool.timing_analyzer.TimingPattern": 0.00078003120124805,
      "src.pokertool.timing_analyzer.MicrosecondPrecisionTracker": 0.00078003120124805,
      "src.pokertool.timing_analyzer.ActionSequenceTimer": 0.00078003120124805,
      "src.pokertool.timing_analyzer.TimingDeviationDetector": 0.00078003120124805,
      "src.pokertool.timing_analyzer.PatternClusterer": 0.00078003120124805,
      "src.pokertool.timing_analyzer.ConfidenceIntervalCalculator": 0.00078003120124805,
      "src.pokertool.timing_analyzer.TimingTellAnalyzer": 0.00078003120124805,
      "src.pokertool.timing_analyzer.analyze_timing_patterns": 0.00078003120124805,
      "src.pokertool.timing_analyzer.detect_timing_tell": 0.00078003120124805,
      "src.pokertool.database_optimization": 0.00546021840873635,
      "src.pokertool.database_optimization.CachedResult": 0.00078003120124805,
      "src.pokertool.database_optimization.QueryRecord": 0.00078003120124805,
      "src.pokertool.database_optimization.QueryCache": 0.00078003120124805,
      "src.pokertool.database_optimization.QueryMonitor": 0.00078003120124805,
      "src.pokertool.database_optimization.IndexAdvisor": 0.00078003120124805,
      "src.pokertool.database_optimization.ArchiveManager": 0.00078003120124805,
      "src.pokertool.database_optimization.DatabaseOptimizationManager": 0.00078003120124805,
      "src.pokertool.bankroll_management": 0.0093603744149766,
      "src.pokertool.bankroll_management.GameType": 0.00078003120124805,
      "src.pokertool.bankroll_management.StakeLevel": 0.00078003120124805,
      "src.pokertool.bankroll_management.BankrollTransaction": 0.00078003120124805,
      "src.pokertool.bankroll_management.BankrollSnapshot": 0.00078003120124805,
      "src.pokertool.bankroll_management.KellyCriterion": 0.00078003120124805,
      "src.pokertool.bankroll_management.VarianceCalculator": 0.00078003120124805,
      "src.pokertool.bankroll_management.BankrollAlert": 0.00078003120124805,
      "src.pokertool.bankroll_management.BankrollManager": 0.00078003120124805,
      "src.pokertool.bankroll_management.get_bankroll_manager": 0.0031201248049922,
      "src.pokertool.bankroll_management.add_session_result": 0.0015600624024961,
      "src.pokertool.bankroll_management.get_bankroll_summary": 0.0015600624024961,
      "src.pokertool.bankroll_management.get_stake_recommendation": 0.0015600624024961,
      "src.pokertool.dependency_manager": 0.0046801872074883,
      "src.pokertool.dependency_manager.DependencyInfo": 0.00078003120124805,
      "src.pokertool.dependency_manager.SystemReport": 0.00078003120124805,
      "src.pokertool.dependency_manager.DependencyManager": 0.00078003120124805,
      "src.pokertool.dependency_manager.get_dependency_manager": 0.00234009360374415,
      "src.pokertool.dependency_manager.validate_system": 0.0015600624024961,
      "src.pokertool.dependency_manager.is_system_ready": 0.0015600624024961,
      "src.pokertool.hud_profiles": 0.00234009360374415,
      "src.pokertool.hud_profiles.list_hud_profiles": 0.00078003120124805,
      "src.pokertool.hud_profiles.load_hud_profile": 0.00078003120124805,
      "src.pokertool.hud_profiles.save_hud_profile": 0.00078003120124805,
      "src.pokertool.compliance": 0.01014040561622465,
      "src.pokertool.compliance.ConsentType": 0.00078003120124805,
      "src.pokertool.compliance.DataCategory": 0.00078003120124805,
      "src.pokertool.compliance.UserConsent": 0.00078003120124805,
      "src.pokertool.compliance.DataRetentionPolicy": 0.00078003120124805,
      "src.pokertool.compliance.ComplianceViolation": 0.00078003120124805,
      "src.pokertool.compliance.PokerSiteCompliance": 0.00078003120124805,
      "src.pokertool.compliance.GDPRCompliance": 0.00078003120124805,
      "src.pokertool.compliance.ComplianceManager": 0.00078003120124805,
      "src.pokertool.compliance.get_compliance_manager": 0.0039001560062402497,
      "src.pokertool.compliance.check_feature_compliance": 0.0015600624024961,
      "src.pokertool.compliance.record_user_consent": 0.0015600624024961,
      "src.pokertool.compliance.get_user_privacy_report": 0.0015600624024961,
      "src.pokertool.compliance.is_site_compliant": 0.0015600624024961,
      "src.pokertool.icm_calculator": 0.0039001560062402497,
      "src.pokertool.icm_calculator.TournamentState": 0.00078003120124805,
      "src.pokertool.icm_calculator.ICMResult": 0.00078003120124805,
      "src.pokertool.icm_calculator.ICMDecision": 0.00078003120124805,
      "src.pokertool.icm_calculator.MalmuthHarvilleCalculator": 0.00078003120124805,
      "src.pokertool.icm_calculator.ICMCalculator": 0.00078003120124805,
      "src.pokertool.coaching_system": 0.0046801872074883,
      "src.pokertool.coaching_system.DetectedMistake": 0.00078003120124805,
      "src.pokertool.coaching_system.RealTimeAdvice": 0.00078003120124805,
      "src.pokertool.coaching_system.TrainingScenario": 0.00078003120124805,
      "src.pokertool.coaching_system.CoachingProgress": 0.00078003120124805,
      "src.pokertool.coaching_system.CoachingFeedback": 0.00078003120124805,
      "src.pokertool.coaching_system.CoachingSystem": 0.00078003120124805,
      "src.pokertool.scraping_speed_optimizer": 0.0078003120124804995,
      "src.pokertool.scraping_speed_optimizer.ParallelExtractor": 0.00078003120124805,
      "src.pokertool.scraping_speed_optimizer.AdaptiveSamplingRate": 0.00078003120124805,
      "src.pokertool.scraping_speed_optimizer.IncrementalUpdater": 0.00078003120124805,
      "src.pokertool.scraping_speed_optimizer.OCREnginePriority": 0.00078003120124805,
      "src.pokertool.scraping_speed_optimizer.CascadingOCR": 0.00078003120124805,
      "src.pokertool.scraping_speed_optimizer.ExtractionPriority": 0.00078003120124805,
      "src.pokertool.scraping_speed_optimizer.LazyExtractor": 0.00078003120124805,
      "src.pokertool.scraping_speed_optimizer.SpeedOptimizationMetrics": 0.00078003120124805,
      "src.pokertool.scraping_speed_optimizer.ScrapingSpeedOptimizer": 0.00078003120124805,
      "src.pokertool.scraping_speed_optimizer.get_speed_optimizer": 0.00078003120124805,
      "src.pokertool.retry_util": 0.0062402496099844,
      "src.pokertool.retry_util.RetryError": 0.00078003120124805,
      "src.pokertool.retry_util.RetryStrategy": 0.00078003120124805,
      "src.pokertool.retry_util.exponential_backoff": 0.0015600624024961,
      "src.pokertool.retry_util.retry_with_backoff": 0.0015600624024961,
      "src.pokertool.retry_util.retry_api_call": 0.00078003120124805,
      "src.pokertool.retry_util.retry_database_operation": 0.00078003120124805,
      "src.pokertool.retry_util.retry_network_request": 0.00078003120124805,
      "src.pokertool.retry_util.retry_ml_prediction": 0.00078003120124805,
      "src.pokertool.neural_evaluator": 0.0062402496099844,
      "src.pokertool.neural_evaluator.HandState": 0.00078003120124805,
      "src.pokertool.neural_evaluator.TrainingSample": 0.00078003120124805,
      "src.pokertool.neural_evaluator.HandEvaluation": 0.00078003120124805,
      "src.pokertool.neural_evaluator.NeuralHandStrengthEvaluator": 0.00078003120124805,
      "src.pokertool.neural_evaluator.CNNModelConfig": 0.00078003120124805,
      "src.pokertool.neural_evaluator.TrainingProgress": 0.00078003120124805,
      "src.pokertool.neural_evaluator.CNNHandStrengthModel": 0.00078003120124805,
      "src.pokertool.neural_evaluator.RealTimeInferenceEngine": 0.00078003120124805,
      "src.pokertool.status_window": 0.0015600624024961,
      "src.pokertool.status_window.StatusWindow": 0.00078003120124805,
      "src.pokertool.status_window.main": 0.00078003120124805,
      "src.pokertool.hud_designer": 0.00078003120124805,
      "src.pokertool.hud_designer.HUDDesigner": 0.00078003120124805,
      "src.pokertool.quantum_optimizer": 0.0070202808112324495,
      "src.pokertool.quantum_optimizer.OptimizationType": 0.00078003120124805,
      "src.pokertool.quantum_optimizer.QuantumState": 0.00078003120124805,
      "src.pokertool.quantum_optimizer.OptimizationResult": 0.00078003120124805,
      "src.pokertool.quantum_optimizer.QuantumAnnealingSimulator": 0.00078003120124805,
      "src.pokertool.quantum_optimizer.SuperpositionStateExplorer": 0.00078003120124805,
      "src.pokertool.quantum_optimizer.EntanglementCorrelationAnalyzer": 0.00078003120124805,
      "src.pokertool.quantum_optimizer.QuantumInspiredOptimizer": 0.00078003120124805,
      "src.pokertool.quantum_optimizer.quick_optimize_range": 0.00078003120124805,
      "src.pokertool.quantum_optimizer.find_optimal_action": 0.00078003120124805,
      "src.pokertool.scrape_fix": 0.0031201248049922,
      "src.pokertool.scrape_fix.diagnose_chrome_capture": 0.0015600624024961,
      "src.pokertool.scrape_fix.fix_scraper_initialization": 0.0015600624024961,
      "src.pokertool.scrape_fix.test_screen_capture": 0.0015600624024961,
      "src.pokertool.scrape_fix.main": 0.0031201248049922,
      "src.pokertool.watchdog_timer": 0.00546021840873635,
      "src.pokertool.watchdog_timer.WatchdogAction": 0.00078003120124805,
      "src.pokertool.watchdog_timer.OperationInfo": 0.00078003120124805,
      "src.pokertool.watchdog_timer.WatchdogTimeoutError": 0.00078003120124805,
      "src.pokertool.watchdog_timer.WatchdogTimer": 0.00078003120124805,
      "src.pokertool.watchdog_timer.get_watchdog": 0.00234009360374415,
      "src.pokertool.watchdog_timer.watch": 0.0031201248049922,
      "src.pokertool.watchdog_timer.monitor": 0.0031201248049922,
      "src.pokertool.hand_recorder": 0.0039001560062402497,
      "src.pokertool.hand_recorder.HandRecorderState": 0.00078003120124805,
      "src.pokertool.hand_recorder.HandSnapshot": 0.00078003120124805,
      "src.pokertool.hand_recorder.HandRecorder": 0.00078003120124805,
      "src.pokertool.hand_recorder.get_hand_recorder": 0.0015600624024961,
      "src.pokertool.hand_recorder.enable_hand_recording": 0.0015600624024961,
      "src.pokertool.active_learning": 0.01014040561622465,
      "src.pokertool.active_learning.ActionType": 0.00078003120124805,
      "src.pokertool.active_learning.StreetType": 0.00078003120124805,
      "src.pokertool.active_learning.FeedbackStatus": 0.00078003120124805,
      "src.pokertool.active_learning.UncertaintyLevel": 0.00078003120124805,
      "src.pokertool.active_learning.GameState": 0.00078003120124805,
      "src.pokertool.active_learning.Prediction": 0.00078003120124805,
      "src.pokertool.active_learning.ExpertFeedback": 0.00078003120124805,
      "src.pokertool.active_learning.FeedbackEvent": 0.00078003120124805,
      "src.pokertool.active_learning.UncertaintyTriage": 0.00078003120124805,
      "src.pokertool.active_learning.FeedbackStorage": 0.00078003120124805,
      "src.pokertool.active_learning.RetrainingScheduler": 0.00078003120124805,
      "src.pokertool.active_learning.ActiveLearningFeedbackLoop": 0.00078003120124805,
      "src.pokertool.active_learning.get_active_learning": 0.00078003120124805,
      "src.pokertool.community_features": 0.0046801872074883,
      "src.pokertool.community_features.ForumPost": 0.00078003120124805,
      "src.pokertool.community_features.Challenge": 0.00078003120124805,
      "src.pokertool.community_features.MentorshipPair": 0.00078003120124805,
      "src.pokertool.community_features.CommunityTournament": 0.00078003120124805,
      "src.pokertool.community_features.KnowledgeArticle": 0.00078003120124805,
      "src.pokertool.community_features.CommunityPlatform": 0.00078003120124805,
      "src.pokertool.scrape_qa_harness": 0.0078003120124804995,
      "src.pokertool.scrape_qa_harness.FieldType": 0.00078003120124805,
      "src.pokertool.scrape_qa_harness.ThemeType": 0.00078003120124805,
      "src.pokertool.scrape_qa_harness.GroundTruth": 0.00078003120124805,
      "src.pokertool.scrape_qa_harness.QaTestCase": 0.00078003120124805,
      "src.pokertool.scrape_qa_harness.FieldDiff": 0.00078003120124805,
      "src.pokertool.scrape_qa_harness.QaTestResult": 0.00078003120124805,
      "src.pokertool.scrape_qa_harness.SuiteReport": 0.00078003120124805,
      "src.pokertool.scrape_qa_harness.ScrapeQAHarness": 0.00078003120124805,
      "src.pokertool.scrape_qa_harness.create_test_case_from_screenshot": 0.00078003120124805,
      "src.pokertool.scrape_qa_harness.save_test_case": 0.00078003120124805,
      "src.pokertool.database": 0.0039001560062402497,
      "src.pokertool.database.DatabaseType": 0.00078003120124805,
      "src.pokertool.database.DatabaseConfig": 0.00078003120124805,
      "src.pokertool.database.ProductionDatabase": 0.00078003120124805,
      "src.pokertool.database.get_production_db": 0.00078003120124805,
      "src.pokertool.database.migrate_to_production": 0.00078003120124805,
      "src.pokertool.gto_solver": 0.015600624024960999,
      "src.pokertool.gto_solver.Action": 0.00078003120124805,
      "src.pokertool.gto_solver.Street": 0.00078003120124805,
      "src.pokertool.gto_solver.Range": 0.00078003120124805,
      "src.pokertool.gto_solver.GameState": 0.00078003120124805,
      "src.pokertool.gto_solver.Strategy": 0.00078003120124805,
      "src.pokertool.gto_solver.GTOSolution": 0.00078003120124805,
      "src.pokertool.gto_solver.LRUCache": 0.00078003120124805,
      "src.pokertool.gto_solver.EquityCalculator": 0.00078003120124805,
      "src.pokertool.gto_solver.GTOSolver": 0.00078003120124805,
      "src.pokertool.gto_solver.GTOTrainer": 0.00078003120124805,
      "src.pokertool.gto_solver.DeviationExplorer": 0.00078003120124805,
      "src.pokertool.gto_solver.get_gto_solver": 0.00234009360374415,
      "src.pokertool.gto_solver.solve_spot": 0.0015600624024961,
      "src.pokertool.gto_solver.create_standard_ranges": 0.0015600624024961,
      "src.pokertool.gto_solver.parse_range_string": 0.00078003120124805,
      "src.pokertool.gto_solver.calculate_range_equity": 0.00078003120124805,
      "src.pokertool.gto_solver.analyze_gto_spot": 0.0031201248049922,
      "src.pokertool.gto_solver._generate_recommendations": 0.0015600624024961,
      "src.pokertool.gto_solver.create_training_session": 0.00078003120124805,
      "src.pokertool.gto_solver.export_solution": 0.00078003120124805,
      "src.pokertool.smart_poker_detector": 0.00234009360374415,
      "src.pokertool.smart_poker_detector.WindowPriority": 0.00078003120124805,
      "src.pokertool.smart_poker_detector.SmartPokerDetector": 0.00078003120124805,
      "src.pokertool.smart_poker_detector.create_smart_detector": 0.00078003120124805,
      "src.pokertool.automation": 0.0031201248049922,
      "src.pokertool.automation._hash_file": 0.0015600624024961,
      "src.pokertool.automation._get_git_head": 0.0015600624024961,
      "src.pokertool.automation._missing_modules": 0.0015600624024961,
      "src.pokertool.automation.ensure_ml_tests_run": 0.0031201248049922,
      "src.pokertool.game_selection": 0.01014040561622465,
      "src.pokertool.game_selection.GameType": 0.00078003120124805,
      "src.pokertool.game_selection.TablePosition": 0.00078003120124805,
      "src.pokertool.game_selection.PlayerProfile": 0.00078003120124805,
      "src.pokertool.game_selection.TableInfo": 0.00078003120124805,
      "src.pokertool.game_selection.GameRating": 0.00078003120124805,
      "src.pokertool.game_selection.TableScanner": 0.00078003120124805,
      "src.pokertool.game_selection.ProfitabilityCalculator": 0.00078003120124805,
      "src.pokertool.game_selection.PlayerPoolAnalyzer": 0.00078003120124805,
      "src.pokertool.game_selection.SeatSelector": 0.00078003120124805,
      "src.pokertool.game_selection.GameSelectionEngine": 0.00078003120124805,
      "src.pokertool.game_selection.analyze_single_table": 0.00078003120124805,
      "src.pokertool.game_selection.find_best_tables": 0.00078003120124805,
      "src.pokertool.game_selection.create_sample_player": 0.00078003120124805,
      "src.pokertool.ensemble_decision": 0.0062402496099844,
      "src.pokertool.ensemble_decision.DecisionType": 0.00078003120124805,
      "src.pokertool.ensemble_decision.EngineDecision": 0.00078003120124805,
      "src.pokertool.ensemble_decision.EnsembleDecision": 0.00078003120124805,
      "src.pokertool.ensemble_decision.WeightOptimizer": 0.00078003120124805,
      "src.pokertool.ensemble_decision.DisagreementResolver": 0.00078003120124805,
      "src.pokertool.ensemble_decision.PerformanceTracker": 0.00078003120124805,
      "src.pokertool.ensemble_decision.EnsembleDecisionSystem": 0.00078003120124805,
      "src.pokertool.ensemble_decision.create_ensemble": 0.00078003120124805,
      "src.pokertool.input_validation": 0.0062402496099844,
      "src.pokertool.input_validation.ValidationResult": 0.00078003120124805,
      "src.pokertool.input_validation.CardValidator": 0.00078003120124805,
      "src.pokertool.input_validation.BetValidator": 0.00078003120124805,
      "src.pokertool.input_validation.PlayerValidator": 0.00078003120124805,
      "src.pokertool.input_validation.TableValidator": 0.00078003120124805,
      "src.pokertool.input_validation.validate_card": 0.00078003120124805,
      "src.pokertool.input_validation.validate_bet": 0.00078003120124805,
      "src.pokertool.input_validation.sanitize_table_data": 0.00078003120124805,
      "src.pokertool.enhanced_gui": 0.00234009360374415,
      "src.pokertool.enhanced_gui.IntegratedPokerAssistant": 0.00078003120124805,
      "src.pokertool.enhanced_gui._ensure_scraper_dependencies": 0.00078003120124805,
      "src.pokertool.enhanced_gui.main": 0.00078003120124805,
      "src.pokertool.preflop_charts": 0.0031201248049922,
      "src.pokertool.preflop_charts.ChartRecommendation": 0.00078003120124805,
      "src.pokertool.preflop_charts.PreflopChartManager": 0.00078003120124805,
      "src.pokertool.preflop_charts.QuickCharts": 0.00078003120124805,
      "src.pokertool.preflop_charts.PreflopAnalyzer": 0.00078003120124805,
      "src.pokertool.csrf_protection": 0.0031201248049922,
      "src.pokertool.csrf_protection.CSRFProtection": 0.00078003120124805,
      "src.pokertool.csrf_protection.CSRFMiddleware": 0.00078003120124805,
      "src.pokertool.csrf_protection.get_csrf_token": 0.00078003120124805,
      "src.pokertool.csrf_protection.create_csrf_protection": 0.00078003120124805,
      "src.pokertool.concurrency": 0.015600624024960999,
      "src.pokertool.concurrency.TaskPriority": 0.00078003120124805,
      "src.pokertool.concurrency.TaskResult": 0.00078003120124805,
      "src.pokertool.concurrency.ThreadPoolConfig": 0.00078003120124805,
      "src.pokertool.concurrency.ThreadSafeCounter": 0.00078003120124805,
      "src.pokertool.concurrency.ThreadSafeDict": 0.00078003120124805,
      "src.pokertool.concurrency.TaskQueue": 0.00078003120124805,
      "src.pokertool.concurrency.PokerThreadPool": 0.00078003120124805,
      "src.pokertool.concurrency.AsyncManager": 0.00078003120124805,
      "src.pokertool.concurrency.PokerConcurrencyManager": 0.00078003120124805,
      "src.pokertool.concurrency._shutdown_global_thread_pool": 0.00078003120124805,
      "src.pokertool.concurrency.get_thread_pool": 0.0031201248049922,
      "src.pokertool.concurrency.threaded": 0.0015600624024961,
      "src.pokertool.concurrency.cpu_intensive": 0.0015600624024961,
      "src.pokertool.concurrency.get_async_manager": 0.0015600624024961,
      "src.pokertool.concurrency.get_poker_concurrency_manager": 0.00078003120124805,
      "src.pokertool.concurrency.managed_thread_pool": 0.00078003120124805,
      "src.pokertool.concurrency.async_context": 0.0015600624024961,
      "src.pokertool.concurrency.run_concurrent_tasks": 0.00078003120124805,
      "src.pokertool.concurrency.parallel_map": 0.0015600624024961,
      "src.pokertool.concurrency.monitor_performance": 0.00078003120124805,
      "src.pokertool.model_calibration": 0.0070202808112324495,
      "src.pokertool.model_calibration.DriftStatus": 0.00078003120124805,
      "src.pokertool.model_calibration.CalibrationMethod": 0.00078003120124805,
      "src.pokertool.model_calibration.PredictionRecord": 0.00078003120124805,
      "src.pokertool.model_calibration.CalibrationMetrics": 0.00078003120124805,
      "src.pokertool.model_calibration.DriftMetrics": 0.00078003120124805,
      "src.pokertool.model_calibration.OnlineCalibrator": 0.00078003120124805,
      "src.pokertool.model_calibration.DriftDetector": 0.00078003120124805,
      "src.pokertool.model_calibration.ModelCalibrationSystem": 0.00078003120124805,
      "src.pokertool.model_calibration.get_calibration_system": 0.00078003120124805,
      "src.pokertool.node_locker": 0.0015600624024961,
      "src.pokertool.node_locker.NodeLock": 0.00078003120124805,
      "src.pokertool.node_locker.NodeLocker": 0.00078003120124805,
      "src.pokertool.meta_game": 0.0078003120124804995,
      "src.pokertool.meta_game.StrategyLevel": 0.00078003120124805,
      "src.pokertool.meta_game.PlayerReputation": 0.00078003120124805,
      "src.pokertool.meta_game.MetaGameState": 0.00078003120124805,
      "src.pokertool.meta_game.StrategyAdjustment": 0.00078003120124805,
      "src.pokertool.meta_game.LevelingWarSimulator": 0.00078003120124805,
      "src.pokertool.meta_game.DynamicStrategySwitcher": 0.00078003120124805,
      "src.pokertool.meta_game.ExploitationProtectionBalancer": 0.00078003120124805,
      "src.pokertool.meta_game.HistoryDependentStrategy": 0.00078003120124805,
      "src.pokertool.meta_game.ReputationModel": 0.00078003120124805,
      "src.pokertool.meta_game.MetaGameOptimizer": 0.00078003120124805,
      "src.pokertool.session_management": 0.00546021840873635,
      "src.pokertool.session_management.SessionGoal": 0.00078003120124805,
      "src.pokertool.session_management.SessionMetrics": 0.00078003120124805,
      "src.pokertool.session_management.SessionReview": 0.00078003120124805,
      "src.pokertool.session_management.SessionRecord": 0.00078003120124805,
      "src.pokertool.session_management.SessionStorage": 0.00078003120124805,
      "src.pokertool.session_management.SessionManager": 0.00078003120124805,
      "src.pokertool.session_management._now": 0.00078003120124805,
      "src.pokertool.rate_limiter": 0.0070202808112324495,
      "src.pokertool.rate_limiter.RateLimitConfig": 0.00078003120124805,
      "src.pokertool.rate_limiter.RateLimitRecord": 0.00078003120124805,
      "src.pokertool.rate_limiter.RateLimiter": 0.00078003120124805,
      "src.pokertool.rate_limiter.AdaptiveRateLimiter": 0.00078003120124805,
      "src.pokertool.rate_limiter.configure_rate_limit": 0.0015600624024961,
      "src.pokertool.rate_limiter.check_rate_limit": 0.00078003120124805,
      "src.pokertool.rate_limiter.get_rate_limit_stats": 0.00078003120124805,
      "src.pokertool.rate_limiter.reset_rate_limits": 0.00078003120124805,
      "src.pokertool.rate_limiter.setup_default_rate_limits": 0.0015600624024961,
      "src.pokertool.rbac": 0.0062402496099844,
      "src.pokertool.rbac.Permission": 0.00078003120124805,
      "src.pokertool.rbac.Role": 0.00078003120124805,
      "src.pokertool.rbac.RoleDefinition": 0.00078003120124805,
      "src.pokertool.rbac.RBACSystem": 0.00078003120124805,
      "src.pokertool.rbac.get_rbac_system": 0.0031201248049922,
      "src.pokertool.rbac.require_permission": 0.0015600624024961,
      "src.pokertool.rbac.require_role": 0.0015600624024961,
      "src.pokertool.rbac.requires_permission": 0.0015600624024961,
      "src.pokertool": 0.0,
      "src.pokertool.confidence_decision_api": 0.00546021840873635,
      "src.pokertool.confidence_decision_api.ConfidenceBand": 0.00078003120124805,
      "src.pokertool.confidence_decision_api.RiskLevel": 0.00078003120124805,
      "src.pokertool.confidence_decision_api.ConfidenceInterval": 0.00078003120124805,
      "src.pokertool.confidence_decision_api.DecisionRecommendation": 0.00078003120124805,
      "src.pokertool.confidence_decision_api.PredictiveDistribution": 0.00078003120124805,
      "src.pokertool.confidence_decision_api.ConfidenceAwareDecisionAPI": 0.00078003120124805,
      "src.pokertool.confidence_decision_api.get_confidence_decision_api": 0.00078003120124805,
      "src.pokertool.feature_flags": 0.00546021840873635,
      "src.pokertool.feature_flags.FeatureState": 0.00078003120124805,
      "src.pokertool.feature_flags.Feature": 0.00078003120124805,
      "src.pokertool.feature_flags.FeatureFlags": 0.00078003120124805,
      "src.pokertool.feature_flags.get_feature_flags": 0.0015600624024961,
      "src.pokertool.feature_flags.reset_feature_flags": 0.00078003120124805,
      "src.pokertool.feature_flags.is_feature_enabled": 0.00234009360374415,
      "src.pokertool.feature_flags.requires_feature": 0.0015600624024961,
      "src.pokertool.production_database": 0.0046801872074883,
      "src.pokertool.production_database.DatabaseConfig": 0.00078003120124805,
      "src.pokertool.production_database.MigrationStats": 0.00078003120124805,
      "src.pokertool.production_database.ProductionDatabase": 0.00078003120124805,
      "src.pokertool.production_database.get_production_db": 0.0015600624024961,
      "src.pokertool.production_database.initialize_production_db": 0.0015600624024961,
      "src.pokertool.production_database.migrate_to_production": 0.00234009360374415,
      "src.pokertool.frame_differencing_engine": 0.0031201248049922,
      "src.pokertool.frame_differencing_engine.FrameDifferenceMetrics": 0.00078003120124805,
      "src.pokertool.frame_differencing_engine.FrameDifferencingEngine": 0.00078003120124805,
      "src.pokertool.frame_differencing_engine.get_frame_diff_engine": 0.00078003120124805,
      "src.pokertool.frame_differencing_engine.reset_frame_diff_engine": 0.00078003120124805,
      "src.pokertool.nash_solver": 0.0046801872074883,
      "src.pokertool.nash_solver.NashResult": 0.00078003120124805,
      "src.pokertool.nash_solver.AdvancedNashSolver": 0.00078003120124805,
      "src.pokertool.nash_solver.InformationSet": 0.00078003120124805,
      "src.pokertool.nash_solver.AbstractedNode": 0.00078003120124805,
      "src.pokertool.nash_solver.GameTreeAbstractor": 0.00078003120124805,
      "src.pokertool.nash_solver.HistogramAbstractor": 0.00078003120124805,
      "src.pokertool.correlation_id_middleware": 0.0062402496099844,
      "src.pokertool.correlation_id_middleware.CorrelationIdMiddleware": 0.00078003120124805,
      "src.pokertool.correlation_id_middleware.CorrelationIdFilter": 0.00078003120124805,
      "src.pokertool.correlation_id_middleware.CorrelationIdPropagator": 0.00078003120124805,
      "src.pokertool.correlation_id_middleware.DatabaseQueryTracer": 0.00078003120124805,
      "src.pokertool.correlation_id_middleware.get_correlation_id": 0.00078003120124805,
      "src.pokertool.correlation_id_middleware.set_correlation_id": 0.00078003120124805,
      "src.pokertool.correlation_id_middleware.with_correlation_id": 0.00078003120124805,
      "src.pokertool.correlation_id_middleware.get_logger_with_correlation_id": 0.00078003120124805,
      "src.pokertool.db_performance_monitor": 0.0062402496099844,
      "src.pokertool.db_performance_monitor.PerformanceConfig": 0.00078003120124805,
      "src.pokertool.db_performance_monitor.QueryMetrics": 0.00078003120124805,
      "src.pokertool.db_performance_monitor.QueryStats": 0.00078003120124805,
      "src.pokertool.db_performance_monitor.DatabasePerformanceMonitor": 0.00078003120124805,
      "src.pokertool.db_performance_monitor._QueryTracker": 0.00078003120124805,
      "src.pokertool.db_performance_monitor.get_performance_report": 0.00078003120124805,
      "src.pokertool.db_performance_monitor.reset_performance_stats": 0.00078003120124805,
      "src.pokertool.db_performance_monitor.cleanup_old_performance_data": 0.00078003120124805,
      "src.pokertool.leveling_war": 0.0062402496099844,
      "src.pokertool.leveling_war.ThinkingLevel": 0.00078003120124805,
      "src.pokertool.leveling_war.LevelingOutcome": 0.00078003120124805,
      "src.pokertool.leveling_war.LevelEstimator": 0.00078003120124805,
      "src.pokertool.leveling_war.StrategyEvolution": 0.00078003120124805,
      "src.pokertool.leveling_war.CounterStrategyGenerator": 0.00078003120124805,
      "src.pokertool.leveling_war.LevelingWarSimulator": 0.00078003120124805,
      "src.pokertool.leveling_war.MetaGameTracker": 0.00078003120124805,
      "src.pokertool.leveling_war.analyze_leveling_war": 0.00078003120124805,
      "src.pokertool.range_generator": 0.00858034321372855,
      "src.pokertool.range_generator.Position": 0.00078003120124805,
      "src.pokertool.range_generator.Action": 0.00078003120124805,
      "src.pokertool.range_generator.RangeParameters": 0.00078003120124805,
      "src.pokertool.range_generator.HandRange": 0.00078003120124805,
      "src.pokertool.range_generator.HandParser": 0.00078003120124805,
      "src.pokertool.range_generator.AnteAdjuster": 0.00078003120124805,
      "src.pokertool.range_generator.StraddleAdapter": 0.00078003120124805,
      "src.pokertool.range_generator.ICMAdjuster": 0.00078003120124805,
      "src.pokertool.range_generator.MultiWayAdjuster": 0.00078003120124805,
      "src.pokertool.range_generator.BaseRangeGenerator": 0.00078003120124805,
      "src.pokertool.range_generator.RangeGenerator": 0.00078003120124805,
      "src.pokertool.async_scraper_executor": 0.0039001560062402497,
      "src.pokertool.async_scraper_executor.PerformanceMetrics": 0.00078003120124805,
      "src.pokertool.async_scraper_executor.ScrapeResult": 0.00078003120124805,
      "src.pokertool.async_scraper_executor.AsyncScraperExecutor": 0.00078003120124805,
      "src.pokertool.async_scraper_executor.get_async_executor": 0.00078003120124805,
      "src.pokertool.async_scraper_executor.shutdown_async_executor": 0.00078003120124805,
      "src.pokertool.multi_table_support": 0.0124804992199688,
      "src.pokertool.multi_table_support.TableLayout": 0.00078003120124805,
      "src.pokertool.multi_table_support.TableState": 0.00078003120124805,
      "src.pokertool.multi_table_support.TablePriority": 0.00078003120124805,
      "src.pokertool.multi_table_support.TableWindow": 0.00078003120124805,
      "src.pokertool.multi_table_support.HotkeyAction": 0.00078003120124805,
      "src.pokertool.multi_table_support.TableManager": 0.00078003120124805,
      "src.pokertool.multi_table_support.get_table_manager": 0.0078003120124804995,
      "src.pokertool.multi_table_support.add_poker_table": 0.0015600624024961,
      "src.pokertool.multi_table_support.remove_poker_table": 0.0015600624024961,
      "src.pokertool.multi_table_support.tile_tables": 0.0015600624024961,
      "src.pokertool.multi_table_support.focus_next": 0.0015600624024961,
      "src.pokertool.multi_table_support.get_active_tables": 0.0015600624024961,
      "src.pokertool.multi_table_support.get_tables_needing_action": 0.0015600624024961,
      "src.pokertool.multi_table_support.setup_custom_hotkey": 0.0015600624024961,
      "src.pokertool.multi_table_support.save_table_session": 0.0015600624024961,
      "src.pokertool.multi_table_support.load_table_session": 0.0015600624024961,
      "src.pokertool.blocker_effects": 0.0070202808112324495,
      "src.pokertool.blocker_effects.BlockerType": 0.00078003120124805,
      "src.pokertool.blocker_effects.BlockerStrength": 0.00078003120124805,
      "src.pokertool.blocker_effects.BoardTextureAnalyzer": 0.00078003120124805,
      "src.pokertool.blocker_effects.EquityAdjuster": 0.00078003120124805,
      "src.pokertool.blocker_effects.BluffSelector": 0.00078003120124805,
      "src.pokertool.blocker_effects.RangeBlockerAnalysis": 0.00078003120124805,
      "src.pokertool.blocker_effects.quick_blocker_eval": 0.00078003120124805,
      "src.pokertool.blocker_effects.get_best_bluff_combos": 0.00078003120124805,
      "src.pokertool.blocker_effects.calculate_blocker_equity_boost": 0.00078003120124805,
      "src.pokertool.hand_history_db": 0.00546021840873635,
      "src.pokertool.hand_history_db.GameStage": 0.00078003120124805,
      "src.pokertool.hand_history_db.ActionType": 0.00078003120124805,
      "src.pokertool.hand_history_db.PlayerInfo": 0.00078003120124805,
      "src.pokertool.hand_history_db.PlayerAction": 0.00078003120124805,
      "src.pokertool.hand_history_db.HandHistory": 0.00078003120124805,
      "src.pokertool.hand_history_db.HandHistoryDatabase": 0.00078003120124805,
      "src.pokertool.hand_history_db.get_hand_history_db": 0.00078003120124805,
      "src.pokertool.threading": 0.01170046801872075,
      "src.pokertool.threading.ThreadSafeDict": 0.00078003120124805,
      "src.pokertool.threading.ThreadSafeCounter": 0.00078003120124805,
      "src.pokertool.threading.TaskPriority": 0.00078003120124805,
      "src.pokertool.threading.AsyncCallback": 0.00078003120124805,
      "src.pokertool.threading.get_thread_pool": 0.0015600624024961,
      "src.pokertool.threading.shutdown_thread_pool": 0.0015600624024961,
      "src.pokertool.threading.run_in_thread": 0.0015600624024961,
      "src.pokertool.threading.thread_safe": 0.00078003120124805,
      "src.pokertool.threading.with_timeout": 0.00078003120124805,
      "src.pokertool.threading.register_callback": 0.00078003120124805,
      "src.pokertool.threading.trigger_callbacks": 0.00078003120124805,
      "src.pokertool.threading.get_thread_local": 0.00078003120124805,
      "src.pokertool.threading.set_thread_local": 0.00078003120124805,
      "src.pokertool.threading.clear_thread_local": 0.0015600624024961,
      "src.pokertool.threading.cleanup_threading": 0.00234009360374415,
      "src.pokertool.error_handling": 0.0046801872074883,
      "src.pokertool.error_handling.SecurityError": 0.00078003120124805,
      "src.pokertool.error_handling.CircuitBreaker": 0.00078003120124805,
      "src.pokertool.error_handling.sanitize_input": 0.00078003120124805,
      "src.pokertool.error_handling.retry_on_failure": 0.00078003120124805,
      "src.pokertool.error_handling.run_safely": 0.00078003120124805,
      "src.pokertool.error_handling.db_guard": 0.00078003120124805,
      "src.pokertool.structured_logger": 0.0062402496099844,
      "src.pokertool.structured_logger.LogLevel": 0.00078003120124805,
      "src.pokertool.structured_logger.JSONFormatter": 0.00078003120124805,
      "src.pokertool.structured_logger.StructuredLogger": 0.00078003120124805,
      "src.pokertool.structured_logger.get_logger": 0.0031201248049922,
      "src.pokertool.structured_logger.setup_logging": 0.00078003120124805,
      "src.pokertool.structured_logger.log_api_request": 0.0015600624024961,
      "src.pokertool.structured_logger.log_ml_prediction": 0.0015600624024961,
      "src.pokertool.structured_logger.log_error": 0.0015600624024961,
      "src.pokertool.api": 0.01014040561622465,
      "src.pokertool.api.UserRole": 0.00078003120124805,
      "src.pokertool.api.APIUser": 0.00078003120124805,
      "src.pokertool.api.AuthenticationService": 0.00078003120124805,
      "src.pokertool.api.ConnectionManager": 0.00078003120124805,
      "src.pokertool.api.DetectionWebSocketManager": 0.00078003120124805,
      "src.pokertool.api.APIServices": 0.00078003120124805,
      "src.pokertool.api.PokerToolAPI": 0.00078003120124805,
      "src.pokertool.api.get_detection_ws_manager": 0.0015600624024961,
      "src.pokertool.api.broadcast_detection_event": 0.0015600624024961,
      "src.pokertool.api.get_api": 0.0015600624024961,
      "src.pokertool.api.create_app": 0.00234009360374415,
      "src.pokertool.api.run_api_server": 0.00234009360374415,
      "src.pokertool.api.main": 0.0015600624024961,
      "src.pokertool.network_analysis": 0.0031201248049922,
      "src.pokertool.network_analysis.Interaction": 0.00078003120124805,
      "src.pokertool.network_analysis.PlayerNode": 0.00078003120124805,
      "src.pokertool.network_analysis.EdgeMetrics": 0.00078003120124805,
      "src.pokertool.network_analysis.NetworkAnalysis": 0.00078003120124805,
      "src.pokertool.qaoa_solver": 0.0062402496099844,
      "src.pokertool.qaoa_solver.QAOAParameters": 0.00078003120124805,
      "src.pokertool.qaoa_solver.QAOAResult": 0.00078003120124805,
      "src.pokertool.qaoa_solver.QAOAProblemHamiltonian": 0.00078003120124805,
      "src.pokertool.qaoa_solver.QAOAMixingHamiltonian": 0.00078003120124805,
      "src.pokertool.qaoa_solver.QAOASolver": 0.00078003120124805,
      "src.pokertool.qaoa_solver.PokerQAOASolver": 0.00078003120124805,
      "src.pokertool.qaoa_solver.solve_maxcut_qaoa": 0.00078003120124805,
      "src.pokertool.qaoa_solver.optimize_portfolio_qaoa": 0.00078003120124805,
      "src.pokertool.hud_overlay": 0.0062402496099844,
      "src.pokertool.hud_overlay.HUDConfig": 0.00078003120124805,
      "src.pokertool.hud_overlay.PlayerHUDStats": 0.00078003120124805,
      "src.pokertool.hud_overlay.HUDOverlay": 0.00078003120124805,
      "src.pokertool.hud_overlay.get_hud_overlay": 0.00078003120124805,
      "src.pokertool.hud_overlay.start_hud_overlay": 0.00078003120124805,
      "src.pokertool.hud_overlay.stop_hud_overlay": 0.00078003120124805,
      "src.pokertool.hud_overlay.update_hud_state": 0.00078003120124805,
      "src.pokertool.hud_overlay.is_hud_running": 0.00078003120124805,
      "src.pokertool.pattern_detector": 0.00546021840873635,
      "src.pokertool.pattern_detector.Pattern": 0.00078003120124805,
      "src.pokertool.pattern_detector.TimeSeriesAnalyzer": 0.00078003120124805,
      "src.pokertool.pattern_detector.BehavioralPatternDetector": 0.00078003120124805,
      "src.pokertool.pattern_detector.SequencePatternMatcher": 0.00078003120124805,
      "src.pokertool.pattern_detector.AnomalyDetector": 0.00078003120124805,
      "src.pokertool.pattern_detector.calculate_pattern_strength": 0.00078003120124805,
      "src.pokertool.pattern_detector.combine_pattern_scores": 0.00078003120124805,
      "src.pokertool.smart_ocr_cache": 0.0039001560062402497,
      "src.pokertool.smart_ocr_cache.CachedResult": 0.00078003120124805,
      "src.pokertool.smart_ocr_cache.CacheMetrics": 0.00078003120124805,
      "src.pokertool.smart_ocr_cache.SmartOCRCache": 0.00078003120124805,
      "src.pokertool.smart_ocr_cache.get_ocr_cache": 0.00078003120124805,
      "src.pokertool.smart_ocr_cache.reset_ocr_cache": 0.00078003120124805,
      "src.pokertool.cli": 0.0015600624024961,
      "src.pokertool.cli.main": 0.0015600624024961,
      "src.pokertool.cli.run_test_mode": 0.0015600624024961,
      "src.pokertool.circuit_breaker": 0.0062402496099844,
      "src.pokertool.circuit_breaker.CircuitState": 0.00078003120124805,
      "src.pokertool.circuit_breaker.CircuitBreakerConfig": 0.00078003120124805,
      "src.pokertool.circuit_breaker.CircuitBreakerMetrics": 0.00078003120124805,
      "src.pokertool.circuit_breaker.CircuitBreaker": 0.00078003120124805,
      "src.pokertool.circuit_breaker.CircuitBreakerOpenError": 0.00078003120124805,
      "src.pokertool.circuit_breaker.get_circuit_breaker": 0.00078003120124805,
      "src.pokertool.circuit_breaker.get_all_circuit_breakers": 0.00078003120124805,
      "src.pokertool.circuit_breaker.reset_all_circuit_breakers": 0.00078003120124805,
      "src.pokertool.user_config": 0.00546021840873635,
      "src.pokertool.user_config.UserConfig": 0.00078003120124805,
      "src.pokertool.user_config.ConfigManager": 0.00078003120124805,
      "src.pokertool.user_config.get_config_manager": 0.0039001560062402497,
      "src.pokertool.user_config.get_poker_handle": 0.0031201248049922,
      "src.pokertool.user_config.set_poker_handle": 0.0031201248049922,
      "src.pokertool.user_config.has_poker_handle": 0.0031201248049922,
      "src.pokertool.user_config.prompt_for_poker_handle": 0.0015600624024961,
      "src.pokertool.ocr_recognition": 0.00546021840873635,
      "src.pokertool.ocr_recognition.RecognitionMethod": 0.00078003120124805,
      "src.pokertool.ocr_recognition.CardRegion": 0.00078003120124805,
      "src.pokertool.ocr_recognition.RecognitionResult": 0.00078003120124805,
      "src.pokertool.ocr_recognition.CardTemplateManager": 0.00078003120124805,
      "src.pokertool.ocr_recognition.PokerOCR": 0.00078003120124805,
      "src.pokertool.ocr_recognition.get_poker_ocr": 0.00078003120124805,
      "src.pokertool.ocr_recognition.create_card_regions": 0.00078003120124805,
      "src.pokertool.theme_system": 0.0062402496099844,
      "src.pokertool.theme_system.Palette": 0.00078003120124805,
      "src.pokertool.theme_system.Typography": 0.00078003120124805,
      "src.pokertool.theme_system.Theme": 0.00078003120124805,
      "src.pokertool.theme_system.ThemeDraft": 0.00078003120124805,
      "src.pokertool.theme_system.MarketplaceEntry": 0.00078003120124805,
      "src.pokertool.theme_system.ThemeEngine": 0.00078003120124805,
      "src.pokertool.theme_system.ThemeEditor": 0.00078003120124805,
      "src.pokertool.theme_system.ThemeMarketplace": 0.00078003120124805,
      "src.pokertool.range_merger": 0.0070202808112324495,
      "src.pokertool.range_merger.HandCategory": 0.00078003120124805,
      "src.pokertool.range_merger.HandCombo": 0.00078003120124805,
      "src.pokertool.range_merger.RangeStructure": 0.00078003120124805,
      "src.pokertool.range_merger.MinimumDefenseFrequency": 0.00078003120124805,
      "src.pokertool.range_merger.PolarizationOptimizer": 0.00078003120124805,
      "src.pokertool.range_merger.RemovalEffectsCalculator": 0.00078003120124805,
      "src.pokertool.range_merger.BlockerAnalyzer": 0.00078003120124805,
      "src.pokertool.range_merger.RangeSimplifier": 0.00078003120124805,
      "src.pokertool.range_merger.AdvancedRangeMerger": 0.00078003120124805,
      "src.pokertool.mcts_optimizer": 0.0039001560062402497,
      "src.pokertool.mcts_optimizer.GameState": 0.00078003120124805,
      "src.pokertool.mcts_optimizer.MCTSNode": 0.00078003120124805,
      "src.pokertool.mcts_optimizer.MCTSConfig": 0.00078003120124805,
      "src.pokertool.mcts_optimizer.TranspositionTable": 0.00078003120124805,
      "src.pokertool.mcts_optimizer.MCTSOptimizer": 0.00078003120124805,
      "src.pokertool.master_logging": 0.0093603744149766,
      "src.pokertool.master_logging.LogLevel": 0.00078003120124805,
      "src.pokertool.master_logging.LogCategory": 0.00078003120124805,
      "src.pokertool.master_logging.LogContext": 0.00078003120124805,
      "src.pokertool.master_logging.ErrorDetails": 0.00078003120124805,
      "src.pokertool.master_logging.MasterLogger": 0.00078003120124805,
      "src.pokertool.master_logging.get_master_logger": 0.0046801872074883,
      "src.pokertool.master_logging.log_info": 0.0015600624024961,
      "src.pokertool.master_logging.log_error": 0.00234009360374415,
      "src.pokertool.master_logging.log_warning": 0.0015600624024961,
      "src.pokertool.master_logging.log_performance": 0.0015600624024961,
      "src.pokertool.master_logging.log_security_event": 0.0015600624024961,
      "src.pokertool.master_logging.auto_log_errors": 0.0015600624024961,
      "src.pokertool.synthetic_data_generator": 0.0039001560062402497,
      "src.pokertool.synthetic_data_generator.TableTheme": 0.00078003120124805,
      "src.pokertool.synthetic_data_generator.PlayerSeat": 0.00078003120124805,
      "src.pokertool.synthetic_data_generator.TableState": 0.00078003120124805,
      "src.pokertool.synthetic_data_generator.SyntheticDataGenerator": 0.00078003120124805,
      "src.pokertool.synthetic_data_generator.generate_synthetic_dataset": 0.00078003120124805,
      "src.pokertool.storage": 0.0039001560062402497,
      "src.pokertool.storage.SecurityError": 0.00078003120124805,
      "src.pokertool.storage.SecureDatabase": 0.00078003120124805,
      "src.pokertool.storage.get_secure_db": 0.00078003120124805,
      "src.pokertool.storage.init_db": 0.0015600624024961,
      "src.pokertool.storage.initialise_db_if_needed": 0.0015600624024961,
      "src.pokertool.performance_profiler": 0.0039001560062402497,
      "src.pokertool.performance_profiler.PerformanceSnapshot": 0.00078003120124805,
      "src.pokertool.performance_profiler.AlertRule": 0.00078003120124805,
      "src.pokertool.performance_profiler.OptimizationSuggestion": 0.00078003120124805,
      "src.pokertool.performance_profiler.ProfilingReport": 0.00078003120124805,
      "src.pokertool.performance_profiler.PerformanceProfiler": 0.00078003120124805,
      "src.pokertool.advanced_reporting": 0.0046801872074883,
      "src.pokertool.advanced_reporting.ChartConfig": 0.00078003120124805,
      "src.pokertool.advanced_reporting.ReportSection": 0.00078003120124805,
      "src.pokertool.advanced_reporting.ReportTemplate": 0.00078003120124805,
      "src.pokertool.advanced_reporting.ReportRequest": 0.00078003120124805,
      "src.pokertool.advanced_reporting.ReportResult": 0.00078003120124805,
      "src.pokertool.advanced_reporting.ReportBuilder": 0.00078003120124805,
      "src.pokertool.startup_validator": 0.00546021840873635,
      "src.pokertool.startup_validator.HealthStatus": 0.00078003120124805,
      "src.pokertool.startup_validator.ModuleHealth": 0.00078003120124805,
      "src.pokertool.startup_validator.StartupValidator": 0.00078003120124805,
      "src.pokertool.startup_validator.DependencyCheck": 0.00078003120124805,
      "src.pokertool.startup_validator.check_dependencies": 0.0015600624024961,
      "src.pokertool.startup_validator.print_dependency_report": 0.0015600624024961,
      "src.pokertool.startup_validator.validate_startup_dependencies": 0.00234009360374415,
      "src.pokertool.tournament_support": 0.0109204368174727,
      "src.pokertool.tournament_support.TournamentPhase": 0.00078003120124805,
      "src.pokertool.tournament_support.TournamentType": 0.00078003120124805,
      "src.pokertool.tournament_support.TournamentStructure": 0.00078003120124805,
      "src.pokertool.tournament_support.PayoutStructure": 0.00078003120124805,
      "src.pokertool.tournament_support.PlayerStack": 0.00078003120124805,
      "src.pokertool.tournament_support.TournamentState": 0.00078003120124805,
      "src.pokertool.tournament_support.ICMCalculator": 0.00078003120124805,
      "src.pokertool.tournament_support.PushFoldCalculator": 0.00078003120124805,
      "src.pokertool.tournament_support.TournamentStrategy": 0.00078003120124805,
      "src.pokertool.tournament_support.TournamentAnalyzer": 0.00078003120124805,
      "src.pokertool.tournament_support.get_tournament_analyzer": 0.00078003120124805,
      "src.pokertool.tournament_support.calculate_icm_equity": 0.00078003120124805,
      "src.pokertool.tournament_support.get_tournament_strategy": 0.00078003120124805,
      "src.pokertool.tournament_support.analyze_satellite_spot": 0.00078003120124805,
      "src.pokertool.i18n": 0.0093603744149766,
      "src.pokertool.i18n.LocaleListener": 0.00078003120124805,
      "src.pokertool.i18n.TranslationManager": 0.00078003120124805,
      "src.pokertool.i18n.translate": 0.00078003120124805,
      "src.pokertool.i18n.set_locale": 0.00078003120124805,
      "src.pokertool.i18n.get_current_locale": 0.00078003120124805,
      "src.pokertool.i18n.available_locales": 0.00078003120124805,
      "src.pokertool.i18n.format_decimal": 0.00078003120124805,
      "src.pokertool.i18n.format_currency": 0.00078003120124805,
      "src.pokertool.i18n.convert_currency": 0.00078003120124805,
      "src.pokertool.i18n.format_datetime": 0.00078003120124805,
      "src.pokertool.i18n.register_locale_listener": 0.00078003120124805,
      "src.pokertool.i18n.unregister_locale_listener": 0.00078003120124805,
      "src.pokertool.gpu_preprocessing": 0.0046801872074883,
      "src.pokertool.gpu_preprocessing.AcceleratorType": 0.00078003120124805,
      "src.pokertool.gpu_preprocessing.PerformanceMetrics": 0.00078003120124805,
      "src.pokertool.gpu_preprocessing.GPUCapabilities": 0.00078003120124805,
      "src.pokertool.gpu_preprocessing.GPUPreprocessor": 0.00078003120124805,
      "src.pokertool.gpu_preprocessing.get_gpu_preprocessor": 0.00078003120124805,
      "src.pokertool.gpu_preprocessing.benchmark_accelerators": 0.00078003120124805,
      "src.pokertool.error_handler": 0.0109204368174727,
      "src.pokertool.error_handler.ErrorSeverity": 0.00078003120124805,
      "src.pokertool.error_handler.ErrorCategory": 0.00078003120124805,
      "src.pokertool.error_handler.ErrorContext": 0.00078003120124805,
      "src.pokertool.error_handler.PokerToolError": 0.00546021840873635,
      "src.pokertool.error_handler.SystemError": 0.0015600624024961,
      "src.pokertool.error_handler.NetworkError": 0.0015600624024961,
      "src.pokertool.error_handler.DatabaseError": 0.0015600624024961,
      "src.pokertool.error_handler.MLModelError": 0.0015600624024961,
      "src.pokertool.error_handler.ScrapingError": 0.0015600624024961,
      "src.pokertool.error_handler.ValidationError": 0.0015600624024961,
      "src.pokertool.error_handler.GlobalErrorHandler": 0.00078003120124805,
      "src.pokertool.error_handler.handle_error": 0.00078003120124805,
      "src.pokertool.error_handler.get_error_stats": 0.00078003120124805,
      "src.pokertool.error_handler.setup_error_handler": 0.00078003120124805,
      "src.pokertool.__init__ 2": 0.0,
      "src.pokertool.floating_advice_window": 0.0031201248049922,
      "src.pokertool.floating_advice_window.ActionType": 0.00078003120124805,
      "src.pokertool.floating_advice_window.ConfidenceLevel": 0.00078003120124805,
      "src.pokertool.floating_advice_window.Advice": 0.00078003120124805,
      "src.pokertool.floating_advice_window.FloatingAdviceWindow": 0.00078003120124805,
      "src.pokertool.study_mode": 0.0078003120124804995,
      "src.pokertool.study_mode.Flashcard": 0.00078003120124805,
      "src.pokertool.study_mode.QuizQuestion": 0.00078003120124805,
      "src.pokertool.study_mode.QuizResult": 0.00078003120124805,
      "src.pokertool.study_mode.Lesson": 0.00078003120124805,
      "src.pokertool.study_mode.StudyProgress": 0.00078003120124805,
      "src.pokertool.study_mode.StudyPersistence": 0.00078003120124805,
      "src.pokertool.study_mode.SpacedRepetitionScheduler": 0.00078003120124805,
      "src.pokertool.study_mode.QuizSession": 0.00078003120124805,
      "src.pokertool.study_mode.StudyModeManager": 0.00078003120124805,
      "src.pokertool.study_mode._now": 0.00078003120124805,
      "src.pokertool.bluff_detection": 0.0039001560062402497,
      "src.pokertool.bluff_detection.ActionTiming": 0.00078003120124805,
      "src.pokertool.bluff_detection.ShowdownObservation": 0.00078003120124805,
      "src.pokertool.bluff_detection.BluffAssessment": 0.00078003120124805,
      "src.pokertool.bluff_detection.PlayerBluffProfile": 0.00078003120124805,
      "src.pokertool.bluff_detection.BluffDetectionEngine": 0.00078003120124805,
      "src.pokertool.solver_api": 0.00858034321372855,
      "src.pokertool.solver_api.SolverQuery": 0.00078003120124805,
      "src.pokertool.solver_api.SolverResult": 0.00078003120124805,
      "src.pokertool.solver_api.SolverCache": 0.00078003120124805,
      "src.pokertool.solver_api.ApproximationEngine": 0.00078003120124805,
      "src.pokertool.solver_api.ProgressiveRefiner": 0.00078003120124805,
      "src.pokertool.solver_api.LatencyOptimizer": 0.00078003120124805,
      "src.pokertool.solver_api.ParallelSolverExecutor": 0.00078003120124805,
      "src.pokertool.solver_api.RealtimeSolverAPI": 0.00078003120124805,
      "src.pokertool.solver_api.create_solver_api": 0.0015600624024961,
      "src.pokertool.solver_api.quick_query": 0.0015600624024961,
      "src.pokertool.gto_deviations": 0.01326053042121685,
      "src.pokertool.gto_deviations.ActionType": 0.00078003120124805,
      "src.pokertool.gto_deviations.StrategyType": 0.00078003120124805,
      "src.pokertool.gto_deviations.PopulationTendency": 0.00078003120124805,
      "src.pokertool.gto_deviations.OpponentModel": 0.00078003120124805,
      "src.pokertool.gto_deviations.Deviation": 0.00078003120124805,
      "src.pokertool.gto_deviations.PopulationProfile": 0.00078003120124805,
      "src.pokertool.gto_deviations.DeviationRequest": 0.00078003120124805,
      "src.pokertool.gto_deviations.DeviationResult": 0.00078003120124805,
      "src.pokertool.gto_deviations.MaximumExploitationFinder": 0.00078003120124805,
      "src.pokertool.gto_deviations.NodeLocker": 0.00078003120124805,
      "src.pokertool.gto_deviations.StrategySimplifier": 0.00078003120124805,
      "src.pokertool.gto_deviations.DeviationEVCalculator": 0.00078003120124805,
      "src.pokertool.gto_deviations.GTODeviationEngine": 0.00078003120124805,
      "src.pokertool.gto_deviations.GTODeviationCalculator": 0.00078003120124805,
      "src.pokertool.gto_deviations.create_opponent_model": 0.00078003120124805,
      "src.pokertool.gto_deviations.find_deviations": 0.00078003120124805,
      "src.pokertool.stats_validator": 0.01014040561622465,
      "src.pokertool.stats_validator.TestType": 0.00078003120124805,
      "src.pokertool.stats_validator.CorrectionMethod": 0.00078003120124805,
      "src.pokertool.stats_validator.HypothesisTestResult": 0.00078003120124805,
      "src.pokertool.stats_validator.ConfidenceInterval": 0.00078003120124805,
      "src.pokertool.stats_validator.SampleSizeRecommendation": 0.00078003120124805,
      "src.pokertool.stats_validator.HypothesisTester": 0.00078003120124805,
      "src.pokertool.stats_validator.ConfidenceIntervalCalculator": 0.00078003120124805,
      "src.pokertool.stats_validator.SampleSizeCalculator": 0.00078003120124805,
      "src.pokertool.stats_validator.VarianceReducer": 0.00078003120124805,
      "src.pokertool.stats_validator.PValueCorrector": 0.00078003120124805,
      "src.pokertool.stats_validator.StatisticalValidator": 0.00078003120124805,
      "src.pokertool.stats_validator.quick_validate": 0.00078003120124805,
      "src.pokertool.stats_validator.calculate_required_sample_size": 0.00078003120124805,
      "src.pokertool.api_client": 0.00546021840873635,
      "src.pokertool.api_client.APIError": 0.0031201248049922,
      "src.pokertool.api_client.AuthenticationError": 0.0015600624024961,
      "src.pokertool.api_client.RateLimitError": 0.0015600624024961,
      "src.pokertool.api_client.ValidationError": 0.0015600624024961,
      "src.pokertool.api_client.HandAnalysisRequest": 0.00078003120124805,
      "src.pokertool.api_client.HandAnalysisResponse": 0.00078003120124805,
      "src.pokertool.api_client.PokerToolClient": 0.00078003120124805,
      "src.pokertool.rl_agent": 0.0078003120124804995,
      "src.pokertool.rl_agent.AgentLevel": 0.00078003120124805,
      "src.pokertool.rl_agent.Action": 0.00078003120124805,
      "src.pokertool.rl_agent.PolicyNetwork": 0.00078003120124805,
      "src.pokertool.rl_agent.ValueNetwork": 0.00078003120124805,
      "src.pokertool.rl_agent.ExperienceReplayBuffer": 0.00078003120124805,
      "src.pokertool.rl_agent.RewardShaper": 0.00078003120124805,
      "src.pokertool.rl_agent.CurriculumManager": 0.00078003120124805,
      "src.pokertool.rl_agent.PPOTrainer": 0.00078003120124805,
      "src.pokertool.rl_agent.RLAgent": 0.00078003120124805,
      "src.pokertool.rl_agent.MultiAgentTrainer": 0.00078003120124805,
      "src.pokertool.variance_calculator": 0.0062402496099844,
      "src.pokertool.variance_calculator.SessionResult": 0.00078003120124805,
      "src.pokertool.variance_calculator.VarianceReport": 0.00078003120124805,
      "src.pokertool.variance_calculator.VarianceCalculator": 0.00078003120124805,
      "src.pokertool.variance_calculator.calculate_variance": 0.00078003120124805,
      "src.pokertool.variance_calculator.calculate_standard_deviation": 0.00078003120124805,
      "src.pokertool.variance_calculator.simulate_sessions": 0.00078003120124805,
      "src.pokertool.variance_calculator.calculate_confidence_interval": 0.0015600624024961,
      "src.pokertool.variance_calculator.quick_risk_analysis": 0.0015600624024961,
      "src.pokertool.gui": 0.0062402496099844,
      "src.pokertool.gui.VisualCard": 0.00078003120124805,
      "src.pokertool.gui.CardSelectionPanel": 0.00078003120124805,
      "src.pokertool.gui.PlayerInfo": 0.00078003120124805,
      "src.pokertool.gui.TableVisualization": 0.00078003120124805,
      "src.pokertool.gui.EnhancedPokerAssistantFrame": 0.00078003120124805,
      "src.pokertool.gui.EnhancedPokerAssistant": 0.00078003120124805,
      "src.pokertool.gui.main": 0.0015600624024961,
      "src.pokertool.gui.run": 0.0015600624024961,
      "src.pokertool.documentation_system": 0.0062402496099844,
      "src.pokertool.documentation_system.HelpTopic": 0.00078003120124805,
      "src.pokertool.documentation_system.VideoTutorial": 0.00078003120124805,
      "src.pokertool.documentation_system.GuideStep": 0.00078003120124805,
      "src.pokertool.documentation_system.InteractiveGuide": 0.00078003120124805,
      "src.pokertool.documentation_system.FAQEntry": 0.00078003120124805,
      "src.pokertool.documentation_system.ContextHelp": 0.00078003120124805,
      "src.pokertool.documentation_system.DocumentationSystem": 0.00078003120124805,
      "src.pokertool.documentation_system._sanitize": 0.00078003120124805,
      "src.pokertool.live_decision_engine": 0.0046801872074883,
      "src.pokertool.live_decision_engine.GameState": 0.00078003120124805,
      "src.pokertool.live_decision_engine.WinProbabilityCalculator": 0.00078003120124805,
      "src.pokertool.live_decision_engine.ReasoningGenerator": 0.00078003120124805,
      "src.pokertool.live_decision_engine.LiveDecisionEngine": 0.00078003120124805,
      "src.pokertool.live_decision_engine.get_live_decision_engine": 0.0015600624024961,
      "src.pokertool.live_decision_engine.demo": 0.0015600624024961,
      "src.pokertool.hand_range_analyzer": 0.0046801872074883,
      "src.pokertool.hand_range_analyzer.RangeEntry": 0.00078003120124805,
      "src.pokertool.hand_range_analyzer.RangeProfile": 0.00078003120124805,
      "src.pokertool.hand_range_analyzer.RangeEquityResult": 0.00078003120124805,
      "src.pokertool.hand_range_analyzer.RangeHeatMap": 0.00078003120124805,
      "src.pokertool.hand_range_analyzer.RangeParsingError": 0.00078003120124805,
      "src.pokertool.hand_range_analyzer.HandRangeAnalyzer": 0.00078003120124805,
      "src.pokertool.scrape": 0.00858034321372855,
      "src.pokertool.scrape.RecognitionStats": 0.00078003120124805,
      "src.pokertool.scrape._FallbackScraperBridge": 0.00078003120124805,
      "src.pokertool.scrape.EnhancedScraperManager": 0.00078003120124805,
      "src.pokertool.scrape.run_screen_scraper": 0.00078003120124805,
      "src.pokertool.scrape.stop_screen_scraper": 0.00078003120124805,
      "src.pokertool.scrape.get_scraper_status": 0.00078003120124805,
      "src.pokertool.scrape.run_desktop_independent_scraper": 0.00078003120124805,
      "src.pokertool.scrape.stop_desktop_scraper": 0.00078003120124805,
      "src.pokertool.scrape.get_desktop_scraper_status": 0.00078003120124805,
      "src.pokertool.scrape.save_debug_screenshots_all_desktops": 0.00078003120124805,
      "src.pokertool.scrape.quick_poker_window_scan": 0.00078003120124805,
      "src.pokertool.thread_utils": 0.01170046801872075,
      "src.pokertool.thread_utils.ThreadSafeDict": 0.00078003120124805,
      "src.pokertool.thread_utils.ThreadSafeCounter": 0.00078003120124805,
      "src.pokertool.thread_utils.TaskPriority": 0.00078003120124805,
      "src.pokertool.thread_utils.AsyncCallback": 0.00078003120124805,
      "src.pokertool.thread_utils.get_thread_pool": 0.0015600624024961,
      "src.pokertool.thread_utils.shutdown_thread_pool": 0.0015600624024961,
      "src.pokertool.thread_utils.run_in_thread": 0.0015600624024961,
      "src.pokertool.thread_utils.thread_safe": 0.00078003120124805,
      "src.pokertool.thread_utils.with_timeout": 0.00078003120124805,
      "src.pokertool.thread_utils.register_callback": 0.00078003120124805,
      "src.pokertool.thread_utils.trigger_callbacks": 0.00078003120124805,
      "src.pokertool.thread_utils.get_thread_local": 0.00078003120124805,
      "src.pokertool.thread_utils.set_thread_local": 0.00078003120124805,
      "src.pokertool.thread_utils.clear_thread_local": 0.0015600624024961,
      "src.pokertool.thread_utils.cleanup_threading": 0.00234009360374415,
      "src.pokertool.api_versioning": 0.00546021840873635,
      "src.pokertool.api_versioning.VersionStatus": 0.00078003120124805,
      "src.pokertool.api_versioning.VersionInfo": 0.00078003120124805,
      "src.pokertool.api_versioning.APIVersionManager": 0.00078003120124805,
      "src.pokertool.api_versioning.APIVersionMiddleware": 0.00078003120124805,
      "src.pokertool.api_versioning.get_version_manager": 0.0015600624024961,
      "src.pokertool.api_versioning.require_version": 0.00078003120124805,
      "src.pokertool.api_versioning.setup_api_versioning": 0.0015600624024961,
      "src.pokertool.ocr_ensemble": 0.00546021840873635,
      "src.pokertool.ocr_ensemble.OCREngine": 0.00078003120124805,
      "src.pokertool.ocr_ensemble.FieldType": 0.00078003120124805,
      "src.pokertool.ocr_ensemble.OCRResult": 0.00078003120124805,
      "src.pokertool.ocr_ensemble.EnsembleResult": 0.00078003120124805,
      "src.pokertool.ocr_ensemble.PokerLexicalValidator": 0.00078003120124805,
      "src.pokertool.ocr_ensemble.OCREnsemble": 0.00078003120124805,
      "src.pokertool.ocr_ensemble.get_ocr_ensemble": 0.00078003120124805,
      "src.pokertool.gamification": 0.0031201248049922,
      "src.pokertool.gamification.Achievement": 0.00078003120124805,
      "src.pokertool.gamification.Badge": 0.00078003120124805,
      "src.pokertool.gamification.ProgressState": 0.00078003120124805,
      "src.pokertool.gamification.GamificationEngine": 0.00078003120124805,
      "src.pokertool.input_sanitizer": 0.0039001560062402497,
      "src.pokertool.input_sanitizer.SanitizationLevel": 0.00078003120124805,
      "src.pokertool.input_sanitizer.InputSanitizer": 0.00078003120124805,
      "src.pokertool.input_sanitizer.sanitize": 0.00078003120124805,
      "src.pokertool.input_sanitizer.sanitize_basic": 0.00078003120124805,
      "src.pokertool.input_sanitizer.sanitize_strict": 0.00078003120124805,
      "src.pokertool.hand_converter": 0.0046801872074883,
      "src.pokertool.hand_converter.ConversionError": 0.00078003120124805,
      "src.pokertool.hand_converter.PokerSite": 0.00078003120124805,
      "src.pokertool.hand_converter.HandMetadata": 0.00078003120124805,
      "src.pokertool.hand_converter.HandConversionResult": 0.00078003120124805,
      "src.pokertool.hand_converter.HandFormatDetector": 0.00078003120124805,
      "src.pokertool.hand_converter.HandConverter": 0.00078003120124805,
      "src.pokertool.formatting_utils": 0.0070202808112324495,
      "src.pokertool.formatting_utils.format_percentage": 0.00234009360374415,
      "src.pokertool.formatting_utils.format_currency": 0.0015600624024961,
      "src.pokertool.formatting_utils.format_big_blinds": 0.00078003120124805,
      "src.pokertool.formatting_utils.format_odds": 0.0015600624024961,
      "src.pokertool.formatting_utils.format_confidence_band": 0.0015600624024961,
      "src.pokertool.formatting_utils.format_stack_size": 0.00078003120124805,
      "src.pokertool.formatting_utils.get_color_for_probability": 0.00078003120124805,
      "src.pokertool.formatting_utils.get_color_for_confidence": 0.00078003120124805,
      "src.pokertool.formatting_utils.format_action_display": 0.0015600624024961,
      "src.pokertool.roi_tracker": 0.0046801872074883,
      "src.pokertool.roi_tracker.ROIType": 0.00078003120124805,
      "src.pokertool.roi_tracker.ROIDefinition": 0.00078003120124805,
      "src.pokertool.roi_tracker.ROIState": 0.00078003120124805,
      "src.pokertool.roi_tracker.ROIChangeDetection": 0.00078003120124805,
      "src.pokertool.roi_tracker.ROITracker": 0.00078003120124805,
      "src.pokertool.roi_tracker.get_roi_tracker": 0.00078003120124805,
      "src.pokertool.threading_utils": 0.01170046801872075,
      "src.pokertool.threading_utils.ThreadSafeDict": 0.00078003120124805,
      "src.pokertool.threading_utils.ThreadSafeCounter": 0.00078003120124805,
      "src.pokertool.threading_utils.TaskPriority": 0.00078003120124805,
      "src.pokertool.threading_utils.AsyncCallback": 0.00078003120124805,
      "src.pokertool.threading_utils.get_thread_pool": 0.0015600624024961,
      "src.pokertool.threading_utils.shutdown_thread_pool": 0.0015600624024961,
      "src.pokertool.threading_utils.run_in_thread": 0.0015600624024961,
      "src.pokertool.threading_utils.thread_safe": 0.00078003120124805,
      "src.pokertool.threading_utils.with_timeout": 0.00078003120124805,
      "src.pokertool.threading_utils.register_callback": 0.00078003120124805,
      "src.pokertool.threading_utils.trigger_callbacks": 0.00078003120124805,
      "src.pokertool.threading_utils.get_thread_local": 0.00078003120124805,
      "src.pokertool.threading_utils.set_thread_local": 0.00078003120124805,
      "src.pokertool.threading_utils.clear_thread_local": 0.0015600624024961,
      "src.pokertool.threading_utils.cleanup_threading": 0.00234009360374415,
      "src.pokertool.core": 0.0062402496099844,
      "src.pokertool.core.Rank": 0.00078003120124805,
      "src.pokertool.core.Suit": 0.00078003120124805,
      "src.pokertool.core.Position": 0.00078003120124805,
      "src.pokertool.core.Card": 0.00078003120124805,
      "src.pokertool.core.HandAnalysisResult": 0.00078003120124805,
      "src.pokertool.core.parse_card": 0.0015600624024961,
      "src.pokertool.core._normalise_cards": 0.00234009360374415,
      "src.pokertool.core.analyse_hand": 0.0015600624024961,
      "src.pokertool.enhanced_gui_components.settings_section": 0.00078003120124805,
      "src.pokertool.enhanced_gui_components.settings_section.SettingsSection": 0.00078003120124805,
      "src.pokertool.enhanced_gui_components.style": 0.0,
      "src.pokertool.enhanced_gui_components.autopilot_panel": 0.0015600624024961,
      "src.pokertool.enhanced_gui_components.autopilot_panel.AutopilotState": 0.00078003120124805,
      "src.pokertool.enhanced_gui_components.autopilot_panel.AutopilotControlPanel": 0.00078003120124805,
      "src.pokertool.enhanced_gui_components.manual_section": 0.00078003120124805,
      "src.pokertool.enhanced_gui_components.manual_section.ManualPlaySection": 0.00078003120124805,
      "src.pokertool.enhanced_gui_components.coaching_section": 0.00078003120124805,
      "src.pokertool.enhanced_gui_components.coaching_section.CoachingSection": 0.00078003120124805,
      "src.pokertool.utils.dependency_manager": 0.0015600624024961,
      "src.pokertool.utils.dependency_manager.DependencyManager": 0.00078003120124805,
      "src.pokertool.utils.dependency_manager.ensure_dependencies": 0.00078003120124805,
      "src.pokertool.utils.single_instance": 0.0039001560062402497,
      "src.pokertool.utils.single_instance._sanitize_app_name": 0.0015600624024961,
      "src.pokertool.utils.single_instance._lock_path": 0.00234009360374415,
      "src.pokertool.utils.single_instance._pid_is_running": 0.0015600624024961,
      "src.pokertool.utils.single_instance.acquire_lock": 0.00234009360374415,
      "src.pokertool.utils.single_instance.release_lock": 0.00078003120124805,
      "src.pokertool.modules.autoconfirm": 0.0,
      "src.pokertool.modules.ocr_engine": 0.00234009360374415,
      "src.pokertool.modules.ocr_engine.OCRResult": 0.00078003120124805,
      "src.pokertool.modules.ocr_engine.PokerOCREngine": 0.00078003120124805,
      "src.pokertool.modules.ocr_engine.get_ocr_engine": 0.00078003120124805,
      "src.pokertool.modules.chrome_devtools_scraper": 0.0039001560062402497,
      "src.pokertool.modules.chrome_devtools_scraper.ChromeConnection": 0.00078003120124805,
      "src.pokertool.modules.chrome_devtools_scraper.BetfairTableData": 0.00078003120124805,
      "src.pokertool.modules.chrome_devtools_scraper.ChromeDevToolsScraper": 0.00078003120124805,
      "src.pokertool.modules.chrome_devtools_scraper.create_auto_scraper": 0.00078003120124805,
      "src.pokertool.modules.chrome_devtools_scraper.launch_chrome_for_debugging": 0.00078003120124805,
      "src.pokertool.modules.note_taking_system": 0.0062402496099844,
      "src.pokertool.modules.note_taking_system.NoteColor": 0.00078003120124805,
      "src.pokertool.modules.note_taking_system.NoteCategory": 0.00078003120124805,
      "src.pokertool.modules.note_taking_system.PlayerNote": 0.00078003120124805,
      "src.pokertool.modules.note_taking_system.NoteDatabase": 0.00078003120124805,
      "src.pokertool.modules.note_taking_system.NoteSearch": 0.00078003120124805,
      "src.pokertool.modules.note_taking_system.NoteTemplate": 0.00078003120124805,
      "src.pokertool.modules.note_taking_system.AutoNoteGenerator": 0.00078003120124805,
      "src.pokertool.modules.note_taking_system.NoteTakingSystem": 0.00078003120124805,
      "src.pokertool.modules.run_pokertool": 0.00078003120124805,
      "src.pokertool.modules.run_pokertool.ensure_critical_dependencies": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator": 0.01326053042121685,
      "src.pokertool.modules.accuracy_validator.ValidationStatus": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.CardRecognitionResult": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.ConsensusResult": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.ValidationResult": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.StackDelta": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.MultiFrameCardRecognizer": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.PotAmountValidator": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.StackDeltaTracker": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.BetAmountSpatialValidator": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.ActionButtonState": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.ButtonTransition": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.ActionButtonStateMachine": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.OCRReExtractor": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.CommunityCardSequenceValidator": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.TableBoundaryDetector": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.AccuracyValidationSystem": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.get_accuracy_validation_system": 0.00078003120124805,
      "src.pokertool.modules.logger": 0.00234009360374415,
      "src.pokertool.modules.logger.MasterLogger": 0.00078003120124805,
      "src.pokertool.modules.logger.log_exceptions": 0.00078003120124805,
      "src.pokertool.modules.logger.setup_global_exception_handler": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite": 0.01326053042121685,
      "src.pokertool.modules.scraper_optimization_suite.ROI": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.ROITracker": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.FrameDiffEngine": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.OCRCache": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.ParallelExtractor": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.FastScreenCapture": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.TemporalConsensus": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.PotValidator": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.CardRecognitionModel": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.SpatialValidator": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.RecoveryManager": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.RedundantExtractor": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.HealthMetrics": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.HealthMonitor": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.ScraperOptimizationSuite": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.get_optimization_suite": 0.0015600624024961,
      "src.pokertool.modules.scraper_optimization_suite.demo": 0.0015600624024961,
      "src.pokertool.modules.scraper_learning_system": 0.0070202808112324495,
      "src.pokertool.modules.scraper_learning_system.ExtractionType": 0.00078003120124805,
      "src.pokertool.modules.scraper_learning_system.EnvironmentSignature": 0.00078003120124805,
      "src.pokertool.modules.scraper_learning_system.OCRStrategyResult": 0.00078003120124805,
      "src.pokertool.modules.scraper_learning_system.OCRStrategyStats": 0.00078003120124805,
      "src.pokertool.modules.scraper_learning_system.EnvironmentProfile": 0.00078003120124805,
      "src.pokertool.modules.scraper_learning_system.ExtractionFeedback": 0.00078003120124805,
      "src.pokertool.modules.scraper_learning_system.CDPGroundTruth": 0.00078003120124805,
      "src.pokertool.modules.scraper_learning_system.ScraperLearningSystem": 0.00078003120124805,
      "src.pokertool.modules.scraper_learning_system.create_learning_system": 0.00078003120124805,
      "src.pokertool.modules.betfair_accuracy_improvements": 0.00858034321372855,
      "src.pokertool.modules.betfair_accuracy_improvements.SeatPosition": 0.00078003120124805,
      "src.pokertool.modules.betfair_accuracy_improvements.BetfairROI": 0.00078003120124805,
      "src.pokertool.modules.betfair_accuracy_improvements.SeatMapping": 0.00078003120124805,
      "src.pokertool.modules.betfair_accuracy_improvements.PlayerNameExtractor": 0.00078003120124805,
      "src.pokertool.modules.betfair_accuracy_improvements.CurrencyExtractor": 0.00078003120124805,
      "src.pokertool.modules.betfair_accuracy_improvements.StackPotDistinguisher": 0.00078003120124805,
      "src.pokertool.modules.betfair_accuracy_improvements.BetfairCardDetector": 0.00078003120124805,
      "src.pokertool.modules.betfair_accuracy_improvements.DealerButtonDetector": 0.00078003120124805,
      "src.pokertool.modules.betfair_accuracy_improvements.BetfairSeatMapper": 0.00078003120124805,
      "src.pokertool.modules.betfair_accuracy_improvements.BetfairAccuracyEngine": 0.00078003120124805,
      "src.pokertool.modules.betfair_accuracy_improvements.create_betfair_engine": 0.00078003120124805,
      "src.pokertool.modules.browser_tab_capture": 0.0039001560062402497,
      "src.pokertool.modules.browser_tab_capture.ChromeTabCaptureError": 0.00078003120124805,
      "src.pokertool.modules.browser_tab_capture.ChromeTabCaptureConfig": 0.00078003120124805,
      "src.pokertool.modules.browser_tab_capture.ChromeTabCapture": 0.00078003120124805,
      "src.pokertool.modules.browser_tab_capture.ChromeWindowCaptureConfig": 0.00078003120124805,
      "src.pokertool.modules.browser_tab_capture.ChromeWindowCapture": 0.00078003120124805,
      "src.pokertool.modules.power_features": 0.01014040561622465,
      "src.pokertool.modules.power_features.TableInfo": 0.00078003120124805,
      "src.pokertool.modules.power_features.HandRecord": 0.00078003120124805,
      "src.pokertool.modules.power_features.OpponentNote": 0.00078003120124805,
      "src.pokertool.modules.power_features.SessionGoal": 0.00078003120124805,
      "src.pokertool.modules.power_features.MultiTableManager": 0.00078003120124805,
      "src.pokertool.modules.power_features.HandReplaySystem": 0.00078003120124805,
      "src.pokertool.modules.power_features.RangeVsRangeCalculator": 0.00078003120124805,
      "src.pokertool.modules.power_features.AutoNoteSystem": 0.00078003120124805,
      "src.pokertool.modules.power_features.SessionGoalTracker": 0.00078003120124805,
      "src.pokertool.modules.power_features.VoiceCommandHandler": 0.00078003120124805,
      "src.pokertool.modules.power_features.SessionReportExporter": 0.00078003120124805,
      "src.pokertool.modules.power_features.PowerFeaturesSystem": 0.00078003120124805,
      "src.pokertool.modules.power_features.get_power_features_system": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper": 0.0039001560062402497,
      "src.pokertool.modules.poker_screen_scraper.ScreenScraperBridge": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper.PokerScreenScraper": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper.create_scraper": 0.0015600624024961,
      "src.pokertool.modules.poker_screen_scraper.test_scraper_functionality": 0.0015600624024961,
      "src.pokertool.modules.poker_screen_scraper.get_scraper_info": 0.00078003120124805,
      "src.pokertool.modules.adaptive_ui_detector": 0.0093603744149766,
      "src.pokertool.modules.adaptive_ui_detector.RegionOfInterest": 0.00078003120124805,
      "src.pokertool.modules.adaptive_ui_detector.BaselineState": 0.00078003120124805,
      "src.pokertool.modules.adaptive_ui_detector.ComparisonResult": 0.00078003120124805,
      "src.pokertool.modules.adaptive_ui_detector.AdaptiveUIDetector": 0.00078003120124805,
      "src.pokertool.modules.adaptive_ui_detector._parse_resolution": 0.00078003120124805,
      "src.pokertool.modules.adaptive_ui_detector._ensure_uint8": 0.00078003120124805,
      "src.pokertool.modules.adaptive_ui_detector._to_grayscale": 0.0031201248049922,
      "src.pokertool.modules.adaptive_ui_detector._average_hash": 0.0015600624024961,
      "src.pokertool.modules.adaptive_ui_detector._difference_hash": 0.0015600624024961,
      "src.pokertool.modules.adaptive_ui_detector._phash": 0.0015600624024961,
      "src.pokertool.modules.adaptive_ui_detector._hamming_distance": 0.00078003120124805,
      "src.pokertool.modules.adaptive_ui_detector.create_detector": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor": 0.0109204368174727,
      "src.pokertool.modules.reliability_monitor.HealthStatus": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor.ComponentType": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor.HealthMetric": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor.ErrorReport": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor.AutoRecoveryManager": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor.GracefulDegradationManager": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor.HealthMonitor": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor.ErrorReporter": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor.StatePersistenceManager": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor.ConnectionQualityMonitor": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor.MemoryLeakDetector": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor.MultiSiteFallbackChain": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor.ReliabilitySystem": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor.get_reliability_system": 0.00078003120124805,
      "src.pokertool.modules.hand_replay_system": 0.00858034321372855,
      "src.pokertool.modules.hand_replay_system.ActionType": 0.00078003120124805,
      "src.pokertool.modules.hand_replay_system.Street": 0.00078003120124805,
      "src.pokertool.modules.hand_replay_system.PlayerAction": 0.00078003120124805,
      "src.pokertool.modules.hand_replay_system.ReplayFrame": 0.00078003120124805,
      "src.pokertool.modules.hand_replay_system.Annotation": 0.00078003120124805,
      "src.pokertool.modules.hand_replay_system.AnnotationManager": 0.00078003120124805,
      "src.pokertool.modules.hand_replay_system.AnalysisData": 0.00078003120124805,
      "src.pokertool.modules.hand_replay_system.AnalysisOverlay": 0.00078003120124805,
      "src.pokertool.modules.hand_replay_system.ReplayAnimation": 0.00078003120124805,
      "src.pokertool.modules.hand_replay_system.ShareManager": 0.00078003120124805,
      "src.pokertool.modules.hand_replay_system.HandReplaySystem": 0.00078003120124805,
      "src.pokertool.modules.poker_gui_enhanced": 0.0093603744149766,
      "src.pokertool.modules.poker_gui_enhanced.ValidationState": 0.00078003120124805,
      "src.pokertool.modules.poker_gui_enhanced.UITheme": 0.00078003120124805,
      "src.pokertool.modules.poker_gui_enhanced.UIState": 0.00078003120124805,
      "src.pokertool.modules.poker_gui_enhanced.EnhancedCardEntry": 0.00078003120124805,
      "src.pokertool.modules.poker_gui_enhanced.StatusBar": 0.00078003120124805,
      "src.pokertool.modules.poker_gui_enhanced.VisualCard": 0.00078003120124805,
      "src.pokertool.modules.poker_gui_enhanced.CardSelectionPanel": 0.00078003120124805,
      "src.pokertool.modules.poker_gui_enhanced.TableVisualization": 0.00078003120124805,
      "src.pokertool.modules.poker_gui_enhanced.EnhancedPokerAssistant": 0.00078003120124805,
      "src.pokertool.modules.poker_gui_enhanced.initialise_db_if_needed": 0.00078003120124805,
      "src.pokertool.modules.poker_gui_enhanced.open_db": 0.00078003120124805,
      "src.pokertool.modules.poker_gui_enhanced._ensure_parent": 0.00078003120124805,
      "src.pokertool.modules.multi_table_segmenter": 0.0039001560062402497,
      "src.pokertool.modules.multi_table_segmenter.DetectedObject": 0.00078003120124805,
      "src.pokertool.modules.multi_table_segmenter.TableLayout": 0.00078003120124805,
      "src.pokertool.modules.multi_table_segmenter.SegmentationResult": 0.00078003120124805,
      "src.pokertool.modules.multi_table_segmenter.MultiTableSegmenter": 0.00078003120124805,
      "src.pokertool.modules.multi_table_segmenter.create_segmenter": 0.00078003120124805,
      "src.pokertool.modules.range_construction_tool": 0.0062402496099844,
      "src.pokertool.modules.range_construction_tool.RangeFormat": 0.00078003120124805,
      "src.pokertool.modules.range_construction_tool.HandType": 0.00078003120124805,
      "src.pokertool.modules.range_construction_tool.HandRange": 0.00078003120124805,
      "src.pokertool.modules.range_construction_tool.RangeGrid": 0.00078003120124805,
      "src.pokertool.modules.range_construction_tool.RangeComparator": 0.00078003120124805,
      "src.pokertool.modules.range_construction_tool.RangeTemplate": 0.00078003120124805,
      "src.pokertool.modules.range_construction_tool.RangeImportExport": 0.00078003120124805,
      "src.pokertool.modules.range_construction_tool.RangeConstructionTool": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper_betfair": 0.00858034321372855,
      "src.pokertool.modules.poker_screen_scraper_betfair.PokerSite": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper_betfair.TableRegion": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper_betfair.SeatInfo": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper_betfair.TableState": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper_betfair.DetectionResult": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper_betfair.Card": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper_betfair.BetfairPokerDetector": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper_betfair.UniversalPokerDetector": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper_betfair.PokerScreenScraper": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper_betfair.create_scraper": 0.0015600624024961,
      "src.pokertool.modules.poker_screen_scraper_betfair.test_scraper_betfair": 0.0015600624024961
    },
    "in_degree_centrality": {
      "src.pokertool.roi_tracking_system": 0.0,
      "src.pokertool.roi_tracking_system.ROI": 0.00078003120124805,
      "src.pokertool.roi_tracking_system.ROIState": 0.00078003120124805,
      "src.pokertool.roi_tracking_system.ROITrackingMetrics": 0.00078003120124805,
      "src.pokertool.roi_tracking_system.ROITrackingSystem": 0.00078003120124805,
      "src.pokertool.roi_tracking_system.get_roi_tracker": 0.00078003120124805,
      "src.pokertool.roi_tracking_system.reset_roi_tracker": 0.00078003120124805,
      "src.pokertool.performance_telemetry": 0.0,
      "src.pokertool.performance_telemetry.TelemetryEntry": 0.00078003120124805,
      "src.pokertool.performance_telemetry.PerformanceTelemetry": 0.00078003120124805,
      "src.pokertool.performance_telemetry.timed": 0.00078003120124805,
      "src.pokertool.performance_telemetry.telemetry_section": 0.00078003120124805,
      "src.pokertool.performance_telemetry.telemetry_instant": 0.00078003120124805,
      "src.pokertool.performance_telemetry.init_telemetry": 0.00078003120124805,
      "src.pokertool.performance_telemetry.get_telemetry": 0.0031201248049922,
      "src.pokertool.performance_telemetry.shutdown_telemetry": 0.00078003120124805,
      "src.pokertool.card_recognizer": 0.0,
      "src.pokertool.card_recognizer.Card": 0.00078003120124805,
      "src.pokertool.card_recognizer.CardTemplate": 0.00078003120124805,
      "src.pokertool.card_recognizer.RecognitionResult": 0.00078003120124805,
      "src.pokertool.card_recognizer.CardRecognitionEngine": 0.00078003120124805,
      "src.pokertool.bayesian_profiler": 0.0,
      "src.pokertool.bayesian_profiler.PlayerTendency": 0.00078003120124805,
      "src.pokertool.bayesian_profiler.PlayerStyle": 0.00078003120124805,
      "src.pokertool.bayesian_profiler.BetaDistribution": 0.00078003120124805,
      "src.pokertool.bayesian_profiler.GaussianDistribution": 0.00078003120124805,
      "src.pokertool.bayesian_profiler.PlayerProfile": 0.00078003120124805,
      "src.pokertool.bayesian_profiler.BeliefUpdater": 0.00078003120124805,
      "src.pokertool.bayesian_profiler.ActionPredictor": 0.00078003120124805,
      "src.pokertool.bayesian_profiler.BayesianOpponentProfiler": 0.00078003120124805,
      "src.pokertool.system_health_checker": 0.0,
      "src.pokertool.system_health_checker.HealthStatus": 0.00078003120124805,
      "src.pokertool.system_health_checker.HealthCheck": 0.00078003120124805,
      "src.pokertool.system_health_checker.SystemHealthChecker": 0.00078003120124805,
      "src.pokertool.system_health_checker._join_url": 0.00078003120124805,
      "src.pokertool.system_health_checker._http_get_status": 0.0031201248049922,
      "src.pokertool.system_health_checker.get_health_checker": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_api_server_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_database_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_ocr_engine_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_screen_capture_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_model_calibration_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_frontend_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_poker_table_detection_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_gto_solver_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_opponent_modeling_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_sequential_opponent_fusion_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_active_learning_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_neural_evaluator_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_hand_range_analyzer_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_scraping_accuracy_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_roi_tracking_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_tournament_support_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_multi_table_support_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_hand_history_database_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_websocket_server_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_region_extraction_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.register_all_health_checks": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling": 0.0,
      "src.pokertool.ml_opponent_modeling.ModelType": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling.PlayerType": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling.PlayerStats": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling.HandHistory": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling.ModelPrediction": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling.FeatureEngineering": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling.OpponentModel": 0.00234009360374415,
      "src.pokertool.ml_opponent_modeling.RandomForestOpponentModel": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling.NeuralNetworkOpponentModel": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling.OpponentModelingSystem": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling._disable_coreml_provider": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling.get_opponent_modeling_system": 0.0031201248049922,
      "src.pokertool.ml_opponent_modeling.observe_opponent_hand": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling.predict_opponent_action": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling.get_opponent_profile": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling.analyze_table_dynamics": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling._generate_table_recommendations": 0.0015600624024961,
      "src.pokertool.global_error_handler": 0.0,
      "src.pokertool.global_error_handler.ErrorCategory": 0.00078003120124805,
      "src.pokertool.global_error_handler.ErrorSeverity": 0.00078003120124805,
      "src.pokertool.global_error_handler.ErrorResponse": 0.00078003120124805,
      "src.pokertool.global_error_handler.GlobalErrorHandler": 0.00078003120124805,
      "src.pokertool.global_error_handler.handle_errors": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system": 0.0,
      "src.pokertool.scraping_reliability_system.RecoveryAction": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.RecoveryStrategy": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.AutomaticRecoveryManager": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.ExtractionMethod": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.RedundantExtractionPaths": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.HealthMetrics": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.HealthMonitor": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.FieldConfidence": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.PartialState": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.GracefulDegradation": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.StatePersistence": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.ErrorPattern": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.ErrorPatternDetector": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.WatchdogTimer": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.ResourceLeakDetector": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.QualityMetrics": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.AutoRecalibrator": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.ScrapingReliabilitySystem": 0.00078003120124805,
      "src.pokertool.scraping_reliability_system.get_reliability_system": 0.00078003120124805,
      "src.pokertool.test_utils": 0.0,
      "src.pokertool.test_utils.is_test_mode": 0.00078003120124805,
      "src.pokertool.test_utils.safe_messagebox_showerror": 0.00078003120124805,
      "src.pokertool.test_utils.safe_messagebox_showwarning": 0.00078003120124805,
      "src.pokertool.test_utils.safe_messagebox_showinfo": 0.00078003120124805,
      "src.pokertool.desktop_independent_scraper": 0.0,
      "src.pokertool.desktop_independent_scraper.WindowInfo": 0.00078003120124805,
      "src.pokertool.desktop_independent_scraper.ScreenRegion": 0.00078003120124805,
      "src.pokertool.desktop_independent_scraper.PokerDetectionMode": 0.00078003120124805,
      "src.pokertool.desktop_independent_scraper.DesktopIndependentScraper": 0.00078003120124805,
      "src.pokertool.desktop_independent_scraper.create_desktop_scraper": 0.00234009360374415,
      "src.pokertool.desktop_independent_scraper.quick_poker_scan": 0.00078003120124805,
      "src.pokertool.desktop_independent_scraper.test_desktop_independence": 0.00078003120124805,
      "src.pokertool.cfr_plus": 0.0,
      "src.pokertool.cfr_plus.CFRPlusSolution": 0.00078003120124805,
      "src.pokertool.cfr_plus.CFRPlusSolver": 0.00078003120124805,
      "src.pokertool.cfr_plus._normalise": 0.00078003120124805,
      "src.pokertool.cfr_plus._dot": 0.00078003120124805,
      "src.pokertool.cfr_plus._matrix_vector_product": 0.00078003120124805,
      "src.pokertool.cfr_plus._transposed_matrix_vector_product": 0.00078003120124805,
      "src.pokertool.analytics_dashboard": 0.0,
      "src.pokertool.analytics_dashboard.UsageEvent": 0.00078003120124805,
      "src.pokertool.analytics_dashboard.PrivacySettings": 0.00078003120124805,
      "src.pokertool.analytics_dashboard.DashboardMetrics": 0.00078003120124805,
      "src.pokertool.analytics_dashboard.AnalyticsDashboard": 0.00078003120124805,
      "src.pokertool.thread_manager": 0.0,
      "src.pokertool.thread_manager.ThreadManager": 0.00078003120124805,
      "src.pokertool.thread_manager.get_thread_manager": 0.00234009360374415,
      "src.pokertool.thread_manager.submit_task": 0.0015600624024961,
      "src.pokertool.thread_manager.start_thread": 0.0015600624024961,
      "src.pokertool.sequential_opponent_fusion": 0.0,
      "src.pokertool.sequential_opponent_fusion.ActionType": 0.00078003120124805,
      "src.pokertool.sequential_opponent_fusion.Street": 0.00078003120124805,
      "src.pokertool.sequential_opponent_fusion.PlayerAction": 0.00078003120124805,
      "src.pokertool.sequential_opponent_fusion.HandSequence": 0.00078003120124805,
      "src.pokertool.sequential_opponent_fusion.SequenceFeatures": 0.00078003120124805,
      "src.pokertool.sequential_opponent_fusion.SimpleTransformer": 0.00078003120124805,
      "src.pokertool.sequential_opponent_fusion.SequentialOpponentFusion": 0.00078003120124805,
      "src.pokertool.sequential_opponent_fusion.get_fusion_system": 0.00078003120124805,
      "src.pokertool.tournament_tracker": 0.0,
      "src.pokertool.tournament_tracker.TournamentStructure": 0.00078003120124805,
      "src.pokertool.tournament_tracker.TournamentEvent": 0.00078003120124805,
      "src.pokertool.tournament_tracker.TournamentResult": 0.00078003120124805,
      "src.pokertool.tournament_tracker.SatelliteLink": 0.00078003120124805,
      "src.pokertool.tournament_tracker.TournamentAlert": 0.00078003120124805,
      "src.pokertool.tournament_tracker.TournamentTracker": 0.00078003120124805,
      "src.pokertool.version": 0.0,
      "src.pokertool.version._read_version": 0.00078003120124805,
      "src.pokertool.version.get_version": 0.00078003120124805,
      "src.pokertool.version.get_version_info": 0.0015600624024961,
      "src.pokertool.version.get_release_history": 0.0015600624024961,
      "src.pokertool.version.get_version_tuple": 0.00078003120124805,
      "src.pokertool.version.is_compatible": 0.00078003120124805,
      "src.pokertool.version.format_version": 0.0015600624024961,
      "src.pokertool.version.print_version_info": 0.00078003120124805,
      "src.pokertool.scraping_master_system": 0.0,
      "src.pokertool.scraping_master_system.MasterSystemMetrics": 0.00078003120124805,
      "src.pokertool.scraping_master_system.ScrapingMasterSystem": 0.00078003120124805,
      "src.pokertool.scraping_master_system.get_master_system": 0.00234009360374415,
      "src.pokertool.scraping_master_system.process_poker_frame": 0.00078003120124805,
      "src.pokertool.scraping_master_system.get_system_status": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system": 0.0,
      "src.pokertool.scraping_accuracy_system.TemporalConsensus": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system.PotValidator": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system.SpatialValidator": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system.PlayerAction": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system.PlayerStateMachine": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system.CardSuitValidator": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system.BlindsChecker": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system.StackTracker": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system.OCRPostProcessor": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system.ExtractionStrategy": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system.MultiStrategyFusion": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system.AccuracyMetrics": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system.ScrapingAccuracySystem": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system.get_accuracy_system": 0.00078003120124805,
      "src.pokertool.timing_analyzer": 0.0,
      "src.pokertool.timing_analyzer.TimingData": 0.00078003120124805,
      "src.pokertool.timing_analyzer.TimingPattern": 0.00078003120124805,
      "src.pokertool.timing_analyzer.MicrosecondPrecisionTracker": 0.00078003120124805,
      "src.pokertool.timing_analyzer.ActionSequenceTimer": 0.00078003120124805,
      "src.pokertool.timing_analyzer.TimingDeviationDetector": 0.00078003120124805,
      "src.pokertool.timing_analyzer.PatternClusterer": 0.00078003120124805,
      "src.pokertool.timing_analyzer.ConfidenceIntervalCalculator": 0.00078003120124805,
      "src.pokertool.timing_analyzer.TimingTellAnalyzer": 0.00078003120124805,
      "src.pokertool.timing_analyzer.analyze_timing_patterns": 0.00078003120124805,
      "src.pokertool.timing_analyzer.detect_timing_tell": 0.00078003120124805,
      "src.pokertool.database_optimization": 0.0,
      "src.pokertool.database_optimization.CachedResult": 0.00078003120124805,
      "src.pokertool.database_optimization.QueryRecord": 0.00078003120124805,
      "src.pokertool.database_optimization.QueryCache": 0.00078003120124805,
      "src.pokertool.database_optimization.QueryMonitor": 0.00078003120124805,
      "src.pokertool.database_optimization.IndexAdvisor": 0.00078003120124805,
      "src.pokertool.database_optimization.ArchiveManager": 0.00078003120124805,
      "src.pokertool.database_optimization.DatabaseOptimizationManager": 0.00078003120124805,
      "src.pokertool.bankroll_management": 0.0,
      "src.pokertool.bankroll_management.GameType": 0.00078003120124805,
      "src.pokertool.bankroll_management.StakeLevel": 0.00078003120124805,
      "src.pokertool.bankroll_management.BankrollTransaction": 0.00078003120124805,
      "src.pokertool.bankroll_management.BankrollSnapshot": 0.00078003120124805,
      "src.pokertool.bankroll_management.KellyCriterion": 0.00078003120124805,
      "src.pokertool.bankroll_management.VarianceCalculator": 0.00078003120124805,
      "src.pokertool.bankroll_management.BankrollAlert": 0.00078003120124805,
      "src.pokertool.bankroll_management.BankrollManager": 0.00078003120124805,
      "src.pokertool.bankroll_management.get_bankroll_manager": 0.0031201248049922,
      "src.pokertool.bankroll_management.add_session_result": 0.00078003120124805,
      "src.pokertool.bankroll_management.get_bankroll_summary": 0.00078003120124805,
      "src.pokertool.bankroll_management.get_stake_recommendation": 0.00078003120124805,
      "src.pokertool.dependency_manager": 0.0,
      "src.pokertool.dependency_manager.DependencyInfo": 0.00078003120124805,
      "src.pokertool.dependency_manager.SystemReport": 0.00078003120124805,
      "src.pokertool.dependency_manager.DependencyManager": 0.00078003120124805,
      "src.pokertool.dependency_manager.get_dependency_manager": 0.00234009360374415,
      "src.pokertool.dependency_manager.validate_system": 0.00078003120124805,
      "src.pokertool.dependency_manager.is_system_ready": 0.00078003120124805,
      "src.pokertool.hud_profiles": 0.0,
      "src.pokertool.hud_profiles.list_hud_profiles": 0.00078003120124805,
      "src.pokertool.hud_profiles.load_hud_profile": 0.00078003120124805,
      "src.pokertool.hud_profiles.save_hud_profile": 0.00078003120124805,
      "src.pokertool.compliance": 0.0,
      "src.pokertool.compliance.ConsentType": 0.00078003120124805,
      "src.pokertool.compliance.DataCategory": 0.00078003120124805,
      "src.pokertool.compliance.UserConsent": 0.00078003120124805,
      "src.pokertool.compliance.DataRetentionPolicy": 0.00078003120124805,
      "src.pokertool.compliance.ComplianceViolation": 0.00078003120124805,
      "src.pokertool.compliance.PokerSiteCompliance": 0.00078003120124805,
      "src.pokertool.compliance.GDPRCompliance": 0.00078003120124805,
      "src.pokertool.compliance.ComplianceManager": 0.00078003120124805,
      "src.pokertool.compliance.get_compliance_manager": 0.0039001560062402497,
      "src.pokertool.compliance.check_feature_compliance": 0.00078003120124805,
      "src.pokertool.compliance.record_user_consent": 0.00078003120124805,
      "src.pokertool.compliance.get_user_privacy_report": 0.00078003120124805,
      "src.pokertool.compliance.is_site_compliant": 0.00078003120124805,
      "src.pokertool.icm_calculator": 0.0,
      "src.pokertool.icm_calculator.TournamentState": 0.00078003120124805,
      "src.pokertool.icm_calculator.ICMResult": 0.00078003120124805,
      "src.pokertool.icm_calculator.ICMDecision": 0.00078003120124805,
      "src.pokertool.icm_calculator.MalmuthHarvilleCalculator": 0.00078003120124805,
      "src.pokertool.icm_calculator.ICMCalculator": 0.00078003120124805,
      "src.pokertool.coaching_system": 0.0,
      "src.pokertool.coaching_system.DetectedMistake": 0.00078003120124805,
      "src.pokertool.coaching_system.RealTimeAdvice": 0.00078003120124805,
      "src.pokertool.coaching_system.TrainingScenario": 0.00078003120124805,
      "src.pokertool.coaching_system.CoachingProgress": 0.00078003120124805,
      "src.pokertool.coaching_system.CoachingFeedback": 0.00078003120124805,
      "src.pokertool.coaching_system.CoachingSystem": 0.00078003120124805,
      "src.pokertool.scraping_speed_optimizer": 0.0,
      "src.pokertool.scraping_speed_optimizer.ParallelExtractor": 0.00078003120124805,
      "src.pokertool.scraping_speed_optimizer.AdaptiveSamplingRate": 0.00078003120124805,
      "src.pokertool.scraping_speed_optimizer.IncrementalUpdater": 0.00078003120124805,
      "src.pokertool.scraping_speed_optimizer.OCREnginePriority": 0.00078003120124805,
      "src.pokertool.scraping_speed_optimizer.CascadingOCR": 0.00078003120124805,
      "src.pokertool.scraping_speed_optimizer.ExtractionPriority": 0.00078003120124805,
      "src.pokertool.scraping_speed_optimizer.LazyExtractor": 0.00078003120124805,
      "src.pokertool.scraping_speed_optimizer.SpeedOptimizationMetrics": 0.00078003120124805,
      "src.pokertool.scraping_speed_optimizer.ScrapingSpeedOptimizer": 0.00078003120124805,
      "src.pokertool.scraping_speed_optimizer.get_speed_optimizer": 0.00078003120124805,
      "src.pokertool.retry_util": 0.0,
      "src.pokertool.retry_util.RetryError": 0.00078003120124805,
      "src.pokertool.retry_util.RetryStrategy": 0.00078003120124805,
      "src.pokertool.retry_util.exponential_backoff": 0.0015600624024961,
      "src.pokertool.retry_util.retry_with_backoff": 0.00078003120124805,
      "src.pokertool.retry_util.retry_api_call": 0.00078003120124805,
      "src.pokertool.retry_util.retry_database_operation": 0.00078003120124805,
      "src.pokertool.retry_util.retry_network_request": 0.00078003120124805,
      "src.pokertool.retry_util.retry_ml_prediction": 0.00078003120124805,
      "src.pokertool.neural_evaluator": 0.0,
      "src.pokertool.neural_evaluator.HandState": 0.00078003120124805,
      "src.pokertool.neural_evaluator.TrainingSample": 0.00078003120124805,
      "src.pokertool.neural_evaluator.HandEvaluation": 0.00078003120124805,
      "src.pokertool.neural_evaluator.NeuralHandStrengthEvaluator": 0.00078003120124805,
      "src.pokertool.neural_evaluator.CNNModelConfig": 0.00078003120124805,
      "src.pokertool.neural_evaluator.TrainingProgress": 0.00078003120124805,
      "src.pokertool.neural_evaluator.CNNHandStrengthModel": 0.00078003120124805,
      "src.pokertool.neural_evaluator.RealTimeInferenceEngine": 0.00078003120124805,
      "src.pokertool.status_window": 0.0,
      "src.pokertool.status_window.StatusWindow": 0.00078003120124805,
      "src.pokertool.status_window.main": 0.00078003120124805,
      "src.pokertool.hud_designer": 0.0,
      "src.pokertool.hud_designer.HUDDesigner": 0.00078003120124805,
      "src.pokertool.quantum_optimizer": 0.0,
      "src.pokertool.quantum_optimizer.OptimizationType": 0.00078003120124805,
      "src.pokertool.quantum_optimizer.QuantumState": 0.00078003120124805,
      "src.pokertool.quantum_optimizer.OptimizationResult": 0.00078003120124805,
      "src.pokertool.quantum_optimizer.QuantumAnnealingSimulator": 0.00078003120124805,
      "src.pokertool.quantum_optimizer.SuperpositionStateExplorer": 0.00078003120124805,
      "src.pokertool.quantum_optimizer.EntanglementCorrelationAnalyzer": 0.00078003120124805,
      "src.pokertool.quantum_optimizer.QuantumInspiredOptimizer": 0.00078003120124805,
      "src.pokertool.quantum_optimizer.quick_optimize_range": 0.00078003120124805,
      "src.pokertool.quantum_optimizer.find_optimal_action": 0.00078003120124805,
      "src.pokertool.scrape_fix": 0.0,
      "src.pokertool.scrape_fix.diagnose_chrome_capture": 0.0015600624024961,
      "src.pokertool.scrape_fix.fix_scraper_initialization": 0.0015600624024961,
      "src.pokertool.scrape_fix.test_screen_capture": 0.0015600624024961,
      "src.pokertool.scrape_fix.main": 0.00078003120124805,
      "src.pokertool.watchdog_timer": 0.0,
      "src.pokertool.watchdog_timer.WatchdogAction": 0.00078003120124805,
      "src.pokertool.watchdog_timer.OperationInfo": 0.00078003120124805,
      "src.pokertool.watchdog_timer.WatchdogTimeoutError": 0.00078003120124805,
      "src.pokertool.watchdog_timer.WatchdogTimer": 0.00078003120124805,
      "src.pokertool.watchdog_timer.get_watchdog": 0.00234009360374415,
      "src.pokertool.watchdog_timer.watch": 0.0015600624024961,
      "src.pokertool.watchdog_timer.monitor": 0.0015600624024961,
      "src.pokertool.hand_recorder": 0.0,
      "src.pokertool.hand_recorder.HandRecorderState": 0.00078003120124805,
      "src.pokertool.hand_recorder.HandSnapshot": 0.00078003120124805,
      "src.pokertool.hand_recorder.HandRecorder": 0.00078003120124805,
      "src.pokertool.hand_recorder.get_hand_recorder": 0.0015600624024961,
      "src.pokertool.hand_recorder.enable_hand_recording": 0.00078003120124805,
      "src.pokertool.active_learning": 0.0,
      "src.pokertool.active_learning.ActionType": 0.00078003120124805,
      "src.pokertool.active_learning.StreetType": 0.00078003120124805,
      "src.pokertool.active_learning.FeedbackStatus": 0.00078003120124805,
      "src.pokertool.active_learning.UncertaintyLevel": 0.00078003120124805,
      "src.pokertool.active_learning.GameState": 0.00078003120124805,
      "src.pokertool.active_learning.Prediction": 0.00078003120124805,
      "src.pokertool.active_learning.ExpertFeedback": 0.00078003120124805,
      "src.pokertool.active_learning.FeedbackEvent": 0.00078003120124805,
      "src.pokertool.active_learning.UncertaintyTriage": 0.00078003120124805,
      "src.pokertool.active_learning.FeedbackStorage": 0.00078003120124805,
      "src.pokertool.active_learning.RetrainingScheduler": 0.00078003120124805,
      "src.pokertool.active_learning.ActiveLearningFeedbackLoop": 0.00078003120124805,
      "src.pokertool.active_learning.get_active_learning": 0.00078003120124805,
      "src.pokertool.community_features": 0.0,
      "src.pokertool.community_features.ForumPost": 0.00078003120124805,
      "src.pokertool.community_features.Challenge": 0.00078003120124805,
      "src.pokertool.community_features.MentorshipPair": 0.00078003120124805,
      "src.pokertool.community_features.CommunityTournament": 0.00078003120124805,
      "src.pokertool.community_features.KnowledgeArticle": 0.00078003120124805,
      "src.pokertool.community_features.CommunityPlatform": 0.00078003120124805,
      "src.pokertool.scrape_qa_harness": 0.0,
      "src.pokertool.scrape_qa_harness.FieldType": 0.00078003120124805,
      "src.pokertool.scrape_qa_harness.ThemeType": 0.00078003120124805,
      "src.pokertool.scrape_qa_harness.GroundTruth": 0.00078003120124805,
      "src.pokertool.scrape_qa_harness.QaTestCase": 0.00078003120124805,
      "src.pokertool.scrape_qa_harness.FieldDiff": 0.00078003120124805,
      "src.pokertool.scrape_qa_harness.QaTestResult": 0.00078003120124805,
      "src.pokertool.scrape_qa_harness.SuiteReport": 0.00078003120124805,
      "src.pokertool.scrape_qa_harness.ScrapeQAHarness": 0.00078003120124805,
      "src.pokertool.scrape_qa_harness.create_test_case_from_screenshot": 0.00078003120124805,
      "src.pokertool.scrape_qa_harness.save_test_case": 0.00078003120124805,
      "src.pokertool.database": 0.0,
      "src.pokertool.database.DatabaseType": 0.00078003120124805,
      "src.pokertool.database.DatabaseConfig": 0.00078003120124805,
      "src.pokertool.database.ProductionDatabase": 0.00078003120124805,
      "src.pokertool.database.get_production_db": 0.00078003120124805,
      "src.pokertool.database.migrate_to_production": 0.00078003120124805,
      "src.pokertool.gto_solver": 0.0,
      "src.pokertool.gto_solver.Action": 0.00078003120124805,
      "src.pokertool.gto_solver.Street": 0.00078003120124805,
      "src.pokertool.gto_solver.Range": 0.00078003120124805,
      "src.pokertool.gto_solver.GameState": 0.00078003120124805,
      "src.pokertool.gto_solver.Strategy": 0.00078003120124805,
      "src.pokertool.gto_solver.GTOSolution": 0.00078003120124805,
      "src.pokertool.gto_solver.LRUCache": 0.00078003120124805,
      "src.pokertool.gto_solver.EquityCalculator": 0.00078003120124805,
      "src.pokertool.gto_solver.GTOSolver": 0.00078003120124805,
      "src.pokertool.gto_solver.GTOTrainer": 0.00078003120124805,
      "src.pokertool.gto_solver.DeviationExplorer": 0.00078003120124805,
      "src.pokertool.gto_solver.get_gto_solver": 0.00234009360374415,
      "src.pokertool.gto_solver.solve_spot": 0.00078003120124805,
      "src.pokertool.gto_solver.create_standard_ranges": 0.0015600624024961,
      "src.pokertool.gto_solver.parse_range_string": 0.00078003120124805,
      "src.pokertool.gto_solver.calculate_range_equity": 0.00078003120124805,
      "src.pokertool.gto_solver.analyze_gto_spot": 0.00078003120124805,
      "src.pokertool.gto_solver._generate_recommendations": 0.0015600624024961,
      "src.pokertool.gto_solver.create_training_session": 0.00078003120124805,
      "src.pokertool.gto_solver.export_solution": 0.00078003120124805,
      "src.pokertool.smart_poker_detector": 0.0,
      "src.pokertool.smart_poker_detector.WindowPriority": 0.00078003120124805,
      "src.pokertool.smart_poker_detector.SmartPokerDetector": 0.00078003120124805,
      "src.pokertool.smart_poker_detector.create_smart_detector": 0.00078003120124805,
      "src.pokertool.automation": 0.0,
      "src.pokertool.automation._hash_file": 0.0015600624024961,
      "src.pokertool.automation._get_git_head": 0.0015600624024961,
      "src.pokertool.automation._missing_modules": 0.0015600624024961,
      "src.pokertool.automation.ensure_ml_tests_run": 0.00078003120124805,
      "src.pokertool.game_selection": 0.0,
      "src.pokertool.game_selection.GameType": 0.00078003120124805,
      "src.pokertool.game_selection.TablePosition": 0.00078003120124805,
      "src.pokertool.game_selection.PlayerProfile": 0.00078003120124805,
      "src.pokertool.game_selection.TableInfo": 0.00078003120124805,
      "src.pokertool.game_selection.GameRating": 0.00078003120124805,
      "src.pokertool.game_selection.TableScanner": 0.00078003120124805,
      "src.pokertool.game_selection.ProfitabilityCalculator": 0.00078003120124805,
      "src.pokertool.game_selection.PlayerPoolAnalyzer": 0.00078003120124805,
      "src.pokertool.game_selection.SeatSelector": 0.00078003120124805,
      "src.pokertool.game_selection.GameSelectionEngine": 0.00078003120124805,
      "src.pokertool.game_selection.analyze_single_table": 0.00078003120124805,
      "src.pokertool.game_selection.find_best_tables": 0.00078003120124805,
      "src.pokertool.game_selection.create_sample_player": 0.00078003120124805,
      "src.pokertool.ensemble_decision": 0.0,
      "src.pokertool.ensemble_decision.DecisionType": 0.00078003120124805,
      "src.pokertool.ensemble_decision.EngineDecision": 0.00078003120124805,
      "src.pokertool.ensemble_decision.EnsembleDecision": 0.00078003120124805,
      "src.pokertool.ensemble_decision.WeightOptimizer": 0.00078003120124805,
      "src.pokertool.ensemble_decision.DisagreementResolver": 0.00078003120124805,
      "src.pokertool.ensemble_decision.PerformanceTracker": 0.00078003120124805,
      "src.pokertool.ensemble_decision.EnsembleDecisionSystem": 0.00078003120124805,
      "src.pokertool.ensemble_decision.create_ensemble": 0.00078003120124805,
      "src.pokertool.input_validation": 0.0,
      "src.pokertool.input_validation.ValidationResult": 0.00078003120124805,
      "src.pokertool.input_validation.CardValidator": 0.00078003120124805,
      "src.pokertool.input_validation.BetValidator": 0.00078003120124805,
      "src.pokertool.input_validation.PlayerValidator": 0.00078003120124805,
      "src.pokertool.input_validation.TableValidator": 0.00078003120124805,
      "src.pokertool.input_validation.validate_card": 0.00078003120124805,
      "src.pokertool.input_validation.validate_bet": 0.00078003120124805,
      "src.pokertool.input_validation.sanitize_table_data": 0.00078003120124805,
      "src.pokertool.enhanced_gui": 0.0,
      "src.pokertool.enhanced_gui.IntegratedPokerAssistant": 0.00078003120124805,
      "src.pokertool.enhanced_gui._ensure_scraper_dependencies": 0.00078003120124805,
      "src.pokertool.enhanced_gui.main": 0.00078003120124805,
      "src.pokertool.preflop_charts": 0.0,
      "src.pokertool.preflop_charts.ChartRecommendation": 0.00078003120124805,
      "src.pokertool.preflop_charts.PreflopChartManager": 0.00078003120124805,
      "src.pokertool.preflop_charts.QuickCharts": 0.00078003120124805,
      "src.pokertool.preflop_charts.PreflopAnalyzer": 0.00078003120124805,
      "src.pokertool.csrf_protection": 0.0,
      "src.pokertool.csrf_protection.CSRFProtection": 0.00078003120124805,
      "src.pokertool.csrf_protection.CSRFMiddleware": 0.00078003120124805,
      "src.pokertool.csrf_protection.get_csrf_token": 0.00078003120124805,
      "src.pokertool.csrf_protection.create_csrf_protection": 0.00078003120124805,
      "src.pokertool.concurrency": 0.0,
      "src.pokertool.concurrency.TaskPriority": 0.00078003120124805,
      "src.pokertool.concurrency.TaskResult": 0.00078003120124805,
      "src.pokertool.concurrency.ThreadPoolConfig": 0.00078003120124805,
      "src.pokertool.concurrency.ThreadSafeCounter": 0.00078003120124805,
      "src.pokertool.concurrency.ThreadSafeDict": 0.00078003120124805,
      "src.pokertool.concurrency.TaskQueue": 0.00078003120124805,
      "src.pokertool.concurrency.PokerThreadPool": 0.00078003120124805,
      "src.pokertool.concurrency.AsyncManager": 0.00078003120124805,
      "src.pokertool.concurrency.PokerConcurrencyManager": 0.00078003120124805,
      "src.pokertool.concurrency._shutdown_global_thread_pool": 0.00078003120124805,
      "src.pokertool.concurrency.get_thread_pool": 0.0031201248049922,
      "src.pokertool.concurrency.threaded": 0.00078003120124805,
      "src.pokertool.concurrency.cpu_intensive": 0.00078003120124805,
      "src.pokertool.concurrency.get_async_manager": 0.0015600624024961,
      "src.pokertool.concurrency.get_poker_concurrency_manager": 0.00078003120124805,
      "src.pokertool.concurrency.managed_thread_pool": 0.00078003120124805,
      "src.pokertool.concurrency.async_context": 0.00078003120124805,
      "src.pokertool.concurrency.run_concurrent_tasks": 0.00078003120124805,
      "src.pokertool.concurrency.parallel_map": 0.00078003120124805,
      "src.pokertool.concurrency.monitor_performance": 0.00078003120124805,
      "src.pokertool.model_calibration": 0.0,
      "src.pokertool.model_calibration.DriftStatus": 0.00078003120124805,
      "src.pokertool.model_calibration.CalibrationMethod": 0.00078003120124805,
      "src.pokertool.model_calibration.PredictionRecord": 0.00078003120124805,
      "src.pokertool.model_calibration.CalibrationMetrics": 0.00078003120124805,
      "src.pokertool.model_calibration.DriftMetrics": 0.00078003120124805,
      "src.pokertool.model_calibration.OnlineCalibrator": 0.00078003120124805,
      "src.pokertool.model_calibration.DriftDetector": 0.00078003120124805,
      "src.pokertool.model_calibration.ModelCalibrationSystem": 0.00078003120124805,
      "src.pokertool.model_calibration.get_calibration_system": 0.00078003120124805,
      "src.pokertool.node_locker": 0.0,
      "src.pokertool.node_locker.NodeLock": 0.00078003120124805,
      "src.pokertool.node_locker.NodeLocker": 0.00078003120124805,
      "src.pokertool.meta_game": 0.0,
      "src.pokertool.meta_game.StrategyLevel": 0.00078003120124805,
      "src.pokertool.meta_game.PlayerReputation": 0.00078003120124805,
      "src.pokertool.meta_game.MetaGameState": 0.00078003120124805,
      "src.pokertool.meta_game.StrategyAdjustment": 0.00078003120124805,
      "src.pokertool.meta_game.LevelingWarSimulator": 0.00078003120124805,
      "src.pokertool.meta_game.DynamicStrategySwitcher": 0.00078003120124805,
      "src.pokertool.meta_game.ExploitationProtectionBalancer": 0.00078003120124805,
      "src.pokertool.meta_game.HistoryDependentStrategy": 0.00078003120124805,
      "src.pokertool.meta_game.ReputationModel": 0.00078003120124805,
      "src.pokertool.meta_game.MetaGameOptimizer": 0.00078003120124805,
      "src.pokertool.session_management": 0.0,
      "src.pokertool.session_management.SessionGoal": 0.00078003120124805,
      "src.pokertool.session_management.SessionMetrics": 0.00078003120124805,
      "src.pokertool.session_management.SessionReview": 0.00078003120124805,
      "src.pokertool.session_management.SessionRecord": 0.00078003120124805,
      "src.pokertool.session_management.SessionStorage": 0.00078003120124805,
      "src.pokertool.session_management.SessionManager": 0.00078003120124805,
      "src.pokertool.session_management._now": 0.00078003120124805,
      "src.pokertool.rate_limiter": 0.0,
      "src.pokertool.rate_limiter.RateLimitConfig": 0.00078003120124805,
      "src.pokertool.rate_limiter.RateLimitRecord": 0.00078003120124805,
      "src.pokertool.rate_limiter.RateLimiter": 0.00078003120124805,
      "src.pokertool.rate_limiter.AdaptiveRateLimiter": 0.00078003120124805,
      "src.pokertool.rate_limiter.configure_rate_limit": 0.0015600624024961,
      "src.pokertool.rate_limiter.check_rate_limit": 0.00078003120124805,
      "src.pokertool.rate_limiter.get_rate_limit_stats": 0.00078003120124805,
      "src.pokertool.rate_limiter.reset_rate_limits": 0.00078003120124805,
      "src.pokertool.rate_limiter.setup_default_rate_limits": 0.00078003120124805,
      "src.pokertool.rbac": 0.0,
      "src.pokertool.rbac.Permission": 0.00078003120124805,
      "src.pokertool.rbac.Role": 0.00078003120124805,
      "src.pokertool.rbac.RoleDefinition": 0.00078003120124805,
      "src.pokertool.rbac.RBACSystem": 0.00078003120124805,
      "src.pokertool.rbac.get_rbac_system": 0.0031201248049922,
      "src.pokertool.rbac.require_permission": 0.00078003120124805,
      "src.pokertool.rbac.require_role": 0.00078003120124805,
      "src.pokertool.rbac.requires_permission": 0.00078003120124805,
      "src.pokertool": 0.0,
      "src.pokertool.confidence_decision_api": 0.0,
      "src.pokertool.confidence_decision_api.ConfidenceBand": 0.00078003120124805,
      "src.pokertool.confidence_decision_api.RiskLevel": 0.00078003120124805,
      "src.pokertool.confidence_decision_api.ConfidenceInterval": 0.00078003120124805,
      "src.pokertool.confidence_decision_api.DecisionRecommendation": 0.00078003120124805,
      "src.pokertool.confidence_decision_api.PredictiveDistribution": 0.00078003120124805,
      "src.pokertool.confidence_decision_api.ConfidenceAwareDecisionAPI": 0.00078003120124805,
      "src.pokertool.confidence_decision_api.get_confidence_decision_api": 0.00078003120124805,
      "src.pokertool.feature_flags": 0.0,
      "src.pokertool.feature_flags.FeatureState": 0.00078003120124805,
      "src.pokertool.feature_flags.Feature": 0.00078003120124805,
      "src.pokertool.feature_flags.FeatureFlags": 0.00078003120124805,
      "src.pokertool.feature_flags.get_feature_flags": 0.0015600624024961,
      "src.pokertool.feature_flags.reset_feature_flags": 0.00078003120124805,
      "src.pokertool.feature_flags.is_feature_enabled": 0.0015600624024961,
      "src.pokertool.feature_flags.requires_feature": 0.00078003120124805,
      "src.pokertool.production_database": 0.0,
      "src.pokertool.production_database.DatabaseConfig": 0.00078003120124805,
      "src.pokertool.production_database.MigrationStats": 0.00078003120124805,
      "src.pokertool.production_database.ProductionDatabase": 0.00078003120124805,
      "src.pokertool.production_database.get_production_db": 0.0015600624024961,
      "src.pokertool.production_database.initialize_production_db": 0.0015600624024961,
      "src.pokertool.production_database.migrate_to_production": 0.00078003120124805,
      "src.pokertool.frame_differencing_engine": 0.0,
      "src.pokertool.frame_differencing_engine.FrameDifferenceMetrics": 0.00078003120124805,
      "src.pokertool.frame_differencing_engine.FrameDifferencingEngine": 0.00078003120124805,
      "src.pokertool.frame_differencing_engine.get_frame_diff_engine": 0.00078003120124805,
      "src.pokertool.frame_differencing_engine.reset_frame_diff_engine": 0.00078003120124805,
      "src.pokertool.nash_solver": 0.0,
      "src.pokertool.nash_solver.NashResult": 0.00078003120124805,
      "src.pokertool.nash_solver.AdvancedNashSolver": 0.00078003120124805,
      "src.pokertool.nash_solver.InformationSet": 0.00078003120124805,
      "src.pokertool.nash_solver.AbstractedNode": 0.00078003120124805,
      "src.pokertool.nash_solver.GameTreeAbstractor": 0.00078003120124805,
      "src.pokertool.nash_solver.HistogramAbstractor": 0.00078003120124805,
      "src.pokertool.correlation_id_middleware": 0.0,
      "src.pokertool.correlation_id_middleware.CorrelationIdMiddleware": 0.00078003120124805,
      "src.pokertool.correlation_id_middleware.CorrelationIdFilter": 0.00078003120124805,
      "src.pokertool.correlation_id_middleware.CorrelationIdPropagator": 0.00078003120124805,
      "src.pokertool.correlation_id_middleware.DatabaseQueryTracer": 0.00078003120124805,
      "src.pokertool.correlation_id_middleware.get_correlation_id": 0.00078003120124805,
      "src.pokertool.correlation_id_middleware.set_correlation_id": 0.00078003120124805,
      "src.pokertool.correlation_id_middleware.with_correlation_id": 0.00078003120124805,
      "src.pokertool.correlation_id_middleware.get_logger_with_correlation_id": 0.00078003120124805,
      "src.pokertool.db_performance_monitor": 0.0,
      "src.pokertool.db_performance_monitor.PerformanceConfig": 0.00078003120124805,
      "src.pokertool.db_performance_monitor.QueryMetrics": 0.00078003120124805,
      "src.pokertool.db_performance_monitor.QueryStats": 0.00078003120124805,
      "src.pokertool.db_performance_monitor.DatabasePerformanceMonitor": 0.00078003120124805,
      "src.pokertool.db_performance_monitor._QueryTracker": 0.00078003120124805,
      "src.pokertool.db_performance_monitor.get_performance_report": 0.00078003120124805,
      "src.pokertool.db_performance_monitor.reset_performance_stats": 0.00078003120124805,
      "src.pokertool.db_performance_monitor.cleanup_old_performance_data": 0.00078003120124805,
      "src.pokertool.leveling_war": 0.0,
      "src.pokertool.leveling_war.ThinkingLevel": 0.00078003120124805,
      "src.pokertool.leveling_war.LevelingOutcome": 0.00078003120124805,
      "src.pokertool.leveling_war.LevelEstimator": 0.00078003120124805,
      "src.pokertool.leveling_war.StrategyEvolution": 0.00078003120124805,
      "src.pokertool.leveling_war.CounterStrategyGenerator": 0.00078003120124805,
      "src.pokertool.leveling_war.LevelingWarSimulator": 0.00078003120124805,
      "src.pokertool.leveling_war.MetaGameTracker": 0.00078003120124805,
      "src.pokertool.leveling_war.analyze_leveling_war": 0.00078003120124805,
      "src.pokertool.range_generator": 0.0,
      "src.pokertool.range_generator.Position": 0.00078003120124805,
      "src.pokertool.range_generator.Action": 0.00078003120124805,
      "src.pokertool.range_generator.RangeParameters": 0.00078003120124805,
      "src.pokertool.range_generator.HandRange": 0.00078003120124805,
      "src.pokertool.range_generator.HandParser": 0.00078003120124805,
      "src.pokertool.range_generator.AnteAdjuster": 0.00078003120124805,
      "src.pokertool.range_generator.StraddleAdapter": 0.00078003120124805,
      "src.pokertool.range_generator.ICMAdjuster": 0.00078003120124805,
      "src.pokertool.range_generator.MultiWayAdjuster": 0.00078003120124805,
      "src.pokertool.range_generator.BaseRangeGenerator": 0.00078003120124805,
      "src.pokertool.range_generator.RangeGenerator": 0.00078003120124805,
      "src.pokertool.async_scraper_executor": 0.0,
      "src.pokertool.async_scraper_executor.PerformanceMetrics": 0.00078003120124805,
      "src.pokertool.async_scraper_executor.ScrapeResult": 0.00078003120124805,
      "src.pokertool.async_scraper_executor.AsyncScraperExecutor": 0.00078003120124805,
      "src.pokertool.async_scraper_executor.get_async_executor": 0.00078003120124805,
      "src.pokertool.async_scraper_executor.shutdown_async_executor": 0.00078003120124805,
      "src.pokertool.multi_table_support": 0.0,
      "src.pokertool.multi_table_support.TableLayout": 0.00078003120124805,
      "src.pokertool.multi_table_support.TableState": 0.00078003120124805,
      "src.pokertool.multi_table_support.TablePriority": 0.00078003120124805,
      "src.pokertool.multi_table_support.TableWindow": 0.00078003120124805,
      "src.pokertool.multi_table_support.HotkeyAction": 0.00078003120124805,
      "src.pokertool.multi_table_support.TableManager": 0.00078003120124805,
      "src.pokertool.multi_table_support.get_table_manager": 0.0078003120124804995,
      "src.pokertool.multi_table_support.add_poker_table": 0.00078003120124805,
      "src.pokertool.multi_table_support.remove_poker_table": 0.00078003120124805,
      "src.pokertool.multi_table_support.tile_tables": 0.00078003120124805,
      "src.pokertool.multi_table_support.focus_next": 0.00078003120124805,
      "src.pokertool.multi_table_support.get_active_tables": 0.00078003120124805,
      "src.pokertool.multi_table_support.get_tables_needing_action": 0.00078003120124805,
      "src.pokertool.multi_table_support.setup_custom_hotkey": 0.00078003120124805,
      "src.pokertool.multi_table_support.save_table_session": 0.00078003120124805,
      "src.pokertool.multi_table_support.load_table_session": 0.00078003120124805,
      "src.pokertool.blocker_effects": 0.0,
      "src.pokertool.blocker_effects.BlockerType": 0.00078003120124805,
      "src.pokertool.blocker_effects.BlockerStrength": 0.00078003120124805,
      "src.pokertool.blocker_effects.BoardTextureAnalyzer": 0.00078003120124805,
      "src.pokertool.blocker_effects.EquityAdjuster": 0.00078003120124805,
      "src.pokertool.blocker_effects.BluffSelector": 0.00078003120124805,
      "src.pokertool.blocker_effects.RangeBlockerAnalysis": 0.00078003120124805,
      "src.pokertool.blocker_effects.quick_blocker_eval": 0.00078003120124805,
      "src.pokertool.blocker_effects.get_best_bluff_combos": 0.00078003120124805,
      "src.pokertool.blocker_effects.calculate_blocker_equity_boost": 0.00078003120124805,
      "src.pokertool.hand_history_db": 0.0,
      "src.pokertool.hand_history_db.GameStage": 0.00078003120124805,
      "src.pokertool.hand_history_db.ActionType": 0.00078003120124805,
      "src.pokertool.hand_history_db.PlayerInfo": 0.00078003120124805,
      "src.pokertool.hand_history_db.PlayerAction": 0.00078003120124805,
      "src.pokertool.hand_history_db.HandHistory": 0.00078003120124805,
      "src.pokertool.hand_history_db.HandHistoryDatabase": 0.00078003120124805,
      "src.pokertool.hand_history_db.get_hand_history_db": 0.00078003120124805,
      "src.pokertool.threading": 0.0,
      "src.pokertool.threading.ThreadSafeDict": 0.00078003120124805,
      "src.pokertool.threading.ThreadSafeCounter": 0.00078003120124805,
      "src.pokertool.threading.TaskPriority": 0.00078003120124805,
      "src.pokertool.threading.AsyncCallback": 0.00078003120124805,
      "src.pokertool.threading.get_thread_pool": 0.0015600624024961,
      "src.pokertool.threading.shutdown_thread_pool": 0.0015600624024961,
      "src.pokertool.threading.run_in_thread": 0.00078003120124805,
      "src.pokertool.threading.thread_safe": 0.00078003120124805,
      "src.pokertool.threading.with_timeout": 0.00078003120124805,
      "src.pokertool.threading.register_callback": 0.00078003120124805,
      "src.pokertool.threading.trigger_callbacks": 0.00078003120124805,
      "src.pokertool.threading.get_thread_local": 0.00078003120124805,
      "src.pokertool.threading.set_thread_local": 0.00078003120124805,
      "src.pokertool.threading.clear_thread_local": 0.0015600624024961,
      "src.pokertool.threading.cleanup_threading": 0.00078003120124805,
      "src.pokertool.error_handling": 0.0,
      "src.pokertool.error_handling.SecurityError": 0.00078003120124805,
      "src.pokertool.error_handling.CircuitBreaker": 0.00078003120124805,
      "src.pokertool.error_handling.sanitize_input": 0.00078003120124805,
      "src.pokertool.error_handling.retry_on_failure": 0.00078003120124805,
      "src.pokertool.error_handling.run_safely": 0.00078003120124805,
      "src.pokertool.error_handling.db_guard": 0.00078003120124805,
      "src.pokertool.structured_logger": 0.0,
      "src.pokertool.structured_logger.LogLevel": 0.00078003120124805,
      "src.pokertool.structured_logger.JSONFormatter": 0.00078003120124805,
      "src.pokertool.structured_logger.StructuredLogger": 0.00078003120124805,
      "src.pokertool.structured_logger.get_logger": 0.0031201248049922,
      "src.pokertool.structured_logger.setup_logging": 0.00078003120124805,
      "src.pokertool.structured_logger.log_api_request": 0.00078003120124805,
      "src.pokertool.structured_logger.log_ml_prediction": 0.00078003120124805,
      "src.pokertool.structured_logger.log_error": 0.00078003120124805,
      "src.pokertool.api": 0.0,
      "src.pokertool.api.UserRole": 0.00078003120124805,
      "src.pokertool.api.APIUser": 0.00078003120124805,
      "src.pokertool.api.AuthenticationService": 0.00078003120124805,
      "src.pokertool.api.ConnectionManager": 0.00078003120124805,
      "src.pokertool.api.DetectionWebSocketManager": 0.00078003120124805,
      "src.pokertool.api.APIServices": 0.00078003120124805,
      "src.pokertool.api.PokerToolAPI": 0.00078003120124805,
      "src.pokertool.api.get_detection_ws_manager": 0.0015600624024961,
      "src.pokertool.api.broadcast_detection_event": 0.00078003120124805,
      "src.pokertool.api.get_api": 0.0015600624024961,
      "src.pokertool.api.create_app": 0.0015600624024961,
      "src.pokertool.api.run_api_server": 0.0015600624024961,
      "src.pokertool.api.main": 0.00078003120124805,
      "src.pokertool.network_analysis": 0.0,
      "src.pokertool.network_analysis.Interaction": 0.00078003120124805,
      "src.pokertool.network_analysis.PlayerNode": 0.00078003120124805,
      "src.pokertool.network_analysis.EdgeMetrics": 0.00078003120124805,
      "src.pokertool.network_analysis.NetworkAnalysis": 0.00078003120124805,
      "src.pokertool.qaoa_solver": 0.0,
      "src.pokertool.qaoa_solver.QAOAParameters": 0.00078003120124805,
      "src.pokertool.qaoa_solver.QAOAResult": 0.00078003120124805,
      "src.pokertool.qaoa_solver.QAOAProblemHamiltonian": 0.00078003120124805,
      "src.pokertool.qaoa_solver.QAOAMixingHamiltonian": 0.00078003120124805,
      "src.pokertool.qaoa_solver.QAOASolver": 0.00078003120124805,
      "src.pokertool.qaoa_solver.PokerQAOASolver": 0.00078003120124805,
      "src.pokertool.qaoa_solver.solve_maxcut_qaoa": 0.00078003120124805,
      "src.pokertool.qaoa_solver.optimize_portfolio_qaoa": 0.00078003120124805,
      "src.pokertool.hud_overlay": 0.0,
      "src.pokertool.hud_overlay.HUDConfig": 0.00078003120124805,
      "src.pokertool.hud_overlay.PlayerHUDStats": 0.00078003120124805,
      "src.pokertool.hud_overlay.HUDOverlay": 0.00078003120124805,
      "src.pokertool.hud_overlay.get_hud_overlay": 0.00078003120124805,
      "src.pokertool.hud_overlay.start_hud_overlay": 0.00078003120124805,
      "src.pokertool.hud_overlay.stop_hud_overlay": 0.00078003120124805,
      "src.pokertool.hud_overlay.update_hud_state": 0.00078003120124805,
      "src.pokertool.hud_overlay.is_hud_running": 0.00078003120124805,
      "src.pokertool.pattern_detector": 0.0,
      "src.pokertool.pattern_detector.Pattern": 0.00078003120124805,
      "src.pokertool.pattern_detector.TimeSeriesAnalyzer": 0.00078003120124805,
      "src.pokertool.pattern_detector.BehavioralPatternDetector": 0.00078003120124805,
      "src.pokertool.pattern_detector.SequencePatternMatcher": 0.00078003120124805,
      "src.pokertool.pattern_detector.AnomalyDetector": 0.00078003120124805,
      "src.pokertool.pattern_detector.calculate_pattern_strength": 0.00078003120124805,
      "src.pokertool.pattern_detector.combine_pattern_scores": 0.00078003120124805,
      "src.pokertool.smart_ocr_cache": 0.0,
      "src.pokertool.smart_ocr_cache.CachedResult": 0.00078003120124805,
      "src.pokertool.smart_ocr_cache.CacheMetrics": 0.00078003120124805,
      "src.pokertool.smart_ocr_cache.SmartOCRCache": 0.00078003120124805,
      "src.pokertool.smart_ocr_cache.get_ocr_cache": 0.00078003120124805,
      "src.pokertool.smart_ocr_cache.reset_ocr_cache": 0.00078003120124805,
      "src.pokertool.cli": 0.0,
      "src.pokertool.cli.main": 0.00078003120124805,
      "src.pokertool.cli.run_test_mode": 0.0015600624024961,
      "src.pokertool.circuit_breaker": 0.0,
      "src.pokertool.circuit_breaker.CircuitState": 0.00078003120124805,
      "src.pokertool.circuit_breaker.CircuitBreakerConfig": 0.00078003120124805,
      "src.pokertool.circuit_breaker.CircuitBreakerMetrics": 0.00078003120124805,
      "src.pokertool.circuit_breaker.CircuitBreaker": 0.00078003120124805,
      "src.pokertool.circuit_breaker.CircuitBreakerOpenError": 0.00078003120124805,
      "src.pokertool.circuit_breaker.get_circuit_breaker": 0.00078003120124805,
      "src.pokertool.circuit_breaker.get_all_circuit_breakers": 0.00078003120124805,
      "src.pokertool.circuit_breaker.reset_all_circuit_breakers": 0.00078003120124805,
      "src.pokertool.user_config": 0.0,
      "src.pokertool.user_config.UserConfig": 0.00078003120124805,
      "src.pokertool.user_config.ConfigManager": 0.00078003120124805,
      "src.pokertool.user_config.get_config_manager": 0.0039001560062402497,
      "src.pokertool.user_config.get_poker_handle": 0.0015600624024961,
      "src.pokertool.user_config.set_poker_handle": 0.0015600624024961,
      "src.pokertool.user_config.has_poker_handle": 0.0015600624024961,
      "src.pokertool.user_config.prompt_for_poker_handle": 0.00078003120124805,
      "src.pokertool.ocr_recognition": 0.0,
      "src.pokertool.ocr_recognition.RecognitionMethod": 0.00078003120124805,
      "src.pokertool.ocr_recognition.CardRegion": 0.00078003120124805,
      "src.pokertool.ocr_recognition.RecognitionResult": 0.00078003120124805,
      "src.pokertool.ocr_recognition.CardTemplateManager": 0.00078003120124805,
      "src.pokertool.ocr_recognition.PokerOCR": 0.00078003120124805,
      "src.pokertool.ocr_recognition.get_poker_ocr": 0.00078003120124805,
      "src.pokertool.ocr_recognition.create_card_regions": 0.00078003120124805,
      "src.pokertool.theme_system": 0.0,
      "src.pokertool.theme_system.Palette": 0.00078003120124805,
      "src.pokertool.theme_system.Typography": 0.00078003120124805,
      "src.pokertool.theme_system.Theme": 0.00078003120124805,
      "src.pokertool.theme_system.ThemeDraft": 0.00078003120124805,
      "src.pokertool.theme_system.MarketplaceEntry": 0.00078003120124805,
      "src.pokertool.theme_system.ThemeEngine": 0.00078003120124805,
      "src.pokertool.theme_system.ThemeEditor": 0.00078003120124805,
      "src.pokertool.theme_system.ThemeMarketplace": 0.00078003120124805,
      "src.pokertool.range_merger": 0.0,
      "src.pokertool.range_merger.HandCategory": 0.00078003120124805,
      "src.pokertool.range_merger.HandCombo": 0.00078003120124805,
      "src.pokertool.range_merger.RangeStructure": 0.00078003120124805,
      "src.pokertool.range_merger.MinimumDefenseFrequency": 0.00078003120124805,
      "src.pokertool.range_merger.PolarizationOptimizer": 0.00078003120124805,
      "src.pokertool.range_merger.RemovalEffectsCalculator": 0.00078003120124805,
      "src.pokertool.range_merger.BlockerAnalyzer": 0.00078003120124805,
      "src.pokertool.range_merger.RangeSimplifier": 0.00078003120124805,
      "src.pokertool.range_merger.AdvancedRangeMerger": 0.00078003120124805,
      "src.pokertool.mcts_optimizer": 0.0,
      "src.pokertool.mcts_optimizer.GameState": 0.00078003120124805,
      "src.pokertool.mcts_optimizer.MCTSNode": 0.00078003120124805,
      "src.pokertool.mcts_optimizer.MCTSConfig": 0.00078003120124805,
      "src.pokertool.mcts_optimizer.TranspositionTable": 0.00078003120124805,
      "src.pokertool.mcts_optimizer.MCTSOptimizer": 0.00078003120124805,
      "src.pokertool.master_logging": 0.0,
      "src.pokertool.master_logging.LogLevel": 0.00078003120124805,
      "src.pokertool.master_logging.LogCategory": 0.00078003120124805,
      "src.pokertool.master_logging.LogContext": 0.00078003120124805,
      "src.pokertool.master_logging.ErrorDetails": 0.00078003120124805,
      "src.pokertool.master_logging.MasterLogger": 0.00078003120124805,
      "src.pokertool.master_logging.get_master_logger": 0.0046801872074883,
      "src.pokertool.master_logging.log_info": 0.00078003120124805,
      "src.pokertool.master_logging.log_error": 0.0015600624024961,
      "src.pokertool.master_logging.log_warning": 0.00078003120124805,
      "src.pokertool.master_logging.log_performance": 0.00078003120124805,
      "src.pokertool.master_logging.log_security_event": 0.00078003120124805,
      "src.pokertool.master_logging.auto_log_errors": 0.00078003120124805,
      "src.pokertool.synthetic_data_generator": 0.0,
      "src.pokertool.synthetic_data_generator.TableTheme": 0.00078003120124805,
      "src.pokertool.synthetic_data_generator.PlayerSeat": 0.00078003120124805,
      "src.pokertool.synthetic_data_generator.TableState": 0.00078003120124805,
      "src.pokertool.synthetic_data_generator.SyntheticDataGenerator": 0.00078003120124805,
      "src.pokertool.synthetic_data_generator.generate_synthetic_dataset": 0.00078003120124805,
      "src.pokertool.storage": 0.0,
      "src.pokertool.storage.SecurityError": 0.00078003120124805,
      "src.pokertool.storage.SecureDatabase": 0.00078003120124805,
      "src.pokertool.storage.get_secure_db": 0.00078003120124805,
      "src.pokertool.storage.init_db": 0.0015600624024961,
      "src.pokertool.storage.initialise_db_if_needed": 0.00078003120124805,
      "src.pokertool.performance_profiler": 0.0,
      "src.pokertool.performance_profiler.PerformanceSnapshot": 0.00078003120124805,
      "src.pokertool.performance_profiler.AlertRule": 0.00078003120124805,
      "src.pokertool.performance_profiler.OptimizationSuggestion": 0.00078003120124805,
      "src.pokertool.performance_profiler.ProfilingReport": 0.00078003120124805,
      "src.pokertool.performance_profiler.PerformanceProfiler": 0.00078003120124805,
      "src.pokertool.advanced_reporting": 0.0,
      "src.pokertool.advanced_reporting.ChartConfig": 0.00078003120124805,
      "src.pokertool.advanced_reporting.ReportSection": 0.00078003120124805,
      "src.pokertool.advanced_reporting.ReportTemplate": 0.00078003120124805,
      "src.pokertool.advanced_reporting.ReportRequest": 0.00078003120124805,
      "src.pokertool.advanced_reporting.ReportResult": 0.00078003120124805,
      "src.pokertool.advanced_reporting.ReportBuilder": 0.00078003120124805,
      "src.pokertool.startup_validator": 0.0,
      "src.pokertool.startup_validator.HealthStatus": 0.00078003120124805,
      "src.pokertool.startup_validator.ModuleHealth": 0.00078003120124805,
      "src.pokertool.startup_validator.StartupValidator": 0.00078003120124805,
      "src.pokertool.startup_validator.DependencyCheck": 0.00078003120124805,
      "src.pokertool.startup_validator.check_dependencies": 0.0015600624024961,
      "src.pokertool.startup_validator.print_dependency_report": 0.0015600624024961,
      "src.pokertool.startup_validator.validate_startup_dependencies": 0.00078003120124805,
      "src.pokertool.tournament_support": 0.0,
      "src.pokertool.tournament_support.TournamentPhase": 0.00078003120124805,
      "src.pokertool.tournament_support.TournamentType": 0.00078003120124805,
      "src.pokertool.tournament_support.TournamentStructure": 0.00078003120124805,
      "src.pokertool.tournament_support.PayoutStructure": 0.00078003120124805,
      "src.pokertool.tournament_support.PlayerStack": 0.00078003120124805,
      "src.pokertool.tournament_support.TournamentState": 0.00078003120124805,
      "src.pokertool.tournament_support.ICMCalculator": 0.00078003120124805,
      "src.pokertool.tournament_support.PushFoldCalculator": 0.00078003120124805,
      "src.pokertool.tournament_support.TournamentStrategy": 0.00078003120124805,
      "src.pokertool.tournament_support.TournamentAnalyzer": 0.00078003120124805,
      "src.pokertool.tournament_support.get_tournament_analyzer": 0.00078003120124805,
      "src.pokertool.tournament_support.calculate_icm_equity": 0.00078003120124805,
      "src.pokertool.tournament_support.get_tournament_strategy": 0.00078003120124805,
      "src.pokertool.tournament_support.analyze_satellite_spot": 0.00078003120124805,
      "src.pokertool.i18n": 0.0,
      "src.pokertool.i18n.LocaleListener": 0.00078003120124805,
      "src.pokertool.i18n.TranslationManager": 0.00078003120124805,
      "src.pokertool.i18n.translate": 0.00078003120124805,
      "src.pokertool.i18n.set_locale": 0.00078003120124805,
      "src.pokertool.i18n.get_current_locale": 0.00078003120124805,
      "src.pokertool.i18n.available_locales": 0.00078003120124805,
      "src.pokertool.i18n.format_decimal": 0.00078003120124805,
      "src.pokertool.i18n.format_currency": 0.00078003120124805,
      "src.pokertool.i18n.convert_currency": 0.00078003120124805,
      "src.pokertool.i18n.format_datetime": 0.00078003120124805,
      "src.pokertool.i18n.register_locale_listener": 0.00078003120124805,
      "src.pokertool.i18n.unregister_locale_listener": 0.00078003120124805,
      "src.pokertool.gpu_preprocessing": 0.0,
      "src.pokertool.gpu_preprocessing.AcceleratorType": 0.00078003120124805,
      "src.pokertool.gpu_preprocessing.PerformanceMetrics": 0.00078003120124805,
      "src.pokertool.gpu_preprocessing.GPUCapabilities": 0.00078003120124805,
      "src.pokertool.gpu_preprocessing.GPUPreprocessor": 0.00078003120124805,
      "src.pokertool.gpu_preprocessing.get_gpu_preprocessor": 0.00078003120124805,
      "src.pokertool.gpu_preprocessing.benchmark_accelerators": 0.00078003120124805,
      "src.pokertool.error_handler": 0.0,
      "src.pokertool.error_handler.ErrorSeverity": 0.00078003120124805,
      "src.pokertool.error_handler.ErrorCategory": 0.00078003120124805,
      "src.pokertool.error_handler.ErrorContext": 0.00078003120124805,
      "src.pokertool.error_handler.PokerToolError": 0.00546021840873635,
      "src.pokertool.error_handler.SystemError": 0.00078003120124805,
      "src.pokertool.error_handler.NetworkError": 0.00078003120124805,
      "src.pokertool.error_handler.DatabaseError": 0.00078003120124805,
      "src.pokertool.error_handler.MLModelError": 0.00078003120124805,
      "src.pokertool.error_handler.ScrapingError": 0.00078003120124805,
      "src.pokertool.error_handler.ValidationError": 0.00078003120124805,
      "src.pokertool.error_handler.GlobalErrorHandler": 0.00078003120124805,
      "src.pokertool.error_handler.handle_error": 0.00078003120124805,
      "src.pokertool.error_handler.get_error_stats": 0.00078003120124805,
      "src.pokertool.error_handler.setup_error_handler": 0.00078003120124805,
      "src.pokertool.__init__ 2": 0.0,
      "src.pokertool.floating_advice_window": 0.0,
      "src.pokertool.floating_advice_window.ActionType": 0.00078003120124805,
      "src.pokertool.floating_advice_window.ConfidenceLevel": 0.00078003120124805,
      "src.pokertool.floating_advice_window.Advice": 0.00078003120124805,
      "src.pokertool.floating_advice_window.FloatingAdviceWindow": 0.00078003120124805,
      "src.pokertool.study_mode": 0.0,
      "src.pokertool.study_mode.Flashcard": 0.00078003120124805,
      "src.pokertool.study_mode.QuizQuestion": 0.00078003120124805,
      "src.pokertool.study_mode.QuizResult": 0.00078003120124805,
      "src.pokertool.study_mode.Lesson": 0.00078003120124805,
      "src.pokertool.study_mode.StudyProgress": 0.00078003120124805,
      "src.pokertool.study_mode.StudyPersistence": 0.00078003120124805,
      "src.pokertool.study_mode.SpacedRepetitionScheduler": 0.00078003120124805,
      "src.pokertool.study_mode.QuizSession": 0.00078003120124805,
      "src.pokertool.study_mode.StudyModeManager": 0.00078003120124805,
      "src.pokertool.study_mode._now": 0.00078003120124805,
      "src.pokertool.bluff_detection": 0.0,
      "src.pokertool.bluff_detection.ActionTiming": 0.00078003120124805,
      "src.pokertool.bluff_detection.ShowdownObservation": 0.00078003120124805,
      "src.pokertool.bluff_detection.BluffAssessment": 0.00078003120124805,
      "src.pokertool.bluff_detection.PlayerBluffProfile": 0.00078003120124805,
      "src.pokertool.bluff_detection.BluffDetectionEngine": 0.00078003120124805,
      "src.pokertool.solver_api": 0.0,
      "src.pokertool.solver_api.SolverQuery": 0.00078003120124805,
      "src.pokertool.solver_api.SolverResult": 0.00078003120124805,
      "src.pokertool.solver_api.SolverCache": 0.00078003120124805,
      "src.pokertool.solver_api.ApproximationEngine": 0.00078003120124805,
      "src.pokertool.solver_api.ProgressiveRefiner": 0.00078003120124805,
      "src.pokertool.solver_api.LatencyOptimizer": 0.00078003120124805,
      "src.pokertool.solver_api.ParallelSolverExecutor": 0.00078003120124805,
      "src.pokertool.solver_api.RealtimeSolverAPI": 0.00078003120124805,
      "src.pokertool.solver_api.create_solver_api": 0.0015600624024961,
      "src.pokertool.solver_api.quick_query": 0.00078003120124805,
      "src.pokertool.gto_deviations": 0.00078003120124805,
      "src.pokertool.gto_deviations.ActionType": 0.00078003120124805,
      "src.pokertool.gto_deviations.StrategyType": 0.00078003120124805,
      "src.pokertool.gto_deviations.PopulationTendency": 0.00078003120124805,
      "src.pokertool.gto_deviations.OpponentModel": 0.00078003120124805,
      "src.pokertool.gto_deviations.Deviation": 0.00078003120124805,
      "src.pokertool.gto_deviations.PopulationProfile": 0.00078003120124805,
      "src.pokertool.gto_deviations.DeviationRequest": 0.00078003120124805,
      "src.pokertool.gto_deviations.DeviationResult": 0.00078003120124805,
      "src.pokertool.gto_deviations.MaximumExploitationFinder": 0.00078003120124805,
      "src.pokertool.gto_deviations.NodeLocker": 0.00078003120124805,
      "src.pokertool.gto_deviations.StrategySimplifier": 0.00078003120124805,
      "src.pokertool.gto_deviations.DeviationEVCalculator": 0.00078003120124805,
      "src.pokertool.gto_deviations.GTODeviationEngine": 0.00078003120124805,
      "src.pokertool.gto_deviations.GTODeviationCalculator": 0.00078003120124805,
      "src.pokertool.gto_deviations.create_opponent_model": 0.00078003120124805,
      "src.pokertool.gto_deviations.find_deviations": 0.00078003120124805,
      "src.pokertool.stats_validator": 0.0,
      "src.pokertool.stats_validator.TestType": 0.00078003120124805,
      "src.pokertool.stats_validator.CorrectionMethod": 0.00078003120124805,
      "src.pokertool.stats_validator.HypothesisTestResult": 0.00078003120124805,
      "src.pokertool.stats_validator.ConfidenceInterval": 0.00078003120124805,
      "src.pokertool.stats_validator.SampleSizeRecommendation": 0.00078003120124805,
      "src.pokertool.stats_validator.HypothesisTester": 0.00078003120124805,
      "src.pokertool.stats_validator.ConfidenceIntervalCalculator": 0.00078003120124805,
      "src.pokertool.stats_validator.SampleSizeCalculator": 0.00078003120124805,
      "src.pokertool.stats_validator.VarianceReducer": 0.00078003120124805,
      "src.pokertool.stats_validator.PValueCorrector": 0.00078003120124805,
      "src.pokertool.stats_validator.StatisticalValidator": 0.00078003120124805,
      "src.pokertool.stats_validator.quick_validate": 0.00078003120124805,
      "src.pokertool.stats_validator.calculate_required_sample_size": 0.00078003120124805,
      "src.pokertool.api_client": 0.0,
      "src.pokertool.api_client.APIError": 0.0031201248049922,
      "src.pokertool.api_client.AuthenticationError": 0.00078003120124805,
      "src.pokertool.api_client.RateLimitError": 0.00078003120124805,
      "src.pokertool.api_client.ValidationError": 0.00078003120124805,
      "src.pokertool.api_client.HandAnalysisRequest": 0.00078003120124805,
      "src.pokertool.api_client.HandAnalysisResponse": 0.00078003120124805,
      "src.pokertool.api_client.PokerToolClient": 0.00078003120124805,
      "src.pokertool.rl_agent": 0.0,
      "src.pokertool.rl_agent.AgentLevel": 0.00078003120124805,
      "src.pokertool.rl_agent.Action": 0.00078003120124805,
      "src.pokertool.rl_agent.PolicyNetwork": 0.00078003120124805,
      "src.pokertool.rl_agent.ValueNetwork": 0.00078003120124805,
      "src.pokertool.rl_agent.ExperienceReplayBuffer": 0.00078003120124805,
      "src.pokertool.rl_agent.RewardShaper": 0.00078003120124805,
      "src.pokertool.rl_agent.CurriculumManager": 0.00078003120124805,
      "src.pokertool.rl_agent.PPOTrainer": 0.00078003120124805,
      "src.pokertool.rl_agent.RLAgent": 0.00078003120124805,
      "src.pokertool.rl_agent.MultiAgentTrainer": 0.00078003120124805,
      "src.pokertool.variance_calculator": 0.0,
      "src.pokertool.variance_calculator.SessionResult": 0.00078003120124805,
      "src.pokertool.variance_calculator.VarianceReport": 0.00078003120124805,
      "src.pokertool.variance_calculator.VarianceCalculator": 0.00078003120124805,
      "src.pokertool.variance_calculator.calculate_variance": 0.00078003120124805,
      "src.pokertool.variance_calculator.calculate_standard_deviation": 0.00078003120124805,
      "src.pokertool.variance_calculator.simulate_sessions": 0.00078003120124805,
      "src.pokertool.variance_calculator.calculate_confidence_interval": 0.0015600624024961,
      "src.pokertool.variance_calculator.quick_risk_analysis": 0.00078003120124805,
      "src.pokertool.gui": 0.0,
      "src.pokertool.gui.VisualCard": 0.00078003120124805,
      "src.pokertool.gui.CardSelectionPanel": 0.00078003120124805,
      "src.pokertool.gui.PlayerInfo": 0.00078003120124805,
      "src.pokertool.gui.TableVisualization": 0.00078003120124805,
      "src.pokertool.gui.EnhancedPokerAssistantFrame": 0.00078003120124805,
      "src.pokertool.gui.EnhancedPokerAssistant": 0.00078003120124805,
      "src.pokertool.gui.main": 0.0015600624024961,
      "src.pokertool.gui.run": 0.00078003120124805,
      "src.pokertool.documentation_system": 0.0,
      "src.pokertool.documentation_system.HelpTopic": 0.00078003120124805,
      "src.pokertool.documentation_system.VideoTutorial": 0.00078003120124805,
      "src.pokertool.documentation_system.GuideStep": 0.00078003120124805,
      "src.pokertool.documentation_system.InteractiveGuide": 0.00078003120124805,
      "src.pokertool.documentation_system.FAQEntry": 0.00078003120124805,
      "src.pokertool.documentation_system.ContextHelp": 0.00078003120124805,
      "src.pokertool.documentation_system.DocumentationSystem": 0.00078003120124805,
      "src.pokertool.documentation_system._sanitize": 0.00078003120124805,
      "src.pokertool.live_decision_engine": 0.0,
      "src.pokertool.live_decision_engine.GameState": 0.00078003120124805,
      "src.pokertool.live_decision_engine.WinProbabilityCalculator": 0.00078003120124805,
      "src.pokertool.live_decision_engine.ReasoningGenerator": 0.00078003120124805,
      "src.pokertool.live_decision_engine.LiveDecisionEngine": 0.00078003120124805,
      "src.pokertool.live_decision_engine.get_live_decision_engine": 0.0015600624024961,
      "src.pokertool.live_decision_engine.demo": 0.00078003120124805,
      "src.pokertool.hand_range_analyzer": 0.0,
      "src.pokertool.hand_range_analyzer.RangeEntry": 0.00078003120124805,
      "src.pokertool.hand_range_analyzer.RangeProfile": 0.00078003120124805,
      "src.pokertool.hand_range_analyzer.RangeEquityResult": 0.00078003120124805,
      "src.pokertool.hand_range_analyzer.RangeHeatMap": 0.00078003120124805,
      "src.pokertool.hand_range_analyzer.RangeParsingError": 0.00078003120124805,
      "src.pokertool.hand_range_analyzer.HandRangeAnalyzer": 0.00078003120124805,
      "src.pokertool.scrape": 0.0,
      "src.pokertool.scrape.RecognitionStats": 0.00078003120124805,
      "src.pokertool.scrape._FallbackScraperBridge": 0.00078003120124805,
      "src.pokertool.scrape.EnhancedScraperManager": 0.00078003120124805,
      "src.pokertool.scrape.run_screen_scraper": 0.00078003120124805,
      "src.pokertool.scrape.stop_screen_scraper": 0.00078003120124805,
      "src.pokertool.scrape.get_scraper_status": 0.00078003120124805,
      "src.pokertool.scrape.run_desktop_independent_scraper": 0.00078003120124805,
      "src.pokertool.scrape.stop_desktop_scraper": 0.00078003120124805,
      "src.pokertool.scrape.get_desktop_scraper_status": 0.00078003120124805,
      "src.pokertool.scrape.save_debug_screenshots_all_desktops": 0.00078003120124805,
      "src.pokertool.scrape.quick_poker_window_scan": 0.00078003120124805,
      "src.pokertool.thread_utils": 0.0,
      "src.pokertool.thread_utils.ThreadSafeDict": 0.00078003120124805,
      "src.pokertool.thread_utils.ThreadSafeCounter": 0.00078003120124805,
      "src.pokertool.thread_utils.TaskPriority": 0.00078003120124805,
      "src.pokertool.thread_utils.AsyncCallback": 0.00078003120124805,
      "src.pokertool.thread_utils.get_thread_pool": 0.0015600624024961,
      "src.pokertool.thread_utils.shutdown_thread_pool": 0.0015600624024961,
      "src.pokertool.thread_utils.run_in_thread": 0.00078003120124805,
      "src.pokertool.thread_utils.thread_safe": 0.00078003120124805,
      "src.pokertool.thread_utils.with_timeout": 0.00078003120124805,
      "src.pokertool.thread_utils.register_callback": 0.00078003120124805,
      "src.pokertool.thread_utils.trigger_callbacks": 0.00078003120124805,
      "src.pokertool.thread_utils.get_thread_local": 0.00078003120124805,
      "src.pokertool.thread_utils.set_thread_local": 0.00078003120124805,
      "src.pokertool.thread_utils.clear_thread_local": 0.0015600624024961,
      "src.pokertool.thread_utils.cleanup_threading": 0.00078003120124805,
      "src.pokertool.api_versioning": 0.0,
      "src.pokertool.api_versioning.VersionStatus": 0.00078003120124805,
      "src.pokertool.api_versioning.VersionInfo": 0.00078003120124805,
      "src.pokertool.api_versioning.APIVersionManager": 0.00078003120124805,
      "src.pokertool.api_versioning.APIVersionMiddleware": 0.00078003120124805,
      "src.pokertool.api_versioning.get_version_manager": 0.0015600624024961,
      "src.pokertool.api_versioning.require_version": 0.00078003120124805,
      "src.pokertool.api_versioning.setup_api_versioning": 0.00078003120124805,
      "src.pokertool.ocr_ensemble": 0.0,
      "src.pokertool.ocr_ensemble.OCREngine": 0.00078003120124805,
      "src.pokertool.ocr_ensemble.FieldType": 0.00078003120124805,
      "src.pokertool.ocr_ensemble.OCRResult": 0.00078003120124805,
      "src.pokertool.ocr_ensemble.EnsembleResult": 0.00078003120124805,
      "src.pokertool.ocr_ensemble.PokerLexicalValidator": 0.00078003120124805,
      "src.pokertool.ocr_ensemble.OCREnsemble": 0.00078003120124805,
      "src.pokertool.ocr_ensemble.get_ocr_ensemble": 0.00078003120124805,
      "src.pokertool.gamification": 0.0,
      "src.pokertool.gamification.Achievement": 0.00078003120124805,
      "src.pokertool.gamification.Badge": 0.00078003120124805,
      "src.pokertool.gamification.ProgressState": 0.00078003120124805,
      "src.pokertool.gamification.GamificationEngine": 0.00078003120124805,
      "src.pokertool.input_sanitizer": 0.0,
      "src.pokertool.input_sanitizer.SanitizationLevel": 0.00078003120124805,
      "src.pokertool.input_sanitizer.InputSanitizer": 0.00078003120124805,
      "src.pokertool.input_sanitizer.sanitize": 0.00078003120124805,
      "src.pokertool.input_sanitizer.sanitize_basic": 0.00078003120124805,
      "src.pokertool.input_sanitizer.sanitize_strict": 0.00078003120124805,
      "src.pokertool.hand_converter": 0.0,
      "src.pokertool.hand_converter.ConversionError": 0.00078003120124805,
      "src.pokertool.hand_converter.PokerSite": 0.00078003120124805,
      "src.pokertool.hand_converter.HandMetadata": 0.00078003120124805,
      "src.pokertool.hand_converter.HandConversionResult": 0.00078003120124805,
      "src.pokertool.hand_converter.HandFormatDetector": 0.00078003120124805,
      "src.pokertool.hand_converter.HandConverter": 0.00078003120124805,
      "src.pokertool.formatting_utils": 0.0,
      "src.pokertool.formatting_utils.format_percentage": 0.00234009360374415,
      "src.pokertool.formatting_utils.format_currency": 0.0015600624024961,
      "src.pokertool.formatting_utils.format_big_blinds": 0.00078003120124805,
      "src.pokertool.formatting_utils.format_odds": 0.00078003120124805,
      "src.pokertool.formatting_utils.format_confidence_band": 0.00078003120124805,
      "src.pokertool.formatting_utils.format_stack_size": 0.00078003120124805,
      "src.pokertool.formatting_utils.get_color_for_probability": 0.00078003120124805,
      "src.pokertool.formatting_utils.get_color_for_confidence": 0.00078003120124805,
      "src.pokertool.formatting_utils.format_action_display": 0.00078003120124805,
      "src.pokertool.roi_tracker": 0.0,
      "src.pokertool.roi_tracker.ROIType": 0.00078003120124805,
      "src.pokertool.roi_tracker.ROIDefinition": 0.00078003120124805,
      "src.pokertool.roi_tracker.ROIState": 0.00078003120124805,
      "src.pokertool.roi_tracker.ROIChangeDetection": 0.00078003120124805,
      "src.pokertool.roi_tracker.ROITracker": 0.00078003120124805,
      "src.pokertool.roi_tracker.get_roi_tracker": 0.00078003120124805,
      "src.pokertool.threading_utils": 0.0,
      "src.pokertool.threading_utils.ThreadSafeDict": 0.00078003120124805,
      "src.pokertool.threading_utils.ThreadSafeCounter": 0.00078003120124805,
      "src.pokertool.threading_utils.TaskPriority": 0.00078003120124805,
      "src.pokertool.threading_utils.AsyncCallback": 0.00078003120124805,
      "src.pokertool.threading_utils.get_thread_pool": 0.0015600624024961,
      "src.pokertool.threading_utils.shutdown_thread_pool": 0.0015600624024961,
      "src.pokertool.threading_utils.run_in_thread": 0.00078003120124805,
      "src.pokertool.threading_utils.thread_safe": 0.00078003120124805,
      "src.pokertool.threading_utils.with_timeout": 0.00078003120124805,
      "src.pokertool.threading_utils.register_callback": 0.00078003120124805,
      "src.pokertool.threading_utils.trigger_callbacks": 0.00078003120124805,
      "src.pokertool.threading_utils.get_thread_local": 0.00078003120124805,
      "src.pokertool.threading_utils.set_thread_local": 0.00078003120124805,
      "src.pokertool.threading_utils.clear_thread_local": 0.0015600624024961,
      "src.pokertool.threading_utils.cleanup_threading": 0.00078003120124805,
      "src.pokertool.core": 0.0,
      "src.pokertool.core.Rank": 0.00078003120124805,
      "src.pokertool.core.Suit": 0.00078003120124805,
      "src.pokertool.core.Position": 0.00078003120124805,
      "src.pokertool.core.Card": 0.00078003120124805,
      "src.pokertool.core.HandAnalysisResult": 0.00078003120124805,
      "src.pokertool.core.parse_card": 0.0015600624024961,
      "src.pokertool.core._normalise_cards": 0.0015600624024961,
      "src.pokertool.core.analyse_hand": 0.00078003120124805,
      "src.pokertool.enhanced_gui_components.settings_section": 0.0,
      "src.pokertool.enhanced_gui_components.settings_section.SettingsSection": 0.00078003120124805,
      "src.pokertool.enhanced_gui_components.style": 0.0,
      "src.pokertool.enhanced_gui_components.autopilot_panel": 0.0,
      "src.pokertool.enhanced_gui_components.autopilot_panel.AutopilotState": 0.00078003120124805,
      "src.pokertool.enhanced_gui_components.autopilot_panel.AutopilotControlPanel": 0.00078003120124805,
      "src.pokertool.enhanced_gui_components.manual_section": 0.0,
      "src.pokertool.enhanced_gui_components.manual_section.ManualPlaySection": 0.00078003120124805,
      "src.pokertool.enhanced_gui_components.coaching_section": 0.0,
      "src.pokertool.enhanced_gui_components.coaching_section.CoachingSection": 0.00078003120124805,
      "src.pokertool.utils.dependency_manager": 0.0,
      "src.pokertool.utils.dependency_manager.DependencyManager": 0.00078003120124805,
      "src.pokertool.utils.dependency_manager.ensure_dependencies": 0.00078003120124805,
      "src.pokertool.utils.single_instance": 0.0,
      "src.pokertool.utils.single_instance._sanitize_app_name": 0.0015600624024961,
      "src.pokertool.utils.single_instance._lock_path": 0.0015600624024961,
      "src.pokertool.utils.single_instance._pid_is_running": 0.0015600624024961,
      "src.pokertool.utils.single_instance.acquire_lock": 0.00078003120124805,
      "src.pokertool.utils.single_instance.release_lock": 0.00078003120124805,
      "src.pokertool.modules.autoconfirm": 0.0,
      "src.pokertool.modules.ocr_engine": 0.0,
      "src.pokertool.modules.ocr_engine.OCRResult": 0.00078003120124805,
      "src.pokertool.modules.ocr_engine.PokerOCREngine": 0.00078003120124805,
      "src.pokertool.modules.ocr_engine.get_ocr_engine": 0.00078003120124805,
      "src.pokertool.modules.chrome_devtools_scraper": 0.0,
      "src.pokertool.modules.chrome_devtools_scraper.ChromeConnection": 0.00078003120124805,
      "src.pokertool.modules.chrome_devtools_scraper.BetfairTableData": 0.00078003120124805,
      "src.pokertool.modules.chrome_devtools_scraper.ChromeDevToolsScraper": 0.00078003120124805,
      "src.pokertool.modules.chrome_devtools_scraper.create_auto_scraper": 0.00078003120124805,
      "src.pokertool.modules.chrome_devtools_scraper.launch_chrome_for_debugging": 0.00078003120124805,
      "src.pokertool.modules.note_taking_system": 0.0,
      "src.pokertool.modules.note_taking_system.NoteColor": 0.00078003120124805,
      "src.pokertool.modules.note_taking_system.NoteCategory": 0.00078003120124805,
      "src.pokertool.modules.note_taking_system.PlayerNote": 0.00078003120124805,
      "src.pokertool.modules.note_taking_system.NoteDatabase": 0.00078003120124805,
      "src.pokertool.modules.note_taking_system.NoteSearch": 0.00078003120124805,
      "src.pokertool.modules.note_taking_system.NoteTemplate": 0.00078003120124805,
      "src.pokertool.modules.note_taking_system.AutoNoteGenerator": 0.00078003120124805,
      "src.pokertool.modules.note_taking_system.NoteTakingSystem": 0.00078003120124805,
      "src.pokertool.modules.run_pokertool": 0.0,
      "src.pokertool.modules.run_pokertool.ensure_critical_dependencies": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator": 0.0,
      "src.pokertool.modules.accuracy_validator.ValidationStatus": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.CardRecognitionResult": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.ConsensusResult": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.ValidationResult": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.StackDelta": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.MultiFrameCardRecognizer": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.PotAmountValidator": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.StackDeltaTracker": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.BetAmountSpatialValidator": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.ActionButtonState": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.ButtonTransition": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.ActionButtonStateMachine": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.OCRReExtractor": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.CommunityCardSequenceValidator": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.TableBoundaryDetector": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.AccuracyValidationSystem": 0.00078003120124805,
      "src.pokertool.modules.accuracy_validator.get_accuracy_validation_system": 0.00078003120124805,
      "src.pokertool.modules.logger": 0.0,
      "src.pokertool.modules.logger.MasterLogger": 0.00078003120124805,
      "src.pokertool.modules.logger.log_exceptions": 0.00078003120124805,
      "src.pokertool.modules.logger.setup_global_exception_handler": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite": 0.0,
      "src.pokertool.modules.scraper_optimization_suite.ROI": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.ROITracker": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.FrameDiffEngine": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.OCRCache": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.ParallelExtractor": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.FastScreenCapture": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.TemporalConsensus": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.PotValidator": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.CardRecognitionModel": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.SpatialValidator": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.RecoveryManager": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.RedundantExtractor": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.HealthMetrics": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.HealthMonitor": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.ScraperOptimizationSuite": 0.00078003120124805,
      "src.pokertool.modules.scraper_optimization_suite.get_optimization_suite": 0.0015600624024961,
      "src.pokertool.modules.scraper_optimization_suite.demo": 0.00078003120124805,
      "src.pokertool.modules.scraper_learning_system": 0.0,
      "src.pokertool.modules.scraper_learning_system.ExtractionType": 0.00078003120124805,
      "src.pokertool.modules.scraper_learning_system.EnvironmentSignature": 0.00078003120124805,
      "src.pokertool.modules.scraper_learning_system.OCRStrategyResult": 0.00078003120124805,
      "src.pokertool.modules.scraper_learning_system.OCRStrategyStats": 0.00078003120124805,
      "src.pokertool.modules.scraper_learning_system.EnvironmentProfile": 0.00078003120124805,
      "src.pokertool.modules.scraper_learning_system.ExtractionFeedback": 0.00078003120124805,
      "src.pokertool.modules.scraper_learning_system.CDPGroundTruth": 0.00078003120124805,
      "src.pokertool.modules.scraper_learning_system.ScraperLearningSystem": 0.00078003120124805,
      "src.pokertool.modules.scraper_learning_system.create_learning_system": 0.00078003120124805,
      "src.pokertool.modules.betfair_accuracy_improvements": 0.0,
      "src.pokertool.modules.betfair_accuracy_improvements.SeatPosition": 0.00078003120124805,
      "src.pokertool.modules.betfair_accuracy_improvements.BetfairROI": 0.00078003120124805,
      "src.pokertool.modules.betfair_accuracy_improvements.SeatMapping": 0.00078003120124805,
      "src.pokertool.modules.betfair_accuracy_improvements.PlayerNameExtractor": 0.00078003120124805,
      "src.pokertool.modules.betfair_accuracy_improvements.CurrencyExtractor": 0.00078003120124805,
      "src.pokertool.modules.betfair_accuracy_improvements.StackPotDistinguisher": 0.00078003120124805,
      "src.pokertool.modules.betfair_accuracy_improvements.BetfairCardDetector": 0.00078003120124805,
      "src.pokertool.modules.betfair_accuracy_improvements.DealerButtonDetector": 0.00078003120124805,
      "src.pokertool.modules.betfair_accuracy_improvements.BetfairSeatMapper": 0.00078003120124805,
      "src.pokertool.modules.betfair_accuracy_improvements.BetfairAccuracyEngine": 0.00078003120124805,
      "src.pokertool.modules.betfair_accuracy_improvements.create_betfair_engine": 0.00078003120124805,
      "src.pokertool.modules.browser_tab_capture": 0.0,
      "src.pokertool.modules.browser_tab_capture.ChromeTabCaptureError": 0.00078003120124805,
      "src.pokertool.modules.browser_tab_capture.ChromeTabCaptureConfig": 0.00078003120124805,
      "src.pokertool.modules.browser_tab_capture.ChromeTabCapture": 0.00078003120124805,
      "src.pokertool.modules.browser_tab_capture.ChromeWindowCaptureConfig": 0.00078003120124805,
      "src.pokertool.modules.browser_tab_capture.ChromeWindowCapture": 0.00078003120124805,
      "src.pokertool.modules.power_features": 0.0,
      "src.pokertool.modules.power_features.TableInfo": 0.00078003120124805,
      "src.pokertool.modules.power_features.HandRecord": 0.00078003120124805,
      "src.pokertool.modules.power_features.OpponentNote": 0.00078003120124805,
      "src.pokertool.modules.power_features.SessionGoal": 0.00078003120124805,
      "src.pokertool.modules.power_features.MultiTableManager": 0.00078003120124805,
      "src.pokertool.modules.power_features.HandReplaySystem": 0.00078003120124805,
      "src.pokertool.modules.power_features.RangeVsRangeCalculator": 0.00078003120124805,
      "src.pokertool.modules.power_features.AutoNoteSystem": 0.00078003120124805,
      "src.pokertool.modules.power_features.SessionGoalTracker": 0.00078003120124805,
      "src.pokertool.modules.power_features.VoiceCommandHandler": 0.00078003120124805,
      "src.pokertool.modules.power_features.SessionReportExporter": 0.00078003120124805,
      "src.pokertool.modules.power_features.PowerFeaturesSystem": 0.00078003120124805,
      "src.pokertool.modules.power_features.get_power_features_system": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper": 0.0,
      "src.pokertool.modules.poker_screen_scraper.ScreenScraperBridge": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper.PokerScreenScraper": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper.create_scraper": 0.0015600624024961,
      "src.pokertool.modules.poker_screen_scraper.test_scraper_functionality": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper.get_scraper_info": 0.00078003120124805,
      "src.pokertool.modules.adaptive_ui_detector": 0.0,
      "src.pokertool.modules.adaptive_ui_detector.RegionOfInterest": 0.00078003120124805,
      "src.pokertool.modules.adaptive_ui_detector.BaselineState": 0.00078003120124805,
      "src.pokertool.modules.adaptive_ui_detector.ComparisonResult": 0.00078003120124805,
      "src.pokertool.modules.adaptive_ui_detector.AdaptiveUIDetector": 0.00078003120124805,
      "src.pokertool.modules.adaptive_ui_detector._parse_resolution": 0.00078003120124805,
      "src.pokertool.modules.adaptive_ui_detector._ensure_uint8": 0.00078003120124805,
      "src.pokertool.modules.adaptive_ui_detector._to_grayscale": 0.0031201248049922,
      "src.pokertool.modules.adaptive_ui_detector._average_hash": 0.00078003120124805,
      "src.pokertool.modules.adaptive_ui_detector._difference_hash": 0.00078003120124805,
      "src.pokertool.modules.adaptive_ui_detector._phash": 0.00078003120124805,
      "src.pokertool.modules.adaptive_ui_detector._hamming_distance": 0.00078003120124805,
      "src.pokertool.modules.adaptive_ui_detector.create_detector": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor": 0.0,
      "src.pokertool.modules.reliability_monitor.HealthStatus": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor.ComponentType": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor.HealthMetric": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor.ErrorReport": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor.AutoRecoveryManager": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor.GracefulDegradationManager": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor.HealthMonitor": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor.ErrorReporter": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor.StatePersistenceManager": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor.ConnectionQualityMonitor": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor.MemoryLeakDetector": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor.MultiSiteFallbackChain": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor.ReliabilitySystem": 0.00078003120124805,
      "src.pokertool.modules.reliability_monitor.get_reliability_system": 0.00078003120124805,
      "src.pokertool.modules.hand_replay_system": 0.0,
      "src.pokertool.modules.hand_replay_system.ActionType": 0.00078003120124805,
      "src.pokertool.modules.hand_replay_system.Street": 0.00078003120124805,
      "src.pokertool.modules.hand_replay_system.PlayerAction": 0.00078003120124805,
      "src.pokertool.modules.hand_replay_system.ReplayFrame": 0.00078003120124805,
      "src.pokertool.modules.hand_replay_system.Annotation": 0.00078003120124805,
      "src.pokertool.modules.hand_replay_system.AnnotationManager": 0.00078003120124805,
      "src.pokertool.modules.hand_replay_system.AnalysisData": 0.00078003120124805,
      "src.pokertool.modules.hand_replay_system.AnalysisOverlay": 0.00078003120124805,
      "src.pokertool.modules.hand_replay_system.ReplayAnimation": 0.00078003120124805,
      "src.pokertool.modules.hand_replay_system.ShareManager": 0.00078003120124805,
      "src.pokertool.modules.hand_replay_system.HandReplaySystem": 0.00078003120124805,
      "src.pokertool.modules.poker_gui_enhanced": 0.0,
      "src.pokertool.modules.poker_gui_enhanced.ValidationState": 0.00078003120124805,
      "src.pokertool.modules.poker_gui_enhanced.UITheme": 0.00078003120124805,
      "src.pokertool.modules.poker_gui_enhanced.UIState": 0.00078003120124805,
      "src.pokertool.modules.poker_gui_enhanced.EnhancedCardEntry": 0.00078003120124805,
      "src.pokertool.modules.poker_gui_enhanced.StatusBar": 0.00078003120124805,
      "src.pokertool.modules.poker_gui_enhanced.VisualCard": 0.00078003120124805,
      "src.pokertool.modules.poker_gui_enhanced.CardSelectionPanel": 0.00078003120124805,
      "src.pokertool.modules.poker_gui_enhanced.TableVisualization": 0.00078003120124805,
      "src.pokertool.modules.poker_gui_enhanced.EnhancedPokerAssistant": 0.00078003120124805,
      "src.pokertool.modules.poker_gui_enhanced.initialise_db_if_needed": 0.00078003120124805,
      "src.pokertool.modules.poker_gui_enhanced.open_db": 0.00078003120124805,
      "src.pokertool.modules.poker_gui_enhanced._ensure_parent": 0.00078003120124805,
      "src.pokertool.modules.multi_table_segmenter": 0.0,
      "src.pokertool.modules.multi_table_segmenter.DetectedObject": 0.00078003120124805,
      "src.pokertool.modules.multi_table_segmenter.TableLayout": 0.00078003120124805,
      "src.pokertool.modules.multi_table_segmenter.SegmentationResult": 0.00078003120124805,
      "src.pokertool.modules.multi_table_segmenter.MultiTableSegmenter": 0.00078003120124805,
      "src.pokertool.modules.multi_table_segmenter.create_segmenter": 0.00078003120124805,
      "src.pokertool.modules.range_construction_tool": 0.0,
      "src.pokertool.modules.range_construction_tool.RangeFormat": 0.00078003120124805,
      "src.pokertool.modules.range_construction_tool.HandType": 0.00078003120124805,
      "src.pokertool.modules.range_construction_tool.HandRange": 0.00078003120124805,
      "src.pokertool.modules.range_construction_tool.RangeGrid": 0.00078003120124805,
      "src.pokertool.modules.range_construction_tool.RangeComparator": 0.00078003120124805,
      "src.pokertool.modules.range_construction_tool.RangeTemplate": 0.00078003120124805,
      "src.pokertool.modules.range_construction_tool.RangeImportExport": 0.00078003120124805,
      "src.pokertool.modules.range_construction_tool.RangeConstructionTool": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper_betfair": 0.0,
      "src.pokertool.modules.poker_screen_scraper_betfair.PokerSite": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper_betfair.TableRegion": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper_betfair.SeatInfo": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper_betfair.TableState": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper_betfair.DetectionResult": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper_betfair.Card": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper_betfair.BetfairPokerDetector": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper_betfair.UniversalPokerDetector": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper_betfair.PokerScreenScraper": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper_betfair.create_scraper": 0.0015600624024961,
      "src.pokertool.modules.poker_screen_scraper_betfair.test_scraper_betfair": 0.00078003120124805
    },
    "out_degree_centrality": {
      "src.pokertool.roi_tracking_system": 0.0046801872074883,
      "src.pokertool.roi_tracking_system.ROI": 0.0,
      "src.pokertool.roi_tracking_system.ROIState": 0.0,
      "src.pokertool.roi_tracking_system.ROITrackingMetrics": 0.0,
      "src.pokertool.roi_tracking_system.ROITrackingSystem": 0.0,
      "src.pokertool.roi_tracking_system.get_roi_tracker": 0.0,
      "src.pokertool.roi_tracking_system.reset_roi_tracker": 0.0,
      "src.pokertool.performance_telemetry": 0.0062402496099844,
      "src.pokertool.performance_telemetry.TelemetryEntry": 0.0,
      "src.pokertool.performance_telemetry.PerformanceTelemetry": 0.0,
      "src.pokertool.performance_telemetry.timed": 0.00078003120124805,
      "src.pokertool.performance_telemetry.telemetry_section": 0.00078003120124805,
      "src.pokertool.performance_telemetry.telemetry_instant": 0.00078003120124805,
      "src.pokertool.performance_telemetry.init_telemetry": 0.0,
      "src.pokertool.performance_telemetry.get_telemetry": 0.0,
      "src.pokertool.performance_telemetry.shutdown_telemetry": 0.0,
      "src.pokertool.card_recognizer": 0.0031201248049922,
      "src.pokertool.card_recognizer.Card": 0.0,
      "src.pokertool.card_recognizer.CardTemplate": 0.0,
      "src.pokertool.card_recognizer.RecognitionResult": 0.0,
      "src.pokertool.card_recognizer.CardRecognitionEngine": 0.0,
      "src.pokertool.bayesian_profiler": 0.0062402496099844,
      "src.pokertool.bayesian_profiler.PlayerTendency": 0.0,
      "src.pokertool.bayesian_profiler.PlayerStyle": 0.0,
      "src.pokertool.bayesian_profiler.BetaDistribution": 0.0,
      "src.pokertool.bayesian_profiler.GaussianDistribution": 0.0,
      "src.pokertool.bayesian_profiler.PlayerProfile": 0.0,
      "src.pokertool.bayesian_profiler.BeliefUpdater": 0.0,
      "src.pokertool.bayesian_profiler.ActionPredictor": 0.0,
      "src.pokertool.bayesian_profiler.BayesianOpponentProfiler": 0.0,
      "src.pokertool.system_health_checker": 0.02106084243369735,
      "src.pokertool.system_health_checker.HealthStatus": 0.0,
      "src.pokertool.system_health_checker.HealthCheck": 0.0,
      "src.pokertool.system_health_checker.SystemHealthChecker": 0.0,
      "src.pokertool.system_health_checker._join_url": 0.0,
      "src.pokertool.system_health_checker._http_get_status": 0.0,
      "src.pokertool.system_health_checker.get_health_checker": 0.0,
      "src.pokertool.system_health_checker.check_api_server_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_database_health": 0.0,
      "src.pokertool.system_health_checker.check_ocr_engine_health": 0.0,
      "src.pokertool.system_health_checker.check_screen_capture_health": 0.0,
      "src.pokertool.system_health_checker.check_model_calibration_health": 0.0,
      "src.pokertool.system_health_checker.check_frontend_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_poker_table_detection_health": 0.0,
      "src.pokertool.system_health_checker.check_gto_solver_health": 0.0,
      "src.pokertool.system_health_checker.check_opponent_modeling_health": 0.0,
      "src.pokertool.system_health_checker.check_sequential_opponent_fusion_health": 0.0,
      "src.pokertool.system_health_checker.check_active_learning_health": 0.0,
      "src.pokertool.system_health_checker.check_neural_evaluator_health": 0.0,
      "src.pokertool.system_health_checker.check_hand_range_analyzer_health": 0.0,
      "src.pokertool.system_health_checker.check_scraping_accuracy_health": 0.0,
      "src.pokertool.system_health_checker.check_roi_tracking_health": 0.0,
      "src.pokertool.system_health_checker.check_tournament_support_health": 0.0,
      "src.pokertool.system_health_checker.check_multi_table_support_health": 0.0,
      "src.pokertool.system_health_checker.check_hand_history_database_health": 0.0,
      "src.pokertool.system_health_checker.check_websocket_server_health": 0.00078003120124805,
      "src.pokertool.system_health_checker.check_region_extraction_health": 0.0,
      "src.pokertool.system_health_checker.register_all_health_checks": 0.0,
      "src.pokertool.ml_opponent_modeling": 0.01326053042121685,
      "src.pokertool.ml_opponent_modeling.ModelType": 0.0,
      "src.pokertool.ml_opponent_modeling.PlayerType": 0.0,
      "src.pokertool.ml_opponent_modeling.PlayerStats": 0.0,
      "src.pokertool.ml_opponent_modeling.HandHistory": 0.0,
      "src.pokertool.ml_opponent_modeling.ModelPrediction": 0.0,
      "src.pokertool.ml_opponent_modeling.FeatureEngineering": 0.0,
      "src.pokertool.ml_opponent_modeling.OpponentModel": 0.0,
      "src.pokertool.ml_opponent_modeling.RandomForestOpponentModel": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling.NeuralNetworkOpponentModel": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling.OpponentModelingSystem": 0.0,
      "src.pokertool.ml_opponent_modeling._disable_coreml_provider": 0.0,
      "src.pokertool.ml_opponent_modeling.get_opponent_modeling_system": 0.0,
      "src.pokertool.ml_opponent_modeling.observe_opponent_hand": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling.predict_opponent_action": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling.get_opponent_profile": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling.analyze_table_dynamics": 0.00078003120124805,
      "src.pokertool.ml_opponent_modeling._generate_table_recommendations": 0.0,
      "src.pokertool.global_error_handler": 0.0039001560062402497,
      "src.pokertool.global_error_handler.ErrorCategory": 0.0,
      "src.pokertool.global_error_handler.ErrorSeverity": 0.0,
      "src.pokertool.global_error_handler.ErrorResponse": 0.0,
      "src.pokertool.global_error_handler.GlobalErrorHandler": 0.0,
      "src.pokertool.global_error_handler.handle_errors": 0.0,
      "src.pokertool.scraping_reliability_system": 0.014820592823712949,
      "src.pokertool.scraping_reliability_system.RecoveryAction": 0.0,
      "src.pokertool.scraping_reliability_system.RecoveryStrategy": 0.0,
      "src.pokertool.scraping_reliability_system.AutomaticRecoveryManager": 0.0,
      "src.pokertool.scraping_reliability_system.ExtractionMethod": 0.0,
      "src.pokertool.scraping_reliability_system.RedundantExtractionPaths": 0.0,
      "src.pokertool.scraping_reliability_system.HealthMetrics": 0.0,
      "src.pokertool.scraping_reliability_system.HealthMonitor": 0.0,
      "src.pokertool.scraping_reliability_system.FieldConfidence": 0.0,
      "src.pokertool.scraping_reliability_system.PartialState": 0.0,
      "src.pokertool.scraping_reliability_system.GracefulDegradation": 0.0,
      "src.pokertool.scraping_reliability_system.StatePersistence": 0.0,
      "src.pokertool.scraping_reliability_system.ErrorPattern": 0.0,
      "src.pokertool.scraping_reliability_system.ErrorPatternDetector": 0.0,
      "src.pokertool.scraping_reliability_system.WatchdogTimer": 0.0,
      "src.pokertool.scraping_reliability_system.ResourceLeakDetector": 0.0,
      "src.pokertool.scraping_reliability_system.QualityMetrics": 0.0,
      "src.pokertool.scraping_reliability_system.AutoRecalibrator": 0.0,
      "src.pokertool.scraping_reliability_system.ScrapingReliabilitySystem": 0.0,
      "src.pokertool.scraping_reliability_system.get_reliability_system": 0.0,
      "src.pokertool.test_utils": 0.0031201248049922,
      "src.pokertool.test_utils.is_test_mode": 0.0,
      "src.pokertool.test_utils.safe_messagebox_showerror": 0.0,
      "src.pokertool.test_utils.safe_messagebox_showwarning": 0.0,
      "src.pokertool.test_utils.safe_messagebox_showinfo": 0.0,
      "src.pokertool.desktop_independent_scraper": 0.00546021840873635,
      "src.pokertool.desktop_independent_scraper.WindowInfo": 0.0,
      "src.pokertool.desktop_independent_scraper.ScreenRegion": 0.0,
      "src.pokertool.desktop_independent_scraper.PokerDetectionMode": 0.0,
      "src.pokertool.desktop_independent_scraper.DesktopIndependentScraper": 0.0,
      "src.pokertool.desktop_independent_scraper.create_desktop_scraper": 0.0,
      "src.pokertool.desktop_independent_scraper.quick_poker_scan": 0.00078003120124805,
      "src.pokertool.desktop_independent_scraper.test_desktop_independence": 0.00078003120124805,
      "src.pokertool.cfr_plus": 0.0046801872074883,
      "src.pokertool.cfr_plus.CFRPlusSolution": 0.0,
      "src.pokertool.cfr_plus.CFRPlusSolver": 0.0,
      "src.pokertool.cfr_plus._normalise": 0.0,
      "src.pokertool.cfr_plus._dot": 0.0,
      "src.pokertool.cfr_plus._matrix_vector_product": 0.0,
      "src.pokertool.cfr_plus._transposed_matrix_vector_product": 0.0,
      "src.pokertool.analytics_dashboard": 0.0031201248049922,
      "src.pokertool.analytics_dashboard.UsageEvent": 0.0,
      "src.pokertool.analytics_dashboard.PrivacySettings": 0.0,
      "src.pokertool.analytics_dashboard.DashboardMetrics": 0.0,
      "src.pokertool.analytics_dashboard.AnalyticsDashboard": 0.0,
      "src.pokertool.thread_manager": 0.0031201248049922,
      "src.pokertool.thread_manager.ThreadManager": 0.0,
      "src.pokertool.thread_manager.get_thread_manager": 0.0,
      "src.pokertool.thread_manager.submit_task": 0.0015600624024961,
      "src.pokertool.thread_manager.start_thread": 0.0015600624024961,
      "src.pokertool.sequential_opponent_fusion": 0.0062402496099844,
      "src.pokertool.sequential_opponent_fusion.ActionType": 0.0,
      "src.pokertool.sequential_opponent_fusion.Street": 0.0,
      "src.pokertool.sequential_opponent_fusion.PlayerAction": 0.0,
      "src.pokertool.sequential_opponent_fusion.HandSequence": 0.0,
      "src.pokertool.sequential_opponent_fusion.SequenceFeatures": 0.0,
      "src.pokertool.sequential_opponent_fusion.SimpleTransformer": 0.0,
      "src.pokertool.sequential_opponent_fusion.SequentialOpponentFusion": 0.0,
      "src.pokertool.sequential_opponent_fusion.get_fusion_system": 0.0,
      "src.pokertool.tournament_tracker": 0.0046801872074883,
      "src.pokertool.tournament_tracker.TournamentStructure": 0.0,
      "src.pokertool.tournament_tracker.TournamentEvent": 0.0,
      "src.pokertool.tournament_tracker.TournamentResult": 0.0,
      "src.pokertool.tournament_tracker.SatelliteLink": 0.0,
      "src.pokertool.tournament_tracker.TournamentAlert": 0.0,
      "src.pokertool.tournament_tracker.TournamentTracker": 0.0,
      "src.pokertool.version": 0.0062402496099844,
      "src.pokertool.version._read_version": 0.0,
      "src.pokertool.version.get_version": 0.0,
      "src.pokertool.version.get_version_info": 0.0,
      "src.pokertool.version.get_release_history": 0.0,
      "src.pokertool.version.get_version_tuple": 0.0,
      "src.pokertool.version.is_compatible": 0.0,
      "src.pokertool.version.format_version": 0.0,
      "src.pokertool.version.print_version_info": 0.00234009360374415,
      "src.pokertool.scraping_master_system": 0.0039001560062402497,
      "src.pokertool.scraping_master_system.MasterSystemMetrics": 0.0,
      "src.pokertool.scraping_master_system.ScrapingMasterSystem": 0.0,
      "src.pokertool.scraping_master_system.get_master_system": 0.0,
      "src.pokertool.scraping_master_system.process_poker_frame": 0.00078003120124805,
      "src.pokertool.scraping_master_system.get_system_status": 0.00078003120124805,
      "src.pokertool.scraping_accuracy_system": 0.0109204368174727,
      "src.pokertool.scraping_accuracy_system.TemporalConsensus": 0.0,
      "src.pokertool.scraping_accuracy_system.PotValidator": 0.0,
      "src.pokertool.scraping_accuracy_system.SpatialValidator": 0.0,
      "src.pokertool.scraping_accuracy_system.PlayerAction": 0.0,
      "src.pokertool.scraping_accuracy_system.PlayerStateMachine": 0.0,
      "src.pokertool.scraping_accuracy_system.CardSuitValidator": 0.0,
      "src.pokertool.scraping_accuracy_system.BlindsChecker": 0.0,
      "src.pokertool.scraping_accuracy_system.StackTracker": 0.0,
      "src.pokertool.scraping_accuracy_system.OCRPostProcessor": 0.0,
      "src.pokertool.scraping_accuracy_system.ExtractionStrategy": 0.0,
      "src.pokertool.scraping_accuracy_system.MultiStrategyFusion": 0.0,
      "src.pokertool.scraping_accuracy_system.AccuracyMetrics": 0.0,
      "src.pokertool.scraping_accuracy_system.ScrapingAccuracySystem": 0.0,
      "src.pokertool.scraping_accuracy_system.get_accuracy_system": 0.0,
      "src.pokertool.timing_analyzer": 0.0078003120124804995,
      "src.pokertool.timing_analyzer.TimingData": 0.0,
      "src.pokertool.timing_analyzer.TimingPattern": 0.0,
      "src.pokertool.timing_analyzer.MicrosecondPrecisionTracker": 0.0,
      "src.pokertool.timing_analyzer.ActionSequenceTimer": 0.0,
      "src.pokertool.timing_analyzer.TimingDeviationDetector": 0.0,
      "src.pokertool.timing_analyzer.PatternClusterer": 0.0,
      "src.pokertool.timing_analyzer.ConfidenceIntervalCalculator": 0.0,
      "src.pokertool.timing_analyzer.TimingTellAnalyzer": 0.0,
      "src.pokertool.timing_analyzer.analyze_timing_patterns": 0.0,
      "src.pokertool.timing_analyzer.detect_timing_tell": 0.0,
      "src.pokertool.database_optimization": 0.00546021840873635,
      "src.pokertool.database_optimization.CachedResult": 0.0,
      "src.pokertool.database_optimization.QueryRecord": 0.0,
      "src.pokertool.database_optimization.QueryCache": 0.0,
      "src.pokertool.database_optimization.QueryMonitor": 0.0,
      "src.pokertool.database_optimization.IndexAdvisor": 0.0,
      "src.pokertool.database_optimization.ArchiveManager": 0.0,
      "src.pokertool.database_optimization.DatabaseOptimizationManager": 0.0,
      "src.pokertool.bankroll_management": 0.0093603744149766,
      "src.pokertool.bankroll_management.GameType": 0.0,
      "src.pokertool.bankroll_management.StakeLevel": 0.0,
      "src.pokertool.bankroll_management.BankrollTransaction": 0.0,
      "src.pokertool.bankroll_management.BankrollSnapshot": 0.0,
      "src.pokertool.bankroll_management.KellyCriterion": 0.0,
      "src.pokertool.bankroll_management.VarianceCalculator": 0.0,
      "src.pokertool.bankroll_management.BankrollAlert": 0.0,
      "src.pokertool.bankroll_management.BankrollManager": 0.0,
      "src.pokertool.bankroll_management.get_bankroll_manager": 0.0,
      "src.pokertool.bankroll_management.add_session_result": 0.00078003120124805,
      "src.pokertool.bankroll_management.get_bankroll_summary": 0.00078003120124805,
      "src.pokertool.bankroll_management.get_stake_recommendation": 0.00078003120124805,
      "src.pokertool.dependency_manager": 0.0046801872074883,
      "src.pokertool.dependency_manager.DependencyInfo": 0.0,
      "src.pokertool.dependency_manager.SystemReport": 0.0,
      "src.pokertool.dependency_manager.DependencyManager": 0.0,
      "src.pokertool.dependency_manager.get_dependency_manager": 0.0,
      "src.pokertool.dependency_manager.validate_system": 0.00078003120124805,
      "src.pokertool.dependency_manager.is_system_ready": 0.00078003120124805,
      "src.pokertool.hud_profiles": 0.00234009360374415,
      "src.pokertool.hud_profiles.list_hud_profiles": 0.0,
      "src.pokertool.hud_profiles.load_hud_profile": 0.0,
      "src.pokertool.hud_profiles.save_hud_profile": 0.0,
      "src.pokertool.compliance": 0.01014040561622465,
      "src.pokertool.compliance.ConsentType": 0.0,
      "src.pokertool.compliance.DataCategory": 0.0,
      "src.pokertool.compliance.UserConsent": 0.0,
      "src.pokertool.compliance.DataRetentionPolicy": 0.0,
      "src.pokertool.compliance.ComplianceViolation": 0.0,
      "src.pokertool.compliance.PokerSiteCompliance": 0.0,
      "src.pokertool.compliance.GDPRCompliance": 0.0,
      "src.pokertool.compliance.ComplianceManager": 0.0,
      "src.pokertool.compliance.get_compliance_manager": 0.0,
      "src.pokertool.compliance.check_feature_compliance": 0.00078003120124805,
      "src.pokertool.compliance.record_user_consent": 0.00078003120124805,
      "src.pokertool.compliance.get_user_privacy_report": 0.00078003120124805,
      "src.pokertool.compliance.is_site_compliant": 0.00078003120124805,
      "src.pokertool.icm_calculator": 0.0039001560062402497,
      "src.pokertool.icm_calculator.TournamentState": 0.0,
      "src.pokertool.icm_calculator.ICMResult": 0.0,
      "src.pokertool.icm_calculator.ICMDecision": 0.0,
      "src.pokertool.icm_calculator.MalmuthHarvilleCalculator": 0.0,
      "src.pokertool.icm_calculator.ICMCalculator": 0.0,
      "src.pokertool.coaching_system": 0.0046801872074883,
      "src.pokertool.coaching_system.DetectedMistake": 0.0,
      "src.pokertool.coaching_system.RealTimeAdvice": 0.0,
      "src.pokertool.coaching_system.TrainingScenario": 0.0,
      "src.pokertool.coaching_system.CoachingProgress": 0.0,
      "src.pokertool.coaching_system.CoachingFeedback": 0.0,
      "src.pokertool.coaching_system.CoachingSystem": 0.0,
      "src.pokertool.scraping_speed_optimizer": 0.0078003120124804995,
      "src.pokertool.scraping_speed_optimizer.ParallelExtractor": 0.0,
      "src.pokertool.scraping_speed_optimizer.AdaptiveSamplingRate": 0.0,
      "src.pokertool.scraping_speed_optimizer.IncrementalUpdater": 0.0,
      "src.pokertool.scraping_speed_optimizer.OCREnginePriority": 0.0,
      "src.pokertool.scraping_speed_optimizer.CascadingOCR": 0.0,
      "src.pokertool.scraping_speed_optimizer.ExtractionPriority": 0.0,
      "src.pokertool.scraping_speed_optimizer.LazyExtractor": 0.0,
      "src.pokertool.scraping_speed_optimizer.SpeedOptimizationMetrics": 0.0,
      "src.pokertool.scraping_speed_optimizer.ScrapingSpeedOptimizer": 0.0,
      "src.pokertool.scraping_speed_optimizer.get_speed_optimizer": 0.0,
      "src.pokertool.retry_util": 0.0062402496099844,
      "src.pokertool.retry_util.RetryError": 0.0,
      "src.pokertool.retry_util.RetryStrategy": 0.0,
      "src.pokertool.retry_util.exponential_backoff": 0.0,
      "src.pokertool.retry_util.retry_with_backoff": 0.00078003120124805,
      "src.pokertool.retry_util.retry_api_call": 0.0,
      "src.pokertool.retry_util.retry_database_operation": 0.0,
      "src.pokertool.retry_util.retry_network_request": 0.0,
      "src.pokertool.retry_util.retry_ml_prediction": 0.0,
      "src.pokertool.neural_evaluator": 0.0062402496099844,
      "src.pokertool.neural_evaluator.HandState": 0.0,
      "src.pokertool.neural_evaluator.TrainingSample": 0.0,
      "src.pokertool.neural_evaluator.HandEvaluation": 0.0,
      "src.pokertool.neural_evaluator.NeuralHandStrengthEvaluator": 0.0,
      "src.pokertool.neural_evaluator.CNNModelConfig": 0.0,
      "src.pokertool.neural_evaluator.TrainingProgress": 0.0,
      "src.pokertool.neural_evaluator.CNNHandStrengthModel": 0.0,
      "src.pokertool.neural_evaluator.RealTimeInferenceEngine": 0.0,
      "src.pokertool.status_window": 0.0015600624024961,
      "src.pokertool.status_window.StatusWindow": 0.0,
      "src.pokertool.status_window.main": 0.0,
      "src.pokertool.hud_designer": 0.00078003120124805,
      "src.pokertool.hud_designer.HUDDesigner": 0.0,
      "src.pokertool.quantum_optimizer": 0.0070202808112324495,
      "src.pokertool.quantum_optimizer.OptimizationType": 0.0,
      "src.pokertool.quantum_optimizer.QuantumState": 0.0,
      "src.pokertool.quantum_optimizer.OptimizationResult": 0.0,
      "src.pokertool.quantum_optimizer.QuantumAnnealingSimulator": 0.0,
      "src.pokertool.quantum_optimizer.SuperpositionStateExplorer": 0.0,
      "src.pokertool.quantum_optimizer.EntanglementCorrelationAnalyzer": 0.0,
      "src.pokertool.quantum_optimizer.QuantumInspiredOptimizer": 0.0,
      "src.pokertool.quantum_optimizer.quick_optimize_range": 0.0,
      "src.pokertool.quantum_optimizer.find_optimal_action": 0.0,
      "src.pokertool.scrape_fix": 0.0031201248049922,
      "src.pokertool.scrape_fix.diagnose_chrome_capture": 0.0,
      "src.pokertool.scrape_fix.fix_scraper_initialization": 0.0,
      "src.pokertool.scrape_fix.test_screen_capture": 0.0,
      "src.pokertool.scrape_fix.main": 0.00234009360374415,
      "src.pokertool.watchdog_timer": 0.00546021840873635,
      "src.pokertool.watchdog_timer.WatchdogAction": 0.0,
      "src.pokertool.watchdog_timer.OperationInfo": 0.0,
      "src.pokertool.watchdog_timer.WatchdogTimeoutError": 0.0,
      "src.pokertool.watchdog_timer.WatchdogTimer": 0.0,
      "src.pokertool.watchdog_timer.get_watchdog": 0.0,
      "src.pokertool.watchdog_timer.watch": 0.0015600624024961,
      "src.pokertool.watchdog_timer.monitor": 0.0015600624024961,
      "src.pokertool.hand_recorder": 0.0039001560062402497,
      "src.pokertool.hand_recorder.HandRecorderState": 0.0,
      "src.pokertool.hand_recorder.HandSnapshot": 0.0,
      "src.pokertool.hand_recorder.HandRecorder": 0.0,
      "src.pokertool.hand_recorder.get_hand_recorder": 0.0,
      "src.pokertool.hand_recorder.enable_hand_recording": 0.00078003120124805,
      "src.pokertool.active_learning": 0.01014040561622465,
      "src.pokertool.active_learning.ActionType": 0.0,
      "src.pokertool.active_learning.StreetType": 0.0,
      "src.pokertool.active_learning.FeedbackStatus": 0.0,
      "src.pokertool.active_learning.UncertaintyLevel": 0.0,
      "src.pokertool.active_learning.GameState": 0.0,
      "src.pokertool.active_learning.Prediction": 0.0,
      "src.pokertool.active_learning.ExpertFeedback": 0.0,
      "src.pokertool.active_learning.FeedbackEvent": 0.0,
      "src.pokertool.active_learning.UncertaintyTriage": 0.0,
      "src.pokertool.active_learning.FeedbackStorage": 0.0,
      "src.pokertool.active_learning.RetrainingScheduler": 0.0,
      "src.pokertool.active_learning.ActiveLearningFeedbackLoop": 0.0,
      "src.pokertool.active_learning.get_active_learning": 0.0,
      "src.pokertool.community_features": 0.0046801872074883,
      "src.pokertool.community_features.ForumPost": 0.0,
      "src.pokertool.community_features.Challenge": 0.0,
      "src.pokertool.community_features.MentorshipPair": 0.0,
      "src.pokertool.community_features.CommunityTournament": 0.0,
      "src.pokertool.community_features.KnowledgeArticle": 0.0,
      "src.pokertool.community_features.CommunityPlatform": 0.0,
      "src.pokertool.scrape_qa_harness": 0.0078003120124804995,
      "src.pokertool.scrape_qa_harness.FieldType": 0.0,
      "src.pokertool.scrape_qa_harness.ThemeType": 0.0,
      "src.pokertool.scrape_qa_harness.GroundTruth": 0.0,
      "src.pokertool.scrape_qa_harness.QaTestCase": 0.0,
      "src.pokertool.scrape_qa_harness.FieldDiff": 0.0,
      "src.pokertool.scrape_qa_harness.QaTestResult": 0.0,
      "src.pokertool.scrape_qa_harness.SuiteReport": 0.0,
      "src.pokertool.scrape_qa_harness.ScrapeQAHarness": 0.0,
      "src.pokertool.scrape_qa_harness.create_test_case_from_screenshot": 0.0,
      "src.pokertool.scrape_qa_harness.save_test_case": 0.0,
      "src.pokertool.database": 0.0039001560062402497,
      "src.pokertool.database.DatabaseType": 0.0,
      "src.pokertool.database.DatabaseConfig": 0.0,
      "src.pokertool.database.ProductionDatabase": 0.0,
      "src.pokertool.database.get_production_db": 0.0,
      "src.pokertool.database.migrate_to_production": 0.0,
      "src.pokertool.gto_solver": 0.015600624024960999,
      "src.pokertool.gto_solver.Action": 0.0,
      "src.pokertool.gto_solver.Street": 0.0,
      "src.pokertool.gto_solver.Range": 0.0,
      "src.pokertool.gto_solver.GameState": 0.0,
      "src.pokertool.gto_solver.Strategy": 0.0,
      "src.pokertool.gto_solver.GTOSolution": 0.0,
      "src.pokertool.gto_solver.LRUCache": 0.0,
      "src.pokertool.gto_solver.EquityCalculator": 0.0,
      "src.pokertool.gto_solver.GTOSolver": 0.0,
      "src.pokertool.gto_solver.GTOTrainer": 0.0,
      "src.pokertool.gto_solver.DeviationExplorer": 0.0,
      "src.pokertool.gto_solver.get_gto_solver": 0.0,
      "src.pokertool.gto_solver.solve_spot": 0.00078003120124805,
      "src.pokertool.gto_solver.create_standard_ranges": 0.0,
      "src.pokertool.gto_solver.parse_range_string": 0.0,
      "src.pokertool.gto_solver.calculate_range_equity": 0.0,
      "src.pokertool.gto_solver.analyze_gto_spot": 0.00234009360374415,
      "src.pokertool.gto_solver._generate_recommendations": 0.0,
      "src.pokertool.gto_solver.create_training_session": 0.0,
      "src.pokertool.gto_solver.export_solution": 0.0,
      "src.pokertool.smart_poker_detector": 0.00234009360374415,
      "src.pokertool.smart_poker_detector.WindowPriority": 0.0,
      "src.pokertool.smart_poker_detector.SmartPokerDetector": 0.0,
      "src.pokertool.smart_poker_detector.create_smart_detector": 0.0,
      "src.pokertool.automation": 0.0031201248049922,
      "src.pokertool.automation._hash_file": 0.0,
      "src.pokertool.automation._get_git_head": 0.0,
      "src.pokertool.automation._missing_modules": 0.0,
      "src.pokertool.automation.ensure_ml_tests_run": 0.00234009360374415,
      "src.pokertool.game_selection": 0.01014040561622465,
      "src.pokertool.game_selection.GameType": 0.0,
      "src.pokertool.game_selection.TablePosition": 0.0,
      "src.pokertool.game_selection.PlayerProfile": 0.0,
      "src.pokertool.game_selection.TableInfo": 0.0,
      "src.pokertool.game_selection.GameRating": 0.0,
      "src.pokertool.game_selection.TableScanner": 0.0,
      "src.pokertool.game_selection.ProfitabilityCalculator": 0.0,
      "src.pokertool.game_selection.PlayerPoolAnalyzer": 0.0,
      "src.pokertool.game_selection.SeatSelector": 0.0,
      "src.pokertool.game_selection.GameSelectionEngine": 0.0,
      "src.pokertool.game_selection.analyze_single_table": 0.0,
      "src.pokertool.game_selection.find_best_tables": 0.0,
      "src.pokertool.game_selection.create_sample_player": 0.0,
      "src.pokertool.ensemble_decision": 0.0062402496099844,
      "src.pokertool.ensemble_decision.DecisionType": 0.0,
      "src.pokertool.ensemble_decision.EngineDecision": 0.0,
      "src.pokertool.ensemble_decision.EnsembleDecision": 0.0,
      "src.pokertool.ensemble_decision.WeightOptimizer": 0.0,
      "src.pokertool.ensemble_decision.DisagreementResolver": 0.0,
      "src.pokertool.ensemble_decision.PerformanceTracker": 0.0,
      "src.pokertool.ensemble_decision.EnsembleDecisionSystem": 0.0,
      "src.pokertool.ensemble_decision.create_ensemble": 0.0,
      "src.pokertool.input_validation": 0.0062402496099844,
      "src.pokertool.input_validation.ValidationResult": 0.0,
      "src.pokertool.input_validation.CardValidator": 0.0,
      "src.pokertool.input_validation.BetValidator": 0.0,
      "src.pokertool.input_validation.PlayerValidator": 0.0,
      "src.pokertool.input_validation.TableValidator": 0.0,
      "src.pokertool.input_validation.validate_card": 0.0,
      "src.pokertool.input_validation.validate_bet": 0.0,
      "src.pokertool.input_validation.sanitize_table_data": 0.0,
      "src.pokertool.enhanced_gui": 0.00234009360374415,
      "src.pokertool.enhanced_gui.IntegratedPokerAssistant": 0.0,
      "src.pokertool.enhanced_gui._ensure_scraper_dependencies": 0.0,
      "src.pokertool.enhanced_gui.main": 0.0,
      "src.pokertool.preflop_charts": 0.0031201248049922,
      "src.pokertool.preflop_charts.ChartRecommendation": 0.0,
      "src.pokertool.preflop_charts.PreflopChartManager": 0.0,
      "src.pokertool.preflop_charts.QuickCharts": 0.0,
      "src.pokertool.preflop_charts.PreflopAnalyzer": 0.0,
      "src.pokertool.csrf_protection": 0.0031201248049922,
      "src.pokertool.csrf_protection.CSRFProtection": 0.0,
      "src.pokertool.csrf_protection.CSRFMiddleware": 0.0,
      "src.pokertool.csrf_protection.get_csrf_token": 0.0,
      "src.pokertool.csrf_protection.create_csrf_protection": 0.0,
      "src.pokertool.concurrency": 0.015600624024960999,
      "src.pokertool.concurrency.TaskPriority": 0.0,
      "src.pokertool.concurrency.TaskResult": 0.0,
      "src.pokertool.concurrency.ThreadPoolConfig": 0.0,
      "src.pokertool.concurrency.ThreadSafeCounter": 0.0,
      "src.pokertool.concurrency.ThreadSafeDict": 0.0,
      "src.pokertool.concurrency.TaskQueue": 0.0,
      "src.pokertool.concurrency.PokerThreadPool": 0.0,
      "src.pokertool.concurrency.AsyncManager": 0.0,
      "src.pokertool.concurrency.PokerConcurrencyManager": 0.0,
      "src.pokertool.concurrency._shutdown_global_thread_pool": 0.0,
      "src.pokertool.concurrency.get_thread_pool": 0.0,
      "src.pokertool.concurrency.threaded": 0.00078003120124805,
      "src.pokertool.concurrency.cpu_intensive": 0.00078003120124805,
      "src.pokertool.concurrency.get_async_manager": 0.0,
      "src.pokertool.concurrency.get_poker_concurrency_manager": 0.0,
      "src.pokertool.concurrency.managed_thread_pool": 0.0,
      "src.pokertool.concurrency.async_context": 0.00078003120124805,
      "src.pokertool.concurrency.run_concurrent_tasks": 0.0,
      "src.pokertool.concurrency.parallel_map": 0.00078003120124805,
      "src.pokertool.concurrency.monitor_performance": 0.0,
      "src.pokertool.model_calibration": 0.0070202808112324495,
      "src.pokertool.model_calibration.DriftStatus": 0.0,
      "src.pokertool.model_calibration.CalibrationMethod": 0.0,
      "src.pokertool.model_calibration.PredictionRecord": 0.0,
      "src.pokertool.model_calibration.CalibrationMetrics": 0.0,
      "src.pokertool.model_calibration.DriftMetrics": 0.0,
      "src.pokertool.model_calibration.OnlineCalibrator": 0.0,
      "src.pokertool.model_calibration.DriftDetector": 0.0,
      "src.pokertool.model_calibration.ModelCalibrationSystem": 0.0,
      "src.pokertool.model_calibration.get_calibration_system": 0.0,
      "src.pokertool.node_locker": 0.0015600624024961,
      "src.pokertool.node_locker.NodeLock": 0.0,
      "src.pokertool.node_locker.NodeLocker": 0.0,
      "src.pokertool.meta_game": 0.0078003120124804995,
      "src.pokertool.meta_game.StrategyLevel": 0.0,
      "src.pokertool.meta_game.PlayerReputation": 0.0,
      "src.pokertool.meta_game.MetaGameState": 0.0,
      "src.pokertool.meta_game.StrategyAdjustment": 0.0,
      "src.pokertool.meta_game.LevelingWarSimulator": 0.0,
      "src.pokertool.meta_game.DynamicStrategySwitcher": 0.0,
      "src.pokertool.meta_game.ExploitationProtectionBalancer": 0.0,
      "src.pokertool.meta_game.HistoryDependentStrategy": 0.0,
      "src.pokertool.meta_game.ReputationModel": 0.0,
      "src.pokertool.meta_game.MetaGameOptimizer": 0.0,
      "src.pokertool.session_management": 0.00546021840873635,
      "src.pokertool.session_management.SessionGoal": 0.0,
      "src.pokertool.session_management.SessionMetrics": 0.0,
      "src.pokertool.session_management.SessionReview": 0.0,
      "src.pokertool.session_management.SessionRecord": 0.0,
      "src.pokertool.session_management.SessionStorage": 0.0,
      "src.pokertool.session_management.SessionManager": 0.0,
      "src.pokertool.session_management._now": 0.0,
      "src.pokertool.rate_limiter": 0.0070202808112324495,
      "src.pokertool.rate_limiter.RateLimitConfig": 0.0,
      "src.pokertool.rate_limiter.RateLimitRecord": 0.0,
      "src.pokertool.rate_limiter.RateLimiter": 0.0,
      "src.pokertool.rate_limiter.AdaptiveRateLimiter": 0.0,
      "src.pokertool.rate_limiter.configure_rate_limit": 0.0,
      "src.pokertool.rate_limiter.check_rate_limit": 0.0,
      "src.pokertool.rate_limiter.get_rate_limit_stats": 0.0,
      "src.pokertool.rate_limiter.reset_rate_limits": 0.0,
      "src.pokertool.rate_limiter.setup_default_rate_limits": 0.00078003120124805,
      "src.pokertool.rbac": 0.0062402496099844,
      "src.pokertool.rbac.Permission": 0.0,
      "src.pokertool.rbac.Role": 0.0,
      "src.pokertool.rbac.RoleDefinition": 0.0,
      "src.pokertool.rbac.RBACSystem": 0.0,
      "src.pokertool.rbac.get_rbac_system": 0.0,
      "src.pokertool.rbac.require_permission": 0.00078003120124805,
      "src.pokertool.rbac.require_role": 0.00078003120124805,
      "src.pokertool.rbac.requires_permission": 0.00078003120124805,
      "src.pokertool": 0.0,
      "src.pokertool.confidence_decision_api": 0.00546021840873635,
      "src.pokertool.confidence_decision_api.ConfidenceBand": 0.0,
      "src.pokertool.confidence_decision_api.RiskLevel": 0.0,
      "src.pokertool.confidence_decision_api.ConfidenceInterval": 0.0,
      "src.pokertool.confidence_decision_api.DecisionRecommendation": 0.0,
      "src.pokertool.confidence_decision_api.PredictiveDistribution": 0.0,
      "src.pokertool.confidence_decision_api.ConfidenceAwareDecisionAPI": 0.0,
      "src.pokertool.confidence_decision_api.get_confidence_decision_api": 0.0,
      "src.pokertool.feature_flags": 0.00546021840873635,
      "src.pokertool.feature_flags.FeatureState": 0.0,
      "src.pokertool.feature_flags.Feature": 0.0,
      "src.pokertool.feature_flags.FeatureFlags": 0.0,
      "src.pokertool.feature_flags.get_feature_flags": 0.0,
      "src.pokertool.feature_flags.reset_feature_flags": 0.0,
      "src.pokertool.feature_flags.is_feature_enabled": 0.00078003120124805,
      "src.pokertool.feature_flags.requires_feature": 0.00078003120124805,
      "src.pokertool.production_database": 0.0046801872074883,
      "src.pokertool.production_database.DatabaseConfig": 0.0,
      "src.pokertool.production_database.MigrationStats": 0.0,
      "src.pokertool.production_database.ProductionDatabase": 0.0,
      "src.pokertool.production_database.get_production_db": 0.0,
      "src.pokertool.production_database.initialize_production_db": 0.0,
      "src.pokertool.production_database.migrate_to_production": 0.0015600624024961,
      "src.pokertool.frame_differencing_engine": 0.0031201248049922,
      "src.pokertool.frame_differencing_engine.FrameDifferenceMetrics": 0.0,
      "src.pokertool.frame_differencing_engine.FrameDifferencingEngine": 0.0,
      "src.pokertool.frame_differencing_engine.get_frame_diff_engine": 0.0,
      "src.pokertool.frame_differencing_engine.reset_frame_diff_engine": 0.0,
      "src.pokertool.nash_solver": 0.0046801872074883,
      "src.pokertool.nash_solver.NashResult": 0.0,
      "src.pokertool.nash_solver.AdvancedNashSolver": 0.0,
      "src.pokertool.nash_solver.InformationSet": 0.0,
      "src.pokertool.nash_solver.AbstractedNode": 0.0,
      "src.pokertool.nash_solver.GameTreeAbstractor": 0.0,
      "src.pokertool.nash_solver.HistogramAbstractor": 0.0,
      "src.pokertool.correlation_id_middleware": 0.0062402496099844,
      "src.pokertool.correlation_id_middleware.CorrelationIdMiddleware": 0.0,
      "src.pokertool.correlation_id_middleware.CorrelationIdFilter": 0.0,
      "src.pokertool.correlation_id_middleware.CorrelationIdPropagator": 0.0,
      "src.pokertool.correlation_id_middleware.DatabaseQueryTracer": 0.0,
      "src.pokertool.correlation_id_middleware.get_correlation_id": 0.0,
      "src.pokertool.correlation_id_middleware.set_correlation_id": 0.0,
      "src.pokertool.correlation_id_middleware.with_correlation_id": 0.0,
      "src.pokertool.correlation_id_middleware.get_logger_with_correlation_id": 0.0,
      "src.pokertool.db_performance_monitor": 0.0062402496099844,
      "src.pokertool.db_performance_monitor.PerformanceConfig": 0.0,
      "src.pokertool.db_performance_monitor.QueryMetrics": 0.0,
      "src.pokertool.db_performance_monitor.QueryStats": 0.0,
      "src.pokertool.db_performance_monitor.DatabasePerformanceMonitor": 0.0,
      "src.pokertool.db_performance_monitor._QueryTracker": 0.0,
      "src.pokertool.db_performance_monitor.get_performance_report": 0.0,
      "src.pokertool.db_performance_monitor.reset_performance_stats": 0.0,
      "src.pokertool.db_performance_monitor.cleanup_old_performance_data": 0.0,
      "src.pokertool.leveling_war": 0.0062402496099844,
      "src.pokertool.leveling_war.ThinkingLevel": 0.0,
      "src.pokertool.leveling_war.LevelingOutcome": 0.0,
      "src.pokertool.leveling_war.LevelEstimator": 0.0,
      "src.pokertool.leveling_war.StrategyEvolution": 0.0,
      "src.pokertool.leveling_war.CounterStrategyGenerator": 0.0,
      "src.pokertool.leveling_war.LevelingWarSimulator": 0.0,
      "src.pokertool.leveling_war.MetaGameTracker": 0.0,
      "src.pokertool.leveling_war.analyze_leveling_war": 0.0,
      "src.pokertool.range_generator": 0.00858034321372855,
      "src.pokertool.range_generator.Position": 0.0,
      "src.pokertool.range_generator.Action": 0.0,
      "src.pokertool.range_generator.RangeParameters": 0.0,
      "src.pokertool.range_generator.HandRange": 0.0,
      "src.pokertool.range_generator.HandParser": 0.0,
      "src.pokertool.range_generator.AnteAdjuster": 0.0,
      "src.pokertool.range_generator.StraddleAdapter": 0.0,
      "src.pokertool.range_generator.ICMAdjuster": 0.0,
      "src.pokertool.range_generator.MultiWayAdjuster": 0.0,
      "src.pokertool.range_generator.BaseRangeGenerator": 0.0,
      "src.pokertool.range_generator.RangeGenerator": 0.0,
      "src.pokertool.async_scraper_executor": 0.0039001560062402497,
      "src.pokertool.async_scraper_executor.PerformanceMetrics": 0.0,
      "src.pokertool.async_scraper_executor.ScrapeResult": 0.0,
      "src.pokertool.async_scraper_executor.AsyncScraperExecutor": 0.0,
      "src.pokertool.async_scraper_executor.get_async_executor": 0.0,
      "src.pokertool.async_scraper_executor.shutdown_async_executor": 0.0,
      "src.pokertool.multi_table_support": 0.0124804992199688,
      "src.pokertool.multi_table_support.TableLayout": 0.0,
      "src.pokertool.multi_table_support.TableState": 0.0,
      "src.pokertool.multi_table_support.TablePriority": 0.0,
      "src.pokertool.multi_table_support.TableWindow": 0.0,
      "src.pokertool.multi_table_support.HotkeyAction": 0.0,
      "src.pokertool.multi_table_support.TableManager": 0.0,
      "src.pokertool.multi_table_support.get_table_manager": 0.0,
      "src.pokertool.multi_table_support.add_poker_table": 0.00078003120124805,
      "src.pokertool.multi_table_support.remove_poker_table": 0.00078003120124805,
      "src.pokertool.multi_table_support.tile_tables": 0.00078003120124805,
      "src.pokertool.multi_table_support.focus_next": 0.00078003120124805,
      "src.pokertool.multi_table_support.get_active_tables": 0.00078003120124805,
      "src.pokertool.multi_table_support.get_tables_needing_action": 0.00078003120124805,
      "src.pokertool.multi_table_support.setup_custom_hotkey": 0.00078003120124805,
      "src.pokertool.multi_table_support.save_table_session": 0.00078003120124805,
      "src.pokertool.multi_table_support.load_table_session": 0.00078003120124805,
      "src.pokertool.blocker_effects": 0.0070202808112324495,
      "src.pokertool.blocker_effects.BlockerType": 0.0,
      "src.pokertool.blocker_effects.BlockerStrength": 0.0,
      "src.pokertool.blocker_effects.BoardTextureAnalyzer": 0.0,
      "src.pokertool.blocker_effects.EquityAdjuster": 0.0,
      "src.pokertool.blocker_effects.BluffSelector": 0.0,
      "src.pokertool.blocker_effects.RangeBlockerAnalysis": 0.0,
      "src.pokertool.blocker_effects.quick_blocker_eval": 0.0,
      "src.pokertool.blocker_effects.get_best_bluff_combos": 0.0,
      "src.pokertool.blocker_effects.calculate_blocker_equity_boost": 0.0,
      "src.pokertool.hand_history_db": 0.00546021840873635,
      "src.pokertool.hand_history_db.GameStage": 0.0,
      "src.pokertool.hand_history_db.ActionType": 0.0,
      "src.pokertool.hand_history_db.PlayerInfo": 0.0,
      "src.pokertool.hand_history_db.PlayerAction": 0.0,
      "src.pokertool.hand_history_db.HandHistory": 0.0,
      "src.pokertool.hand_history_db.HandHistoryDatabase": 0.0,
      "src.pokertool.hand_history_db.get_hand_history_db": 0.0,
      "src.pokertool.threading": 0.01170046801872075,
      "src.pokertool.threading.ThreadSafeDict": 0.0,
      "src.pokertool.threading.ThreadSafeCounter": 0.0,
      "src.pokertool.threading.TaskPriority": 0.0,
      "src.pokertool.threading.AsyncCallback": 0.0,
      "src.pokertool.threading.get_thread_pool": 0.0,
      "src.pokertool.threading.shutdown_thread_pool": 0.0,
      "src.pokertool.threading.run_in_thread": 0.00078003120124805,
      "src.pokertool.threading.thread_safe": 0.0,
      "src.pokertool.threading.with_timeout": 0.0,
      "src.pokertool.threading.register_callback": 0.0,
      "src.pokertool.threading.trigger_callbacks": 0.0,
      "src.pokertool.threading.get_thread_local": 0.0,
      "src.pokertool.threading.set_thread_local": 0.0,
      "src.pokertool.threading.clear_thread_local": 0.0,
      "src.pokertool.threading.cleanup_threading": 0.0015600624024961,
      "src.pokertool.error_handling": 0.0046801872074883,
      "src.pokertool.error_handling.SecurityError": 0.0,
      "src.pokertool.error_handling.CircuitBreaker": 0.0,
      "src.pokertool.error_handling.sanitize_input": 0.0,
      "src.pokertool.error_handling.retry_on_failure": 0.0,
      "src.pokertool.error_handling.run_safely": 0.0,
      "src.pokertool.error_handling.db_guard": 0.0,
      "src.pokertool.structured_logger": 0.0062402496099844,
      "src.pokertool.structured_logger.LogLevel": 0.0,
      "src.pokertool.structured_logger.JSONFormatter": 0.0,
      "src.pokertool.structured_logger.StructuredLogger": 0.0,
      "src.pokertool.structured_logger.get_logger": 0.0,
      "src.pokertool.structured_logger.setup_logging": 0.0,
      "src.pokertool.structured_logger.log_api_request": 0.00078003120124805,
      "src.pokertool.structured_logger.log_ml_prediction": 0.00078003120124805,
      "src.pokertool.structured_logger.log_error": 0.00078003120124805,
      "src.pokertool.api": 0.01014040561622465,
      "src.pokertool.api.UserRole": 0.0,
      "src.pokertool.api.APIUser": 0.0,
      "src.pokertool.api.AuthenticationService": 0.0,
      "src.pokertool.api.ConnectionManager": 0.0,
      "src.pokertool.api.DetectionWebSocketManager": 0.0,
      "src.pokertool.api.APIServices": 0.0,
      "src.pokertool.api.PokerToolAPI": 0.0,
      "src.pokertool.api.get_detection_ws_manager": 0.0,
      "src.pokertool.api.broadcast_detection_event": 0.00078003120124805,
      "src.pokertool.api.get_api": 0.0,
      "src.pokertool.api.create_app": 0.00078003120124805,
      "src.pokertool.api.run_api_server": 0.00078003120124805,
      "src.pokertool.api.main": 0.00078003120124805,
      "src.pokertool.network_analysis": 0.0031201248049922,
      "src.pokertool.network_analysis.Interaction": 0.0,
      "src.pokertool.network_analysis.PlayerNode": 0.0,
      "src.pokertool.network_analysis.EdgeMetrics": 0.0,
      "src.pokertool.network_analysis.NetworkAnalysis": 0.0,
      "src.pokertool.qaoa_solver": 0.0062402496099844,
      "src.pokertool.qaoa_solver.QAOAParameters": 0.0,
      "src.pokertool.qaoa_solver.QAOAResult": 0.0,
      "src.pokertool.qaoa_solver.QAOAProblemHamiltonian": 0.0,
      "src.pokertool.qaoa_solver.QAOAMixingHamiltonian": 0.0,
      "src.pokertool.qaoa_solver.QAOASolver": 0.0,
      "src.pokertool.qaoa_solver.PokerQAOASolver": 0.0,
      "src.pokertool.qaoa_solver.solve_maxcut_qaoa": 0.0,
      "src.pokertool.qaoa_solver.optimize_portfolio_qaoa": 0.0,
      "src.pokertool.hud_overlay": 0.0062402496099844,
      "src.pokertool.hud_overlay.HUDConfig": 0.0,
      "src.pokertool.hud_overlay.PlayerHUDStats": 0.0,
      "src.pokertool.hud_overlay.HUDOverlay": 0.0,
      "src.pokertool.hud_overlay.get_hud_overlay": 0.0,
      "src.pokertool.hud_overlay.start_hud_overlay": 0.0,
      "src.pokertool.hud_overlay.stop_hud_overlay": 0.0,
      "src.pokertool.hud_overlay.update_hud_state": 0.0,
      "src.pokertool.hud_overlay.is_hud_running": 0.0,
      "src.pokertool.pattern_detector": 0.00546021840873635,
      "src.pokertool.pattern_detector.Pattern": 0.0,
      "src.pokertool.pattern_detector.TimeSeriesAnalyzer": 0.0,
      "src.pokertool.pattern_detector.BehavioralPatternDetector": 0.0,
      "src.pokertool.pattern_detector.SequencePatternMatcher": 0.0,
      "src.pokertool.pattern_detector.AnomalyDetector": 0.0,
      "src.pokertool.pattern_detector.calculate_pattern_strength": 0.0,
      "src.pokertool.pattern_detector.combine_pattern_scores": 0.0,
      "src.pokertool.smart_ocr_cache": 0.0039001560062402497,
      "src.pokertool.smart_ocr_cache.CachedResult": 0.0,
      "src.pokertool.smart_ocr_cache.CacheMetrics": 0.0,
      "src.pokertool.smart_ocr_cache.SmartOCRCache": 0.0,
      "src.pokertool.smart_ocr_cache.get_ocr_cache": 0.0,
      "src.pokertool.smart_ocr_cache.reset_ocr_cache": 0.0,
      "src.pokertool.cli": 0.0015600624024961,
      "src.pokertool.cli.main": 0.00078003120124805,
      "src.pokertool.cli.run_test_mode": 0.0,
      "src.pokertool.circuit_breaker": 0.0062402496099844,
      "src.pokertool.circuit_breaker.CircuitState": 0.0,
      "src.pokertool.circuit_breaker.CircuitBreakerConfig": 0.0,
      "src.pokertool.circuit_breaker.CircuitBreakerMetrics": 0.0,
      "src.pokertool.circuit_breaker.CircuitBreaker": 0.0,
      "src.pokertool.circuit_breaker.CircuitBreakerOpenError": 0.0,
      "src.pokertool.circuit_breaker.get_circuit_breaker": 0.0,
      "src.pokertool.circuit_breaker.get_all_circuit_breakers": 0.0,
      "src.pokertool.circuit_breaker.reset_all_circuit_breakers": 0.0,
      "src.pokertool.user_config": 0.00546021840873635,
      "src.pokertool.user_config.UserConfig": 0.0,
      "src.pokertool.user_config.ConfigManager": 0.0,
      "src.pokertool.user_config.get_config_manager": 0.0,
      "src.pokertool.user_config.get_poker_handle": 0.0015600624024961,
      "src.pokertool.user_config.set_poker_handle": 0.0015600624024961,
      "src.pokertool.user_config.has_poker_handle": 0.0015600624024961,
      "src.pokertool.user_config.prompt_for_poker_handle": 0.00078003120124805,
      "src.pokertool.ocr_recognition": 0.00546021840873635,
      "src.pokertool.ocr_recognition.RecognitionMethod": 0.0,
      "src.pokertool.ocr_recognition.CardRegion": 0.0,
      "src.pokertool.ocr_recognition.RecognitionResult": 0.0,
      "src.pokertool.ocr_recognition.CardTemplateManager": 0.0,
      "src.pokertool.ocr_recognition.PokerOCR": 0.0,
      "src.pokertool.ocr_recognition.get_poker_ocr": 0.0,
      "src.pokertool.ocr_recognition.create_card_regions": 0.0,
      "src.pokertool.theme_system": 0.0062402496099844,
      "src.pokertool.theme_system.Palette": 0.0,
      "src.pokertool.theme_system.Typography": 0.0,
      "src.pokertool.theme_system.Theme": 0.0,
      "src.pokertool.theme_system.ThemeDraft": 0.0,
      "src.pokertool.theme_system.MarketplaceEntry": 0.0,
      "src.pokertool.theme_system.ThemeEngine": 0.0,
      "src.pokertool.theme_system.ThemeEditor": 0.0,
      "src.pokertool.theme_system.ThemeMarketplace": 0.0,
      "src.pokertool.range_merger": 0.0070202808112324495,
      "src.pokertool.range_merger.HandCategory": 0.0,
      "src.pokertool.range_merger.HandCombo": 0.0,
      "src.pokertool.range_merger.RangeStructure": 0.0,
      "src.pokertool.range_merger.MinimumDefenseFrequency": 0.0,
      "src.pokertool.range_merger.PolarizationOptimizer": 0.0,
      "src.pokertool.range_merger.RemovalEffectsCalculator": 0.0,
      "src.pokertool.range_merger.BlockerAnalyzer": 0.0,
      "src.pokertool.range_merger.RangeSimplifier": 0.0,
      "src.pokertool.range_merger.AdvancedRangeMerger": 0.0,
      "src.pokertool.mcts_optimizer": 0.0039001560062402497,
      "src.pokertool.mcts_optimizer.GameState": 0.0,
      "src.pokertool.mcts_optimizer.MCTSNode": 0.0,
      "src.pokertool.mcts_optimizer.MCTSConfig": 0.0,
      "src.pokertool.mcts_optimizer.TranspositionTable": 0.0,
      "src.pokertool.mcts_optimizer.MCTSOptimizer": 0.0,
      "src.pokertool.master_logging": 0.0093603744149766,
      "src.pokertool.master_logging.LogLevel": 0.0,
      "src.pokertool.master_logging.LogCategory": 0.0,
      "src.pokertool.master_logging.LogContext": 0.0,
      "src.pokertool.master_logging.ErrorDetails": 0.0,
      "src.pokertool.master_logging.MasterLogger": 0.0,
      "src.pokertool.master_logging.get_master_logger": 0.0,
      "src.pokertool.master_logging.log_info": 0.00078003120124805,
      "src.pokertool.master_logging.log_error": 0.00078003120124805,
      "src.pokertool.master_logging.log_warning": 0.00078003120124805,
      "src.pokertool.master_logging.log_performance": 0.00078003120124805,
      "src.pokertool.master_logging.log_security_event": 0.00078003120124805,
      "src.pokertool.master_logging.auto_log_errors": 0.00078003120124805,
      "src.pokertool.synthetic_data_generator": 0.0039001560062402497,
      "src.pokertool.synthetic_data_generator.TableTheme": 0.0,
      "src.pokertool.synthetic_data_generator.PlayerSeat": 0.0,
      "src.pokertool.synthetic_data_generator.TableState": 0.0,
      "src.pokertool.synthetic_data_generator.SyntheticDataGenerator": 0.0,
      "src.pokertool.synthetic_data_generator.generate_synthetic_dataset": 0.0,
      "src.pokertool.storage": 0.0039001560062402497,
      "src.pokertool.storage.SecurityError": 0.0,
      "src.pokertool.storage.SecureDatabase": 0.0,
      "src.pokertool.storage.get_secure_db": 0.0,
      "src.pokertool.storage.init_db": 0.0,
      "src.pokertool.storage.initialise_db_if_needed": 0.00078003120124805,
      "src.pokertool.performance_profiler": 0.0039001560062402497,
      "src.pokertool.performance_profiler.PerformanceSnapshot": 0.0,
      "src.pokertool.performance_profiler.AlertRule": 0.0,
      "src.pokertool.performance_profiler.OptimizationSuggestion": 0.0,
      "src.pokertool.performance_profiler.ProfilingReport": 0.0,
      "src.pokertool.performance_profiler.PerformanceProfiler": 0.0,
      "src.pokertool.advanced_reporting": 0.0046801872074883,
      "src.pokertool.advanced_reporting.ChartConfig": 0.0,
      "src.pokertool.advanced_reporting.ReportSection": 0.0,
      "src.pokertool.advanced_reporting.ReportTemplate": 0.0,
      "src.pokertool.advanced_reporting.ReportRequest": 0.0,
      "src.pokertool.advanced_reporting.ReportResult": 0.0,
      "src.pokertool.advanced_reporting.ReportBuilder": 0.0,
      "src.pokertool.startup_validator": 0.00546021840873635,
      "src.pokertool.startup_validator.HealthStatus": 0.0,
      "src.pokertool.startup_validator.ModuleHealth": 0.0,
      "src.pokertool.startup_validator.StartupValidator": 0.0,
      "src.pokertool.startup_validator.DependencyCheck": 0.0,
      "src.pokertool.startup_validator.check_dependencies": 0.0,
      "src.pokertool.startup_validator.print_dependency_report": 0.0,
      "src.pokertool.startup_validator.validate_startup_dependencies": 0.0015600624024961,
      "src.pokertool.tournament_support": 0.0109204368174727,
      "src.pokertool.tournament_support.TournamentPhase": 0.0,
      "src.pokertool.tournament_support.TournamentType": 0.0,
      "src.pokertool.tournament_support.TournamentStructure": 0.0,
      "src.pokertool.tournament_support.PayoutStructure": 0.0,
      "src.pokertool.tournament_support.PlayerStack": 0.0,
      "src.pokertool.tournament_support.TournamentState": 0.0,
      "src.pokertool.tournament_support.ICMCalculator": 0.0,
      "src.pokertool.tournament_support.PushFoldCalculator": 0.0,
      "src.pokertool.tournament_support.TournamentStrategy": 0.0,
      "src.pokertool.tournament_support.TournamentAnalyzer": 0.0,
      "src.pokertool.tournament_support.get_tournament_analyzer": 0.0,
      "src.pokertool.tournament_support.calculate_icm_equity": 0.0,
      "src.pokertool.tournament_support.get_tournament_strategy": 0.0,
      "src.pokertool.tournament_support.analyze_satellite_spot": 0.0,
      "src.pokertool.i18n": 0.0093603744149766,
      "src.pokertool.i18n.LocaleListener": 0.0,
      "src.pokertool.i18n.TranslationManager": 0.0,
      "src.pokertool.i18n.translate": 0.0,
      "src.pokertool.i18n.set_locale": 0.0,
      "src.pokertool.i18n.get_current_locale": 0.0,
      "src.pokertool.i18n.available_locales": 0.0,
      "src.pokertool.i18n.format_decimal": 0.0,
      "src.pokertool.i18n.format_currency": 0.0,
      "src.pokertool.i18n.convert_currency": 0.0,
      "src.pokertool.i18n.format_datetime": 0.0,
      "src.pokertool.i18n.register_locale_listener": 0.0,
      "src.pokertool.i18n.unregister_locale_listener": 0.0,
      "src.pokertool.gpu_preprocessing": 0.0046801872074883,
      "src.pokertool.gpu_preprocessing.AcceleratorType": 0.0,
      "src.pokertool.gpu_preprocessing.PerformanceMetrics": 0.0,
      "src.pokertool.gpu_preprocessing.GPUCapabilities": 0.0,
      "src.pokertool.gpu_preprocessing.GPUPreprocessor": 0.0,
      "src.pokertool.gpu_preprocessing.get_gpu_preprocessor": 0.0,
      "src.pokertool.gpu_preprocessing.benchmark_accelerators": 0.0,
      "src.pokertool.error_handler": 0.0109204368174727,
      "src.pokertool.error_handler.ErrorSeverity": 0.0,
      "src.pokertool.error_handler.ErrorCategory": 0.0,
      "src.pokertool.error_handler.ErrorContext": 0.0,
      "src.pokertool.error_handler.PokerToolError": 0.0,
      "src.pokertool.error_handler.SystemError": 0.00078003120124805,
      "src.pokertool.error_handler.NetworkError": 0.00078003120124805,
      "src.pokertool.error_handler.DatabaseError": 0.00078003120124805,
      "src.pokertool.error_handler.MLModelError": 0.00078003120124805,
      "src.pokertool.error_handler.ScrapingError": 0.00078003120124805,
      "src.pokertool.error_handler.ValidationError": 0.00078003120124805,
      "src.pokertool.error_handler.GlobalErrorHandler": 0.0,
      "src.pokertool.error_handler.handle_error": 0.0,
      "src.pokertool.error_handler.get_error_stats": 0.0,
      "src.pokertool.error_handler.setup_error_handler": 0.0,
      "src.pokertool.__init__ 2": 0.0,
      "src.pokertool.floating_advice_window": 0.0031201248049922,
      "src.pokertool.floating_advice_window.ActionType": 0.0,
      "src.pokertool.floating_advice_window.ConfidenceLevel": 0.0,
      "src.pokertool.floating_advice_window.Advice": 0.0,
      "src.pokertool.floating_advice_window.FloatingAdviceWindow": 0.0,
      "src.pokertool.study_mode": 0.0078003120124804995,
      "src.pokertool.study_mode.Flashcard": 0.0,
      "src.pokertool.study_mode.QuizQuestion": 0.0,
      "src.pokertool.study_mode.QuizResult": 0.0,
      "src.pokertool.study_mode.Lesson": 0.0,
      "src.pokertool.study_mode.StudyProgress": 0.0,
      "src.pokertool.study_mode.StudyPersistence": 0.0,
      "src.pokertool.study_mode.SpacedRepetitionScheduler": 0.0,
      "src.pokertool.study_mode.QuizSession": 0.0,
      "src.pokertool.study_mode.StudyModeManager": 0.0,
      "src.pokertool.study_mode._now": 0.0,
      "src.pokertool.bluff_detection": 0.0039001560062402497,
      "src.pokertool.bluff_detection.ActionTiming": 0.0,
      "src.pokertool.bluff_detection.ShowdownObservation": 0.0,
      "src.pokertool.bluff_detection.BluffAssessment": 0.0,
      "src.pokertool.bluff_detection.PlayerBluffProfile": 0.0,
      "src.pokertool.bluff_detection.BluffDetectionEngine": 0.0,
      "src.pokertool.solver_api": 0.00858034321372855,
      "src.pokertool.solver_api.SolverQuery": 0.0,
      "src.pokertool.solver_api.SolverResult": 0.0,
      "src.pokertool.solver_api.SolverCache": 0.0,
      "src.pokertool.solver_api.ApproximationEngine": 0.0,
      "src.pokertool.solver_api.ProgressiveRefiner": 0.0,
      "src.pokertool.solver_api.LatencyOptimizer": 0.0,
      "src.pokertool.solver_api.ParallelSolverExecutor": 0.0,
      "src.pokertool.solver_api.RealtimeSolverAPI": 0.0,
      "src.pokertool.solver_api.create_solver_api": 0.0,
      "src.pokertool.solver_api.quick_query": 0.00078003120124805,
      "src.pokertool.gto_deviations": 0.0124804992199688,
      "src.pokertool.gto_deviations.ActionType": 0.0,
      "src.pokertool.gto_deviations.StrategyType": 0.0,
      "src.pokertool.gto_deviations.PopulationTendency": 0.0,
      "src.pokertool.gto_deviations.OpponentModel": 0.0,
      "src.pokertool.gto_deviations.Deviation": 0.0,
      "src.pokertool.gto_deviations.PopulationProfile": 0.0,
      "src.pokertool.gto_deviations.DeviationRequest": 0.0,
      "src.pokertool.gto_deviations.DeviationResult": 0.0,
      "src.pokertool.gto_deviations.MaximumExploitationFinder": 0.0,
      "src.pokertool.gto_deviations.NodeLocker": 0.0,
      "src.pokertool.gto_deviations.StrategySimplifier": 0.0,
      "src.pokertool.gto_deviations.DeviationEVCalculator": 0.0,
      "src.pokertool.gto_deviations.GTODeviationEngine": 0.0,
      "src.pokertool.gto_deviations.GTODeviationCalculator": 0.0,
      "src.pokertool.gto_deviations.create_opponent_model": 0.0,
      "src.pokertool.gto_deviations.find_deviations": 0.0,
      "src.pokertool.stats_validator": 0.01014040561622465,
      "src.pokertool.stats_validator.TestType": 0.0,
      "src.pokertool.stats_validator.CorrectionMethod": 0.0,
      "src.pokertool.stats_validator.HypothesisTestResult": 0.0,
      "src.pokertool.stats_validator.ConfidenceInterval": 0.0,
      "src.pokertool.stats_validator.SampleSizeRecommendation": 0.0,
      "src.pokertool.stats_validator.HypothesisTester": 0.0,
      "src.pokertool.stats_validator.ConfidenceIntervalCalculator": 0.0,
      "src.pokertool.stats_validator.SampleSizeCalculator": 0.0,
      "src.pokertool.stats_validator.VarianceReducer": 0.0,
      "src.pokertool.stats_validator.PValueCorrector": 0.0,
      "src.pokertool.stats_validator.StatisticalValidator": 0.0,
      "src.pokertool.stats_validator.quick_validate": 0.0,
      "src.pokertool.stats_validator.calculate_required_sample_size": 0.0,
      "src.pokertool.api_client": 0.00546021840873635,
      "src.pokertool.api_client.APIError": 0.0,
      "src.pokertool.api_client.AuthenticationError": 0.00078003120124805,
      "src.pokertool.api_client.RateLimitError": 0.00078003120124805,
      "src.pokertool.api_client.ValidationError": 0.00078003120124805,
      "src.pokertool.api_client.HandAnalysisRequest": 0.0,
      "src.pokertool.api_client.HandAnalysisResponse": 0.0,
      "src.pokertool.api_client.PokerToolClient": 0.0,
      "src.pokertool.rl_agent": 0.0078003120124804995,
      "src.pokertool.rl_agent.AgentLevel": 0.0,
      "src.pokertool.rl_agent.Action": 0.0,
      "src.pokertool.rl_agent.PolicyNetwork": 0.0,
      "src.pokertool.rl_agent.ValueNetwork": 0.0,
      "src.pokertool.rl_agent.ExperienceReplayBuffer": 0.0,
      "src.pokertool.rl_agent.RewardShaper": 0.0,
      "src.pokertool.rl_agent.CurriculumManager": 0.0,
      "src.pokertool.rl_agent.PPOTrainer": 0.0,
      "src.pokertool.rl_agent.RLAgent": 0.0,
      "src.pokertool.rl_agent.MultiAgentTrainer": 0.0,
      "src.pokertool.variance_calculator": 0.0062402496099844,
      "src.pokertool.variance_calculator.SessionResult": 0.0,
      "src.pokertool.variance_calculator.VarianceReport": 0.0,
      "src.pokertool.variance_calculator.VarianceCalculator": 0.0,
      "src.pokertool.variance_calculator.calculate_variance": 0.0,
      "src.pokertool.variance_calculator.calculate_standard_deviation": 0.0,
      "src.pokertool.variance_calculator.simulate_sessions": 0.0,
      "src.pokertool.variance_calculator.calculate_confidence_interval": 0.0,
      "src.pokertool.variance_calculator.quick_risk_analysis": 0.00078003120124805,
      "src.pokertool.gui": 0.0062402496099844,
      "src.pokertool.gui.VisualCard": 0.0,
      "src.pokertool.gui.CardSelectionPanel": 0.0,
      "src.pokertool.gui.PlayerInfo": 0.0,
      "src.pokertool.gui.TableVisualization": 0.0,
      "src.pokertool.gui.EnhancedPokerAssistantFrame": 0.0,
      "src.pokertool.gui.EnhancedPokerAssistant": 0.0,
      "src.pokertool.gui.main": 0.0,
      "src.pokertool.gui.run": 0.00078003120124805,
      "src.pokertool.documentation_system": 0.0062402496099844,
      "src.pokertool.documentation_system.HelpTopic": 0.0,
      "src.pokertool.documentation_system.VideoTutorial": 0.0,
      "src.pokertool.documentation_system.GuideStep": 0.0,
      "src.pokertool.documentation_system.InteractiveGuide": 0.0,
      "src.pokertool.documentation_system.FAQEntry": 0.0,
      "src.pokertool.documentation_system.ContextHelp": 0.0,
      "src.pokertool.documentation_system.DocumentationSystem": 0.0,
      "src.pokertool.documentation_system._sanitize": 0.0,
      "src.pokertool.live_decision_engine": 0.0046801872074883,
      "src.pokertool.live_decision_engine.GameState": 0.0,
      "src.pokertool.live_decision_engine.WinProbabilityCalculator": 0.0,
      "src.pokertool.live_decision_engine.ReasoningGenerator": 0.0,
      "src.pokertool.live_decision_engine.LiveDecisionEngine": 0.0,
      "src.pokertool.live_decision_engine.get_live_decision_engine": 0.0,
      "src.pokertool.live_decision_engine.demo": 0.00078003120124805,
      "src.pokertool.hand_range_analyzer": 0.0046801872074883,
      "src.pokertool.hand_range_analyzer.RangeEntry": 0.0,
      "src.pokertool.hand_range_analyzer.RangeProfile": 0.0,
      "src.pokertool.hand_range_analyzer.RangeEquityResult": 0.0,
      "src.pokertool.hand_range_analyzer.RangeHeatMap": 0.0,
      "src.pokertool.hand_range_analyzer.RangeParsingError": 0.0,
      "src.pokertool.hand_range_analyzer.HandRangeAnalyzer": 0.0,
      "src.pokertool.scrape": 0.00858034321372855,
      "src.pokertool.scrape.RecognitionStats": 0.0,
      "src.pokertool.scrape._FallbackScraperBridge": 0.0,
      "src.pokertool.scrape.EnhancedScraperManager": 0.0,
      "src.pokertool.scrape.run_screen_scraper": 0.0,
      "src.pokertool.scrape.stop_screen_scraper": 0.0,
      "src.pokertool.scrape.get_scraper_status": 0.0,
      "src.pokertool.scrape.run_desktop_independent_scraper": 0.0,
      "src.pokertool.scrape.stop_desktop_scraper": 0.0,
      "src.pokertool.scrape.get_desktop_scraper_status": 0.0,
      "src.pokertool.scrape.save_debug_screenshots_all_desktops": 0.0,
      "src.pokertool.scrape.quick_poker_window_scan": 0.0,
      "src.pokertool.thread_utils": 0.01170046801872075,
      "src.pokertool.thread_utils.ThreadSafeDict": 0.0,
      "src.pokertool.thread_utils.ThreadSafeCounter": 0.0,
      "src.pokertool.thread_utils.TaskPriority": 0.0,
      "src.pokertool.thread_utils.AsyncCallback": 0.0,
      "src.pokertool.thread_utils.get_thread_pool": 0.0,
      "src.pokertool.thread_utils.shutdown_thread_pool": 0.0,
      "src.pokertool.thread_utils.run_in_thread": 0.00078003120124805,
      "src.pokertool.thread_utils.thread_safe": 0.0,
      "src.pokertool.thread_utils.with_timeout": 0.0,
      "src.pokertool.thread_utils.register_callback": 0.0,
      "src.pokertool.thread_utils.trigger_callbacks": 0.0,
      "src.pokertool.thread_utils.get_thread_local": 0.0,
      "src.pokertool.thread_utils.set_thread_local": 0.0,
      "src.pokertool.thread_utils.clear_thread_local": 0.0,
      "src.pokertool.thread_utils.cleanup_threading": 0.0015600624024961,
      "src.pokertool.api_versioning": 0.00546021840873635,
      "src.pokertool.api_versioning.VersionStatus": 0.0,
      "src.pokertool.api_versioning.VersionInfo": 0.0,
      "src.pokertool.api_versioning.APIVersionManager": 0.0,
      "src.pokertool.api_versioning.APIVersionMiddleware": 0.0,
      "src.pokertool.api_versioning.get_version_manager": 0.0,
      "src.pokertool.api_versioning.require_version": 0.0,
      "src.pokertool.api_versioning.setup_api_versioning": 0.00078003120124805,
      "src.pokertool.ocr_ensemble": 0.00546021840873635,
      "src.pokertool.ocr_ensemble.OCREngine": 0.0,
      "src.pokertool.ocr_ensemble.FieldType": 0.0,
      "src.pokertool.ocr_ensemble.OCRResult": 0.0,
      "src.pokertool.ocr_ensemble.EnsembleResult": 0.0,
      "src.pokertool.ocr_ensemble.PokerLexicalValidator": 0.0,
      "src.pokertool.ocr_ensemble.OCREnsemble": 0.0,
      "src.pokertool.ocr_ensemble.get_ocr_ensemble": 0.0,
      "src.pokertool.gamification": 0.0031201248049922,
      "src.pokertool.gamification.Achievement": 0.0,
      "src.pokertool.gamification.Badge": 0.0,
      "src.pokertool.gamification.ProgressState": 0.0,
      "src.pokertool.gamification.GamificationEngine": 0.0,
      "src.pokertool.input_sanitizer": 0.0039001560062402497,
      "src.pokertool.input_sanitizer.SanitizationLevel": 0.0,
      "src.pokertool.input_sanitizer.InputSanitizer": 0.0,
      "src.pokertool.input_sanitizer.sanitize": 0.0,
      "src.pokertool.input_sanitizer.sanitize_basic": 0.0,
      "src.pokertool.input_sanitizer.sanitize_strict": 0.0,
      "src.pokertool.hand_converter": 0.0046801872074883,
      "src.pokertool.hand_converter.ConversionError": 0.0,
      "src.pokertool.hand_converter.PokerSite": 0.0,
      "src.pokertool.hand_converter.HandMetadata": 0.0,
      "src.pokertool.hand_converter.HandConversionResult": 0.0,
      "src.pokertool.hand_converter.HandFormatDetector": 0.0,
      "src.pokertool.hand_converter.HandConverter": 0.0,
      "src.pokertool.formatting_utils": 0.0070202808112324495,
      "src.pokertool.formatting_utils.format_percentage": 0.0,
      "src.pokertool.formatting_utils.format_currency": 0.0,
      "src.pokertool.formatting_utils.format_big_blinds": 0.0,
      "src.pokertool.formatting_utils.format_odds": 0.00078003120124805,
      "src.pokertool.formatting_utils.format_confidence_band": 0.00078003120124805,
      "src.pokertool.formatting_utils.format_stack_size": 0.0,
      "src.pokertool.formatting_utils.get_color_for_probability": 0.0,
      "src.pokertool.formatting_utils.get_color_for_confidence": 0.0,
      "src.pokertool.formatting_utils.format_action_display": 0.00078003120124805,
      "src.pokertool.roi_tracker": 0.0046801872074883,
      "src.pokertool.roi_tracker.ROIType": 0.0,
      "src.pokertool.roi_tracker.ROIDefinition": 0.0,
      "src.pokertool.roi_tracker.ROIState": 0.0,
      "src.pokertool.roi_tracker.ROIChangeDetection": 0.0,
      "src.pokertool.roi_tracker.ROITracker": 0.0,
      "src.pokertool.roi_tracker.get_roi_tracker": 0.0,
      "src.pokertool.threading_utils": 0.01170046801872075,
      "src.pokertool.threading_utils.ThreadSafeDict": 0.0,
      "src.pokertool.threading_utils.ThreadSafeCounter": 0.0,
      "src.pokertool.threading_utils.TaskPriority": 0.0,
      "src.pokertool.threading_utils.AsyncCallback": 0.0,
      "src.pokertool.threading_utils.get_thread_pool": 0.0,
      "src.pokertool.threading_utils.shutdown_thread_pool": 0.0,
      "src.pokertool.threading_utils.run_in_thread": 0.00078003120124805,
      "src.pokertool.threading_utils.thread_safe": 0.0,
      "src.pokertool.threading_utils.with_timeout": 0.0,
      "src.pokertool.threading_utils.register_callback": 0.0,
      "src.pokertool.threading_utils.trigger_callbacks": 0.0,
      "src.pokertool.threading_utils.get_thread_local": 0.0,
      "src.pokertool.threading_utils.set_thread_local": 0.0,
      "src.pokertool.threading_utils.clear_thread_local": 0.0,
      "src.pokertool.threading_utils.cleanup_threading": 0.0015600624024961,
      "src.pokertool.core": 0.0062402496099844,
      "src.pokertool.core.Rank": 0.0,
      "src.pokertool.core.Suit": 0.0,
      "src.pokertool.core.Position": 0.0,
      "src.pokertool.core.Card": 0.0,
      "src.pokertool.core.HandAnalysisResult": 0.0,
      "src.pokertool.core.parse_card": 0.0,
      "src.pokertool.core._normalise_cards": 0.00078003120124805,
      "src.pokertool.core.analyse_hand": 0.00078003120124805,
      "src.pokertool.enhanced_gui_components.settings_section": 0.00078003120124805,
      "src.pokertool.enhanced_gui_components.settings_section.SettingsSection": 0.0,
      "src.pokertool.enhanced_gui_components.style": 0.0,
      "src.pokertool.enhanced_gui_components.autopilot_panel": 0.0015600624024961,
      "src.pokertool.enhanced_gui_components.autopilot_panel.AutopilotState": 0.0,
      "src.pokertool.enhanced_gui_components.autopilot_panel.AutopilotControlPanel": 0.0,
      "src.pokertool.enhanced_gui_components.manual_section": 0.00078003120124805,
      "src.pokertool.enhanced_gui_components.manual_section.ManualPlaySection": 0.0,
      "src.pokertool.enhanced_gui_components.coaching_section": 0.00078003120124805,
      "src.pokertool.enhanced_gui_components.coaching_section.CoachingSection": 0.0,
      "src.pokertool.utils.dependency_manager": 0.0015600624024961,
      "src.pokertool.utils.dependency_manager.DependencyManager": 0.0,
      "src.pokertool.utils.dependency_manager.ensure_dependencies": 0.0,
      "src.pokertool.utils.single_instance": 0.0039001560062402497,
      "src.pokertool.utils.single_instance._sanitize_app_name": 0.0,
      "src.pokertool.utils.single_instance._lock_path": 0.00078003120124805,
      "src.pokertool.utils.single_instance._pid_is_running": 0.0,
      "src.pokertool.utils.single_instance.acquire_lock": 0.0015600624024961,
      "src.pokertool.utils.single_instance.release_lock": 0.0,
      "src.pokertool.modules.autoconfirm": 0.0,
      "src.pokertool.modules.ocr_engine": 0.00234009360374415,
      "src.pokertool.modules.ocr_engine.OCRResult": 0.0,
      "src.pokertool.modules.ocr_engine.PokerOCREngine": 0.0,
      "src.pokertool.modules.ocr_engine.get_ocr_engine": 0.0,
      "src.pokertool.modules.chrome_devtools_scraper": 0.0039001560062402497,
      "src.pokertool.modules.chrome_devtools_scraper.ChromeConnection": 0.0,
      "src.pokertool.modules.chrome_devtools_scraper.BetfairTableData": 0.0,
      "src.pokertool.modules.chrome_devtools_scraper.ChromeDevToolsScraper": 0.0,
      "src.pokertool.modules.chrome_devtools_scraper.create_auto_scraper": 0.0,
      "src.pokertool.modules.chrome_devtools_scraper.launch_chrome_for_debugging": 0.0,
      "src.pokertool.modules.note_taking_system": 0.0062402496099844,
      "src.pokertool.modules.note_taking_system.NoteColor": 0.0,
      "src.pokertool.modules.note_taking_system.NoteCategory": 0.0,
      "src.pokertool.modules.note_taking_system.PlayerNote": 0.0,
      "src.pokertool.modules.note_taking_system.NoteDatabase": 0.0,
      "src.pokertool.modules.note_taking_system.NoteSearch": 0.0,
      "src.pokertool.modules.note_taking_system.NoteTemplate": 0.0,
      "src.pokertool.modules.note_taking_system.AutoNoteGenerator": 0.0,
      "src.pokertool.modules.note_taking_system.NoteTakingSystem": 0.0,
      "src.pokertool.modules.run_pokertool": 0.00078003120124805,
      "src.pokertool.modules.run_pokertool.ensure_critical_dependencies": 0.0,
      "src.pokertool.modules.accuracy_validator": 0.01326053042121685,
      "src.pokertool.modules.accuracy_validator.ValidationStatus": 0.0,
      "src.pokertool.modules.accuracy_validator.CardRecognitionResult": 0.0,
      "src.pokertool.modules.accuracy_validator.ConsensusResult": 0.0,
      "src.pokertool.modules.accuracy_validator.ValidationResult": 0.0,
      "src.pokertool.modules.accuracy_validator.StackDelta": 0.0,
      "src.pokertool.modules.accuracy_validator.MultiFrameCardRecognizer": 0.0,
      "src.pokertool.modules.accuracy_validator.PotAmountValidator": 0.0,
      "src.pokertool.modules.accuracy_validator.StackDeltaTracker": 0.0,
      "src.pokertool.modules.accuracy_validator.BetAmountSpatialValidator": 0.0,
      "src.pokertool.modules.accuracy_validator.ActionButtonState": 0.0,
      "src.pokertool.modules.accuracy_validator.ButtonTransition": 0.0,
      "src.pokertool.modules.accuracy_validator.ActionButtonStateMachine": 0.0,
      "src.pokertool.modules.accuracy_validator.OCRReExtractor": 0.0,
      "src.pokertool.modules.accuracy_validator.CommunityCardSequenceValidator": 0.0,
      "src.pokertool.modules.accuracy_validator.TableBoundaryDetector": 0.0,
      "src.pokertool.modules.accuracy_validator.AccuracyValidationSystem": 0.0,
      "src.pokertool.modules.accuracy_validator.get_accuracy_validation_system": 0.0,
      "src.pokertool.modules.logger": 0.00234009360374415,
      "src.pokertool.modules.logger.MasterLogger": 0.0,
      "src.pokertool.modules.logger.log_exceptions": 0.0,
      "src.pokertool.modules.logger.setup_global_exception_handler": 0.0,
      "src.pokertool.modules.scraper_optimization_suite": 0.01326053042121685,
      "src.pokertool.modules.scraper_optimization_suite.ROI": 0.0,
      "src.pokertool.modules.scraper_optimization_suite.ROITracker": 0.0,
      "src.pokertool.modules.scraper_optimization_suite.FrameDiffEngine": 0.0,
      "src.pokertool.modules.scraper_optimization_suite.OCRCache": 0.0,
      "src.pokertool.modules.scraper_optimization_suite.ParallelExtractor": 0.0,
      "src.pokertool.modules.scraper_optimization_suite.FastScreenCapture": 0.0,
      "src.pokertool.modules.scraper_optimization_suite.TemporalConsensus": 0.0,
      "src.pokertool.modules.scraper_optimization_suite.PotValidator": 0.0,
      "src.pokertool.modules.scraper_optimization_suite.CardRecognitionModel": 0.0,
      "src.pokertool.modules.scraper_optimization_suite.SpatialValidator": 0.0,
      "src.pokertool.modules.scraper_optimization_suite.RecoveryManager": 0.0,
      "src.pokertool.modules.scraper_optimization_suite.RedundantExtractor": 0.0,
      "src.pokertool.modules.scraper_optimization_suite.HealthMetrics": 0.0,
      "src.pokertool.modules.scraper_optimization_suite.HealthMonitor": 0.0,
      "src.pokertool.modules.scraper_optimization_suite.ScraperOptimizationSuite": 0.0,
      "src.pokertool.modules.scraper_optimization_suite.get_optimization_suite": 0.0,
      "src.pokertool.modules.scraper_optimization_suite.demo": 0.00078003120124805,
      "src.pokertool.modules.scraper_learning_system": 0.0070202808112324495,
      "src.pokertool.modules.scraper_learning_system.ExtractionType": 0.0,
      "src.pokertool.modules.scraper_learning_system.EnvironmentSignature": 0.0,
      "src.pokertool.modules.scraper_learning_system.OCRStrategyResult": 0.0,
      "src.pokertool.modules.scraper_learning_system.OCRStrategyStats": 0.0,
      "src.pokertool.modules.scraper_learning_system.EnvironmentProfile": 0.0,
      "src.pokertool.modules.scraper_learning_system.ExtractionFeedback": 0.0,
      "src.pokertool.modules.scraper_learning_system.CDPGroundTruth": 0.0,
      "src.pokertool.modules.scraper_learning_system.ScraperLearningSystem": 0.0,
      "src.pokertool.modules.scraper_learning_system.create_learning_system": 0.0,
      "src.pokertool.modules.betfair_accuracy_improvements": 0.00858034321372855,
      "src.pokertool.modules.betfair_accuracy_improvements.SeatPosition": 0.0,
      "src.pokertool.modules.betfair_accuracy_improvements.BetfairROI": 0.0,
      "src.pokertool.modules.betfair_accuracy_improvements.SeatMapping": 0.0,
      "src.pokertool.modules.betfair_accuracy_improvements.PlayerNameExtractor": 0.0,
      "src.pokertool.modules.betfair_accuracy_improvements.CurrencyExtractor": 0.0,
      "src.pokertool.modules.betfair_accuracy_improvements.StackPotDistinguisher": 0.0,
      "src.pokertool.modules.betfair_accuracy_improvements.BetfairCardDetector": 0.0,
      "src.pokertool.modules.betfair_accuracy_improvements.DealerButtonDetector": 0.0,
      "src.pokertool.modules.betfair_accuracy_improvements.BetfairSeatMapper": 0.0,
      "src.pokertool.modules.betfair_accuracy_improvements.BetfairAccuracyEngine": 0.0,
      "src.pokertool.modules.betfair_accuracy_improvements.create_betfair_engine": 0.0,
      "src.pokertool.modules.browser_tab_capture": 0.0039001560062402497,
      "src.pokertool.modules.browser_tab_capture.ChromeTabCaptureError": 0.0,
      "src.pokertool.modules.browser_tab_capture.ChromeTabCaptureConfig": 0.0,
      "src.pokertool.modules.browser_tab_capture.ChromeTabCapture": 0.0,
      "src.pokertool.modules.browser_tab_capture.ChromeWindowCaptureConfig": 0.0,
      "src.pokertool.modules.browser_tab_capture.ChromeWindowCapture": 0.0,
      "src.pokertool.modules.power_features": 0.01014040561622465,
      "src.pokertool.modules.power_features.TableInfo": 0.0,
      "src.pokertool.modules.power_features.HandRecord": 0.0,
      "src.pokertool.modules.power_features.OpponentNote": 0.0,
      "src.pokertool.modules.power_features.SessionGoal": 0.0,
      "src.pokertool.modules.power_features.MultiTableManager": 0.0,
      "src.pokertool.modules.power_features.HandReplaySystem": 0.0,
      "src.pokertool.modules.power_features.RangeVsRangeCalculator": 0.0,
      "src.pokertool.modules.power_features.AutoNoteSystem": 0.0,
      "src.pokertool.modules.power_features.SessionGoalTracker": 0.0,
      "src.pokertool.modules.power_features.VoiceCommandHandler": 0.0,
      "src.pokertool.modules.power_features.SessionReportExporter": 0.0,
      "src.pokertool.modules.power_features.PowerFeaturesSystem": 0.0,
      "src.pokertool.modules.power_features.get_power_features_system": 0.0,
      "src.pokertool.modules.poker_screen_scraper": 0.0039001560062402497,
      "src.pokertool.modules.poker_screen_scraper.ScreenScraperBridge": 0.0,
      "src.pokertool.modules.poker_screen_scraper.PokerScreenScraper": 0.0,
      "src.pokertool.modules.poker_screen_scraper.create_scraper": 0.0,
      "src.pokertool.modules.poker_screen_scraper.test_scraper_functionality": 0.00078003120124805,
      "src.pokertool.modules.poker_screen_scraper.get_scraper_info": 0.0,
      "src.pokertool.modules.adaptive_ui_detector": 0.0093603744149766,
      "src.pokertool.modules.adaptive_ui_detector.RegionOfInterest": 0.0,
      "src.pokertool.modules.adaptive_ui_detector.BaselineState": 0.0,
      "src.pokertool.modules.adaptive_ui_detector.ComparisonResult": 0.0,
      "src.pokertool.modules.adaptive_ui_detector.AdaptiveUIDetector": 0.0,
      "src.pokertool.modules.adaptive_ui_detector._parse_resolution": 0.0,
      "src.pokertool.modules.adaptive_ui_detector._ensure_uint8": 0.0,
      "src.pokertool.modules.adaptive_ui_detector._to_grayscale": 0.0,
      "src.pokertool.modules.adaptive_ui_detector._average_hash": 0.00078003120124805,
      "src.pokertool.modules.adaptive_ui_detector._difference_hash": 0.00078003120124805,
      "src.pokertool.modules.adaptive_ui_detector._phash": 0.00078003120124805,
      "src.pokertool.modules.adaptive_ui_detector._hamming_distance": 0.0,
      "src.pokertool.modules.adaptive_ui_detector.create_detector": 0.0,
      "src.pokertool.modules.reliability_monitor": 0.0109204368174727,
      "src.pokertool.modules.reliability_monitor.HealthStatus": 0.0,
      "src.pokertool.modules.reliability_monitor.ComponentType": 0.0,
      "src.pokertool.modules.reliability_monitor.HealthMetric": 0.0,
      "src.pokertool.modules.reliability_monitor.ErrorReport": 0.0,
      "src.pokertool.modules.reliability_monitor.AutoRecoveryManager": 0.0,
      "src.pokertool.modules.reliability_monitor.GracefulDegradationManager": 0.0,
      "src.pokertool.modules.reliability_monitor.HealthMonitor": 0.0,
      "src.pokertool.modules.reliability_monitor.ErrorReporter": 0.0,
      "src.pokertool.modules.reliability_monitor.StatePersistenceManager": 0.0,
      "src.pokertool.modules.reliability_monitor.ConnectionQualityMonitor": 0.0,
      "src.pokertool.modules.reliability_monitor.MemoryLeakDetector": 0.0,
      "src.pokertool.modules.reliability_monitor.MultiSiteFallbackChain": 0.0,
      "src.pokertool.modules.reliability_monitor.ReliabilitySystem": 0.0,
      "src.pokertool.modules.reliability_monitor.get_reliability_system": 0.0,
      "src.pokertool.modules.hand_replay_system": 0.00858034321372855,
      "src.pokertool.modules.hand_replay_system.ActionType": 0.0,
      "src.pokertool.modules.hand_replay_system.Street": 0.0,
      "src.pokertool.modules.hand_replay_system.PlayerAction": 0.0,
      "src.pokertool.modules.hand_replay_system.ReplayFrame": 0.0,
      "src.pokertool.modules.hand_replay_system.Annotation": 0.0,
      "src.pokertool.modules.hand_replay_system.AnnotationManager": 0.0,
      "src.pokertool.modules.hand_replay_system.AnalysisData": 0.0,
      "src.pokertool.modules.hand_replay_system.AnalysisOverlay": 0.0,
      "src.pokertool.modules.hand_replay_system.ReplayAnimation": 0.0,
      "src.pokertool.modules.hand_replay_system.ShareManager": 0.0,
      "src.pokertool.modules.hand_replay_system.HandReplaySystem": 0.0,
      "src.pokertool.modules.poker_gui_enhanced": 0.0093603744149766,
      "src.pokertool.modules.poker_gui_enhanced.ValidationState": 0.0,
      "src.pokertool.modules.poker_gui_enhanced.UITheme": 0.0,
      "src.pokertool.modules.poker_gui_enhanced.UIState": 0.0,
      "src.pokertool.modules.poker_gui_enhanced.EnhancedCardEntry": 0.0,
      "src.pokertool.modules.poker_gui_enhanced.StatusBar": 0.0,
      "src.pokertool.modules.poker_gui_enhanced.VisualCard": 0.0,
      "src.pokertool.modules.poker_gui_enhanced.CardSelectionPanel": 0.0,
      "src.pokertool.modules.poker_gui_enhanced.TableVisualization": 0.0,
      "src.pokertool.modules.poker_gui_enhanced.EnhancedPokerAssistant": 0.0,
      "src.pokertool.modules.poker_gui_enhanced.initialise_db_if_needed": 0.0,
      "src.pokertool.modules.poker_gui_enhanced.open_db": 0.0,
      "src.pokertool.modules.poker_gui_enhanced._ensure_parent": 0.0,
      "src.pokertool.modules.multi_table_segmenter": 0.0039001560062402497,
      "src.pokertool.modules.multi_table_segmenter.DetectedObject": 0.0,
      "src.pokertool.modules.multi_table_segmenter.TableLayout": 0.0,
      "src.pokertool.modules.multi_table_segmenter.SegmentationResult": 0.0,
      "src.pokertool.modules.multi_table_segmenter.MultiTableSegmenter": 0.0,
      "src.pokertool.modules.multi_table_segmenter.create_segmenter": 0.0,
      "src.pokertool.modules.range_construction_tool": 0.0062402496099844,
      "src.pokertool.modules.range_construction_tool.RangeFormat": 0.0,
      "src.pokertool.modules.range_construction_tool.HandType": 0.0,
      "src.pokertool.modules.range_construction_tool.HandRange": 0.0,
      "src.pokertool.modules.range_construction_tool.RangeGrid": 0.0,
      "src.pokertool.modules.range_construction_tool.RangeComparator": 0.0,
      "src.pokertool.modules.range_construction_tool.RangeTemplate": 0.0,
      "src.pokertool.modules.range_construction_tool.RangeImportExport": 0.0,
      "src.pokertool.modules.range_construction_tool.RangeConstructionTool": 0.0,
      "src.pokertool.modules.poker_screen_scraper_betfair": 0.00858034321372855,
      "src.pokertool.modules.poker_screen_scraper_betfair.PokerSite": 0.0,
      "src.pokertool.modules.poker_screen_scraper_betfair.TableRegion": 0.0,
      "src.pokertool.modules.poker_screen_scraper_betfair.SeatInfo": 0.0,
      "src.pokertool.modules.poker_screen_scraper_betfair.TableState": 0.0,
      "src.pokertool.modules.poker_screen_scraper_betfair.DetectionResult": 0.0,
      "src.pokertool.modules.poker_screen_scraper_betfair.Card": 0.0,
      "src.pokertool.modules.poker_screen_scraper_betfair.BetfairPokerDetector": 0.0,
      "src.pokertool.modules.poker_screen_scraper_betfair.UniversalPokerDetector": 0.0,
      "src.pokertool.modules.poker_screen_scraper_betfair.PokerScreenScraper": 0.0,
      "src.pokertool.modules.poker_screen_scraper_betfair.create_scraper": 0.0,
      "src.pokertool.modules.poker_screen_scraper_betfair.test_scraper_betfair": 0.00078003120124805
    },
    "strongly_connected_components": 1283
  }
}
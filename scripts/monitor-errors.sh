#!/bin/bash

# Centralized Error and Warning Monitor for Pokertool
# This script aggregates all errors and warnings from backend and frontend into one clear log

PROJECT_ROOT="/Users/georgeridout/Documents/github/pokertool"
ERROR_LOG="$PROJECT_ROOT/logs/errors-and-warnings.log"
BACKEND_LOG="$PROJECT_ROOT/logs/pokertool_master.log"
FRONTEND_LOG="$PROJECT_ROOT/pokertool-frontend/build-output.log"
APP_RUN_LOG="$PROJECT_ROOT/logs/app-run.log"

# Color codes for terminal output
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "=========================================="
echo "Pokertool Centralized Error Monitor"
echo "=========================================="
echo "Monitoring:"
echo "  - Backend: $BACKEND_LOG"
echo "  - Frontend: $FRONTEND_LOG"
echo "  - App Runtime: $APP_RUN_LOG"
echo ""
echo "Output: $ERROR_LOG"
echo "=========================================="
echo ""

# Create/clear the centralized error log
echo "# Pokertool Errors and Warnings - $(date)" > "$ERROR_LOG"
echo "# Auto-generated by monitor-errors.sh" >> "$ERROR_LOG"
echo "========================================" >> "$ERROR_LOG"
echo "" >> "$ERROR_LOG"

# Function to extract errors and warnings
extract_errors_warnings() {
    local source_log=$1
    local source_name=$2

    if [ -f "$source_log" ]; then
        echo "## $source_name - $(date)" >> "$ERROR_LOG"
        echo "---" >> "$ERROR_LOG"

        # Extract ERROR and WARNING lines
        grep -E "ERROR|WARNING|error|warning|Error|Warning|\[eslint\]" "$source_log" | tail -100 >> "$ERROR_LOG"

        echo "" >> "$ERROR_LOG"
        echo "" >> "$ERROR_LOG"
    fi
}

# Extract from all log sources
extract_errors_warnings "$BACKEND_LOG" "Backend (Python/API)"
extract_errors_warnings "$APP_RUN_LOG" "Application Runtime"
extract_errors_warnings "$FRONTEND_LOG" "Frontend (React/TypeScript)"

# Summary
echo "========================================" >> "$ERROR_LOG"
echo "# Summary" >> "$ERROR_LOG"
echo "Generated at: $(date)" >> "$ERROR_LOG"
echo "========================================" >> "$ERROR_LOG"

# Count errors and warnings
ERROR_COUNT=$(grep -c "ERROR\|error" "$ERROR_LOG" || echo "0")
WARNING_COUNT=$(grep -c "WARNING\|warning\|\[eslint\]" "$ERROR_LOG" || echo "0")

echo ""
echo "${RED}Errors found: $ERROR_COUNT${NC}"
echo "${YELLOW}Warnings found: $WARNING_COUNT${NC}"
echo ""
echo "Full report saved to: $ERROR_LOG"
echo ""
echo "To view the log:"
echo "  cat $ERROR_LOG"
echo ""
echo "To monitor in real-time:"
echo "  tail -f $ERROR_LOG"
echo ""

/**
 * MicroChartsGrid Animations
 *
 * Smooth CSS animations for panel transitions, expansions, and state changes
 */

/* Panel entrance animations */
@keyframes fadeInSlideUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInSlideDown {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInSlideLeft {
  from {
    opacity: 0;
    transform: translateX(20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInSlideRight {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInScale {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Panel expansion animations */
@keyframes expandPanel {
  from {
    max-height: 0;
    opacity: 0;
  }
  to {
    max-height: 1000px;
    opacity: 1;
  }
}

@keyframes collapsePanel {
  from {
    max-height: 1000px;
    opacity: 1;
  }
  to {
    max-height: 0;
    opacity: 0;
  }
}

/* Grid item animations */
.gridItem {
  animation: fadeInSlideUp 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.gridItem:nth-child(1) {
  animation-delay: 0ms;
}

.gridItem:nth-child(2) {
  animation-delay: 50ms;
}

.gridItem:nth-child(3) {
  animation-delay: 100ms;
}

.gridItem:nth-child(4) {
  animation-delay: 150ms;
}

/* Panel container */
.panel {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
}

.panel:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
}

/* Panel header animations */
.panelHeader {
  transition: background-color 0.2s ease;
}

.panelHeader:hover {
  background-color: rgba(255, 255, 255, 0.05);
}

/* Panel content animations */
.panelContent {
  animation: fadeInSlideUp 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.panelContentExpanded {
  animation: expandPanel 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.panelContentCollapsed {
  animation: collapsePanel 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Chip animations */
.statusChip {
  transition: all 0.2s ease;
  animation: fadeInScale 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.statusChip:hover {
  transform: scale(1.05);
}

/* Shimmer effect for loading states */
@keyframes shimmer {
  0% {
    background-position: -1000px 0;
  }
  100% {
    background-position: 1000px 0;
  }
}

.loading {
  background: linear-gradient(
    90deg,
    rgba(255, 255, 255, 0.03) 25%,
    rgba(255, 255, 255, 0.08) 50%,
    rgba(255, 255, 255, 0.03) 75%
  );
  background-size: 1000px 100%;
  animation: shimmer 2s infinite;
}

/* Icon rotation for expand/collapse */
.expandIcon {
  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.expandIconRotated {
  transform: rotate(180deg);
}

/* Pulse animation for new data */
@keyframes pulse {
  0%, 100% {
    box-shadow: 0 0 0 0 rgba(76, 175, 80, 0.4);
  }
  50% {
    box-shadow: 0 0 0 10px rgba(76, 175, 80, 0);
  }
}

.newData {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1);
}

/* Glow effect for important panels */
@keyframes glow {
  0%, 100% {
    box-shadow: 0 0 5px rgba(33, 150, 243, 0.3);
  }
  50% {
    box-shadow: 0 0 20px rgba(33, 150, 243, 0.5);
  }
}

.highlighted {
  animation: glow 2s infinite ease-in-out;
}

/* Smooth height transitions */
.smoothHeight {
  transition: max-height 0.3s cubic-bezier(0.4, 0, 0.2, 1),
              opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Stagger animation for grid items */
.staggered {
  animation: fadeInSlideUp 0.5s cubic-bezier(0.4, 0, 0.2, 1) both;
}

.staggered:nth-child(1) { animation-delay: 0.05s; }
.staggered:nth-child(2) { animation-delay: 0.1s; }
.staggered:nth-child(3) { animation-delay: 0.15s; }
.staggered:nth-child(4) { animation-delay: 0.2s; }
.staggered:nth-child(5) { animation-delay: 0.25s; }

/* Control button animations */
.controlButton {
  transition: all 0.2s ease;
}

.controlButton:hover {
  transform: scale(1.1);
  background-color: rgba(255, 255, 255, 0.1);
}

.controlButton:active {
  transform: scale(0.95);
}

/* Empty state animations */
.emptyState {
  animation: fadeInScale 0.5s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Backdrop blur animation */
@keyframes blurIn {
  from {
    backdrop-filter: blur(0px);
  }
  to {
    backdrop-filter: blur(10px);
  }
}

.backdropBlur {
  animation: blurIn 0.3s ease;
}

/* Card flip animation for panel state changes */
@keyframes flipIn {
  0% {
    transform: rotateX(-90deg);
    opacity: 0;
  }
  100% {
    transform: rotateX(0deg);
    opacity: 1;
  }
}

.flipPanel {
  animation: flipIn 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  transform-style: preserve-3d;
}

/* Slide animations for panel switching */
@keyframes slideInLeft {
  from {
    transform: translateX(-100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideInRight {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

.slideLeft {
  animation: slideInLeft 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.slideRight {
  animation: slideInRight 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Bounce animation for attention-grabbing */
@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-10px);
  }
  60% {
    transform: translateY(-5px);
  }
}

.bounce {
  animation: bounce 1s ease;
}

/* Ripple effect for interactions */
@keyframes ripple {
  0% {
    transform: scale(0);
    opacity: 1;
  }
  100% {
    transform: scale(4);
    opacity: 0;
  }
}

.ripple {
  position: relative;
  overflow: hidden;
}

.ripple::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 10px;
  height: 10px;
  background: rgba(255, 255, 255, 0.5);
  border-radius: 50%;
  transform: translate(-50%, -50%) scale(0);
  animation: ripple 0.6s ease-out;
}

# POKERTOOL-HEADER-START
# ---
# schema: pokerheader.v1
# project: pokertool
# file: pokertool-frontend/node_modules/webpack/lib/async-modules/InferAsyncModulesPlugin.js
# version: v28.0.0
# last_commit: '2025-09-23T07:20:25+01:00'
# fixes:
# - date: '2025-09-25'
#   summary: Enhanced enterprise documentation and comprehensive unit tests added
# ---
# POKERTOOL-HEADER-END
/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

"use strict";

const HarmonyImportDependency = require("../dependencies/HarmonyImportDependency");

/** @typedef {import("../Compiler")} Compiler */
/** @typedef {import("../Module")} Module */

const PLUGIN_NAME = "InferAsyncModulesPlugin";

class InferAsyncModulesPlugin {
	/**
	 * Apply the plugin
	 * @param {Compiler} compiler the compiler instance
	 * @returns {void}
	 */
	apply(compiler) {
		compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation) => {
			const { moduleGraph } = compilation;
			compilation.hooks.finishModules.tap(PLUGIN_NAME, (modules) => {
				/** @type {Set<Module>} */
				const queue = new Set();
				for (const module of modules) {
					if (module.buildMeta && module.buildMeta.async) {
						queue.add(module);
					}
				}
				for (const module of queue) {
					moduleGraph.setAsync(module);
					for (const [
						originModule,
						connections
					] of moduleGraph.getIncomingConnectionsByOriginModule(module)) {
						if (
							connections.some(
								(c) =>
									c.dependency instanceof HarmonyImportDependency &&
									c.isTargetActive(undefined)
							)
						) {
							queue.add(/** @type {Module} */ (originModule));
						}
					}
				}
			});
		});
	}
}

module.exports = InferAsyncModulesPlugin;

{"ast":null,"code":"import{useState,useEffect,useCallback,useRef}from'react';import io from'socket.io-client';export const useWebSocket=url=>{const[connected,setConnected]=useState(false);const[messages,setMessages]=useState([]);const socketRef=useRef(null);useEffect(()=>{// Initialize socket connection\nsocketRef.current=io(url,{transports:['websocket'],reconnection:true,reconnectionAttempts:5,reconnectionDelay:1000});const socket=socketRef.current;socket.on('connect',()=>{console.log('WebSocket connected');setConnected(true);});socket.on('disconnect',()=>{console.log('WebSocket disconnected');setConnected(false);});socket.on('message',data=>{const message={type:data.type||'message',data:data,timestamp:Date.now()};setMessages(prev=>[...prev,message]);});// Handle specific event types\nsocket.on('table_update',data=>{const message={type:'table_update',data:data,timestamp:Date.now()};setMessages(prev=>[...prev,message]);});socket.on('hand_complete',data=>{const message={type:'hand_complete',data:data,timestamp:Date.now()};setMessages(prev=>[...prev,message]);});socket.on('stats_update',data=>{const message={type:'stats_update',data:data,timestamp:Date.now()};setMessages(prev=>[...prev,message]);});socket.on('error',error=>{console.error('WebSocket error:',error);const message={type:'error',data:error,timestamp:Date.now()};setMessages(prev=>[...prev,message]);});return()=>{if(socket){socket.disconnect();}};},[url]);const sendMessage=useCallback(message=>{if(socketRef.current&&socketRef.current.connected){socketRef.current.emit('message',message);}else{console.warn('WebSocket is not connected');}},[]);const clearMessages=useCallback(()=>{setMessages([]);},[]);return{connected,messages,sendMessage,clearMessages};};// Custom hook for subscribing to specific message types\nexport const useWebSocketSubscription=(messages,messageType)=>{const[filteredMessages,setFilteredMessages]=useState([]);useEffect(()=>{const filtered=messages.filter(msg=>msg.type===messageType);setFilteredMessages(filtered);},[messages,messageType]);return filteredMessages;};","map":{"version":3,"names":["useState","useEffect","useCallback","useRef","io","useWebSocket","url","connected","setConnected","messages","setMessages","socketRef","current","transports","reconnection","reconnectionAttempts","reconnectionDelay","socket","on","console","log","data","message","type","timestamp","Date","now","prev","error","disconnect","sendMessage","emit","warn","clearMessages","useWebSocketSubscription","messageType","filteredMessages","setFilteredMessages","filtered","filter","msg"],"sources":["/Users/georgeridout/Documents/github/pokertool/pokertool-frontend/src/hooks/useWebSocket.ts"],"sourcesContent":["import { useState, useEffect, useCallback, useRef } from 'react';\nimport io, { Socket } from 'socket.io-client';\n\nexport interface WebSocketMessage {\n  type: string;\n  data: any;\n  timestamp: number;\n}\n\ninterface UseWebSocketReturn {\n  connected: boolean;\n  messages: WebSocketMessage[];\n  sendMessage: (message: any) => void;\n  clearMessages: () => void;\n}\n\nexport const useWebSocket = (url: string): UseWebSocketReturn => {\n  const [connected, setConnected] = useState(false);\n  const [messages, setMessages] = useState<WebSocketMessage[]>([]);\n  const socketRef = useRef<Socket | null>(null);\n\n  useEffect(() => {\n    // Initialize socket connection\n    socketRef.current = io(url, {\n      transports: ['websocket'],\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n    });\n\n    const socket = socketRef.current;\n\n    socket.on('connect', () => {\n      console.log('WebSocket connected');\n      setConnected(true);\n    });\n\n    socket.on('disconnect', () => {\n      console.log('WebSocket disconnected');\n      setConnected(false);\n    });\n\n    socket.on('message', (data: any) => {\n      const message: WebSocketMessage = {\n        type: data.type || 'message',\n        data: data,\n        timestamp: Date.now(),\n      };\n      setMessages(prev => [...prev, message]);\n    });\n\n    // Handle specific event types\n    socket.on('table_update', (data: any) => {\n      const message: WebSocketMessage = {\n        type: 'table_update',\n        data: data,\n        timestamp: Date.now(),\n      };\n      setMessages(prev => [...prev, message]);\n    });\n\n    socket.on('hand_complete', (data: any) => {\n      const message: WebSocketMessage = {\n        type: 'hand_complete',\n        data: data,\n        timestamp: Date.now(),\n      };\n      setMessages(prev => [...prev, message]);\n    });\n\n    socket.on('stats_update', (data: any) => {\n      const message: WebSocketMessage = {\n        type: 'stats_update',\n        data: data,\n        timestamp: Date.now(),\n      };\n      setMessages(prev => [...prev, message]);\n    });\n\n    socket.on('error', (error: any) => {\n      console.error('WebSocket error:', error);\n      const message: WebSocketMessage = {\n        type: 'error',\n        data: error,\n        timestamp: Date.now(),\n      };\n      setMessages(prev => [...prev, message]);\n    });\n\n    return () => {\n      if (socket) {\n        socket.disconnect();\n      }\n    };\n  }, [url]);\n\n  const sendMessage = useCallback((message: any) => {\n    if (socketRef.current && socketRef.current.connected) {\n      socketRef.current.emit('message', message);\n    } else {\n      console.warn('WebSocket is not connected');\n    }\n  }, []);\n\n  const clearMessages = useCallback(() => {\n    setMessages([]);\n  }, []);\n\n  return {\n    connected,\n    messages,\n    sendMessage,\n    clearMessages,\n  };\n};\n\n// Custom hook for subscribing to specific message types\nexport const useWebSocketSubscription = (\n  messages: WebSocketMessage[],\n  messageType: string\n): WebSocketMessage[] => {\n  const [filteredMessages, setFilteredMessages] = useState<WebSocketMessage[]>([]);\n\n  useEffect(() => {\n    const filtered = messages.filter(msg => msg.type === messageType);\n    setFilteredMessages(filtered);\n  }, [messages, messageType]);\n\n  return filteredMessages;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
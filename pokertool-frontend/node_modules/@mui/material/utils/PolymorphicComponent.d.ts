# POKERTOOL-HEADER-START
# ---
# schema: pokerheader.v1
# project: pokertool
# file: pokertool-frontend/node_modules/@mui/material/utils/PolymorphicComponent.d.ts
# version: v28.0.0
# last_commit: '2025-09-25T18:50:22+01:00'
# fixes:
# - date: '2025-09-25'
#   summary: Enhanced enterprise documentation and comprehensive unit tests added
# ---
# POKERTOOL-HEADER-END
import * as React from 'react';
import { DistributiveOmit, OverridableTypeMap } from '@mui/types';
/**
 * A component whose root component can be controlled explicitly with a generic type parameter.
 * Adjusts valid props based on the type of `RootComponent`.
 *
 * @template TypeMap The interface the defines the props and a default root element of the component.
 */
export type PolymorphicComponent<TypeMap extends OverridableTypeMap> = {
    <RootComponent extends React.ElementType = TypeMap['defaultComponent']>(props: PolymorphicProps<TypeMap, RootComponent>): React.JSX.Element | null;
    propTypes?: any;
    displayName?: string | undefined;
};
/**
 * Own props of the component augmented with props of the root component.
 */
export type PolymorphicProps<TypeMap extends OverridableTypeMap, RootComponent extends React.ElementType> = TypeMap['props'] & DistributiveOmit<React.ComponentPropsWithRef<RootComponent>, keyof TypeMap['props']>;

# POKERTOOL-HEADER-START
# ---
# schema: pokerheader.v1
# project: pokertool
# file: pokertool-frontend/node_modules/react-redux/es/connect/mergeProps.d.ts
# version: v28.0.0
# last_commit: '2025-09-25T18:50:22+01:00'
# fixes:
# - date: '2025-09-25'
#   summary: Enhanced enterprise documentation and comprehensive unit tests added
# ---
# POKERTOOL-HEADER-END
import type { Action, Dispatch } from 'redux';
import type { MergeProps } from './selectorFactory';
import type { EqualityFn } from '../types';
export declare function defaultMergeProps<TStateProps, TDispatchProps, TOwnProps, TMergedProps>(stateProps: TStateProps, dispatchProps: TDispatchProps, ownProps: TOwnProps): TMergedProps;
export declare function wrapMergePropsFunc<TStateProps, TDispatchProps, TOwnProps, TMergedProps>(mergeProps: MergeProps<TStateProps, TDispatchProps, TOwnProps, TMergedProps>): (dispatch: Dispatch<Action<unknown>>, options: {
    readonly displayName: string;
    readonly areMergedPropsEqual: EqualityFn<TMergedProps>;
}) => MergeProps<TStateProps, TDispatchProps, TOwnProps, TMergedProps>;
export declare function mergePropsFactory<TStateProps, TDispatchProps, TOwnProps, TMergedProps>(mergeProps?: MergeProps<TStateProps, TDispatchProps, TOwnProps, TMergedProps>): ((dispatch: Dispatch<Action<unknown>>, options: {
    readonly wrappedComponentName: string;
}) => never) | ((dispatch: Dispatch<Action<unknown>>, options: {
    readonly displayName: string;
    readonly areMergedPropsEqual: EqualityFn<TMergedProps>;
}) => MergeProps<TStateProps, TDispatchProps, TOwnProps, TMergedProps>);
